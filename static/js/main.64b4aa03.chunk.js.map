{"version":3,"sources":["actions/types.js","config.js","actions/index.js","helpers/dateUtils.js","components/DateRange.react.js","components/DatePicker.react.js","components/NewTrip.react.js","components/FriendChip.react.js","components/TripCard.react.js","components/Spinner.react.js","pages/TripDashboard.react.js","components/TripPanel.react.js","pages/TripDetail.react.js","components/FriendStatusButton.react.js","components/FriendSearch.react.js","pages/FriendsList.react.js","components/LocationMap.react.js","components/TelegramLink.react.js","pages/UserProfile.react.js","pages/Explore.react.js","components/PrivateRoute.react.js","components/Login.react.js","components/Header.react.js","errorMessages.js","App.js","serviceWorker.js","reducers/index.js","middleware/api.js","actions/api.js","store/index.js","reducers/util.js","index.js"],"names":["FETCH_TRIPS","FETCH_TRIP","SET_TRIPS","CREATE_TRIP","UPDATE_TRIP","DELETE_TRIP","REMOVE_TRIP","FETCH_CITIES","SET_CITIES","FETCH_FRIENDS","CREATE_FRIEND_REQ","ACCEPT_FRIEND_REQ","FETCH_USER","SET_USERS","LOGOUT","API","FETCH_EXPLORE_SUGGESTIONS","SET_EXPLORE_SUGGESTIONS","apiUrl","process","setSuggestions","data","type","payload","fetchFriends","apiAction","url","concat","onSuccess","setUsers","onFailure","console","log","label","acceptFriendRequest","id","method","Object","objectSpread","is_friend","is_pending_friend","nextAction","fetchTrips","requestFriendship","have_requested_friend","fetchCities","setCities","qs","end_date_after","format","setTrips","_ref","_ref$url","_ref$method","_ref$data","_ref$accessToken","accessToken","_ref$onSuccess","_ref$onFailure","_ref$nextAction","_ref$label","_ref$headersOverride","headersOverride","determineNextFreeDate","trips","n","nextFreeDate","reduce","lastChecked","nextTrip","isBefore","addDays","start_date","Date","end_date","now","isFutureTrip","t","differenceInDays","isPastTrip","MONTHS","STYLES","margin","width","DateRange","hideDaysCount","className","react_default","a","createElement","data-toggle","style","getDate","getMonth","height","fontSize","textAlign","marginTop","DatePicker","disabledDates","onChange","value","disabled","rangeClassName","DateRange_react","build_default","options","mode","disable","dateFormat","wrap","opacity","placeholder","data-input","MenuList","props","rows","children","dist_es","flexGrow","rowHeight","rowCount","length","rowRenderer","key","index","isScrolling","isVisible","convertToSelectOpts","i","map","index_es","code","country_code","svg","name","NewTrip","_ref2","cities","onCreateTrip","_useState","useState","_useState2","slicedToArray","dates","setDates","_useState3","_useState4","city","setCity","useEffect","join","citiesList","keys","all","cId","sort","b","population","react_select_esm","styles","container","menu","provided","top","components","_MenuList","assign","window","innerWidth","isSearchAble","isLoading","isFetching","DatePicker_react","onClick","e","preventDefault","parseInt","split","FriendChip","first_name","last_name","username","photo_url","photoOnly","photoSrc","tooltipText","alt","src","Link","to","ExtraFriends","_ref3","allFriends","numDisplayed","withRouter","onUpdate","onDelete","viewOnly","objectWithoutProperties","matches","promptDel","setPromptDel","disabledDatesMinusThoseForThisTrip","filter","from","subDays","react","WrapperComponent","d","slice","m","FriendChip_react","TripCard_react_ExtraFriends","Spinner","TripsList","updateTrip","deleteTrip","Spinner_react","fTrips","pTrips","trip","TripCard_react","connect","users","createTrip","removeTrip","isShowingPastTrips","showPastTrips","hasFetched","populatedTrips","ids","tId","match","_match$split","_match$split2","uId","start","end","determineAlreadySelectedTripDates","NewTrip_react","isLoadingCities","OverlappingFriends","TripPanel_react_OverlapGraph","OverlapGraph","TripPanel_react_OverlapBar","OverlapBar","_ref4","totalLength","daysFromStart","daysOverlap","getOverlappingDaysInRanges","Math","floor","max","TripPanel","isActive","TripPanel_react_OverlappingFriends","MainPanel","TripPanel_react","fetchTrip","tripId","params","TripDetail_react_MainPanel","FriendshipStatus","user","onRequest","onAccept","is_you","onRequestFriend","onAcceptFriend","results","setResults","phrase","setPhrase","source","axios","CancelToken","get","cancelToken","token","withCredentials","then","catch","err","message","cancel","target","r","friendObj","FriendStatusButton_react","activeUser","friendList","accepted","f","hasFriends","pending","hasPendingFriends","FriendSearch_react","FriendsList_react_MainPanel","locationIcon","divIcon","html","iconSize","iconAnchor","popupAnchor","getDaysInRange","locations","diff","abs","percentageFromDate","date","daysInRange","round","dateFromPercentage","percentage","getLatLong","latitude","longitude","findBoundingBox","bounds","min","apply","isWithinDaysN","dateSelection","dateSpread","isWithinRange","LocationMap","userId","setLocations","activeLocation","setActiveLocation","_useState5","_useState6","setDateSlider","res","status","filteredLocations","fLocations","pLocations","Map","TileLayer","attribution","Polyline","positions","color","Marker","position","icon","Popup","onOpen","onClose","find","l","TelegramLink","href","rel","toUpperCase","TelegramLink_react","LocationMap_react","UserProfile_react","fetchUser","UserProfile_react_MainPanel","TripDashboard_react","CONTINENT_OPTIONS","SuggestionList","suggestions","u","fetchExploreSuggestions","continent","setContinent","populatedSuggestions","sId","s","us","Explore_react_SuggestionList","withCookies","Component","component","rest","Route","render","cookies","Redirect","pathname","Login","state","errMsg","handleResponse","stringify","_this","onLogin","response","errors","setState","paddingRight","paddingLeft","react_telegram_login_build_default","dataOnauth","this","botName","MobileNavbar","onLogout","history","isOpen","setIsOpen","navigateTo","push","DesktopNavbar","Header_react_MobileNavbar","Header_react_DesktopNavbar","SERVER_ERR","NOT_FOUND","App","remove","logout","post","_this$props","location","gtag","listen","_this2","error","App_ErrorPage","msg","Header_react","bind","Switch","path","Login_react","PrivateRoute_react","exact","TripDashboard","TripDetail","FriendsList","Explore","UserProfile","hideLogo","renderAuthorTag","ErrorPage","padding","Boolean","hostname","schema","Entity","idAttribute","v","schemas","processStrategy","parent","initialState","ENTITIES","insertEntities","entity","overwrite","arguments","undefined","Array","isArray","normData","normalize","newState","forEach","indexOf","toConsumableArray","Set","entities","result","existingIds","TRIPS_LABELS","CITIES_LABELS","USERS_LABELS","apiMiddleware","dispatch","next","action","_action$payload","headers","dataOrParams","includes","defaults","baseURL","REACT_APP_BASE_URL","common","apiStart","request","defineProperty","apiError","finally","apiEnd","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reduceError","applyMiddleware","thunkMiddleware","ReactDOM","es","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64b4aa03.chunk.js","sourcesContent":["export const FETCH_TRIPS = 'FETCH_TRIPS';\nexport const FETCH_TRIP = 'FETCH_TRIP';\nexport const SET_TRIPS = 'SET_TRIPS';\nexport const CREATE_TRIP = 'CREATE_TRIP';\nexport const UPDATE_TRIP = 'UPDATE_TRIP';\nexport const DELETE_TRIP = 'DELETE_TRIP';\nexport const REMOVE_TRIP = 'REMOVE_TRIP';\n\nexport const FETCH_CITIES = 'FETCH_CITIES';\nexport const SET_CITIES = 'SET_CITIES';\n\nexport const FETCH_FRIENDS = 'FETCH_FRIENDS';\nexport const SET_FRIENDS = 'SET_FRIENDS';\nexport const CREATE_FRIEND_REQ = 'CREATE_FRIEND_REQ';\nexport const ACCEPT_FRIEND_REQ = 'ACCEPT_FRIEND_REQ';\n\nexport const FETCH_USER = 'FETCH_USER';\nexport const SET_USERS = 'SET_USERS';\n\nexport const LOGOUT = 'LOGOUT';\nexport const API = 'API';\nexport const API_START = 'API_START';\nexport const API_END = 'API_END';\nexport const ACCESS_DENIED = 'ACCESS_DENIED';\nexport const API_ERROR = 'API_ERROR';\n\nexport const FETCH_EXPLORE_SUGGESTIONS = 'FETCH_EXPLORE_SUGGESTIONS';\nexport const SET_EXPLORE_SUGGESTIONS = 'SET_EXPLORE_SUGGESTIONS';\n\nexport const ENTITY_CITIES = 'ENTITY::CITIES';\nexport const ENTITY_TRIPS = 'ENTITY::TRIPS';\n","//\n// Expose friendly names for .env file variables\n//\nexport const apiUrl = process.env.REACT_APP_API_URL;\nexport const botName = process.env.REACT_APP_TELEGRAM_BOT;\nexport const gaEnabled = process.env.REACT_APP_GA_ENABLED;\n","import {\n  API,\n  LOGOUT,\n  FETCH_EXPLORE_SUGGESTIONS,\n  SET_EXPLORE_SUGGESTIONS,\n  FETCH_TRIPS,\n  FETCH_TRIP,\n  SET_TRIPS,\n  CREATE_TRIP,\n  UPDATE_TRIP,\n  DELETE_TRIP,\n  REMOVE_TRIP,\n  FETCH_FRIENDS,\n  CREATE_FRIEND_REQ,\n  ACCEPT_FRIEND_REQ,\n  FETCH_USER,\n  SET_USERS,\n  FETCH_CITIES,\n  SET_CITIES\n} from './types';\n\nimport format from 'date-fns/format';\n\nimport { apiUrl } from '../config';\n\nexport function logout() {\n  return {\n    type: LOGOUT\n  };\n}\n\nexport function setSuggestions(data) {\n  return {\n    type: SET_EXPLORE_SUGGESTIONS,\n    payload: data\n  };\n}\n\nexport function fetchExploreSuggestions(data) {\n  const qs = `?start_date=${data.start_date}&end_date=${data.end_date}`;\n\n  return apiAction({\n    url: `${apiUrl}/explore/${data.continent}/${qs}`,\n    onSuccess: setSuggestions,\n    onFailure: () => console.log('Error occured loading explore suggestions'),\n    label: FETCH_EXPLORE_SUGGESTIONS\n  });\n}\n\nexport function fetchFriends() {\n  return apiAction({\n    url: `${apiUrl}/u/friends/`,\n    onSuccess: setUsers,\n    onFailure: () => console.log('Error occured loading friends'),\n    label: FETCH_FRIENDS\n  });\n}\n\nexport function acceptFriendRequest(data) {\n  return apiAction({\n    url: `${apiUrl}/u/${data.id}/friends/`,\n    method: 'PUT',\n    // HACK: Need the API to return the updated user object\n    onSuccess: () =>\n      setUsers({\n        data: {\n          ...data,\n          is_friend: true,\n          is_pending_friend: false\n        }\n      }),\n    nextAction: fetchTrips,\n    onFailure: () => console.log('Error occured accepting friendship request'),\n    data: data,\n    label: ACCEPT_FRIEND_REQ\n  });\n}\n\nexport function requestFriendship(data) {\n  return apiAction({\n    url: `${apiUrl}/u/${data.id}/friends/`,\n    method: 'POST',\n    // HACK: Need the API to return the updated user object\n    onSuccess: () =>\n      setUsers({\n        data: {\n          ...data,\n          have_requested_friend: true\n        }\n      }),\n    onFailure: () => console.log('Error occured requesting friendship'),\n    data: data,\n    label: CREATE_FRIEND_REQ\n  });\n}\n\nexport function fetchUser(id) {\n  return apiAction({\n    url: `${apiUrl}/u/${id}/`,\n    onSuccess: setUsers,\n    onFailure: () => console.log('Error occured loading user', id),\n    label: FETCH_USER\n  });\n}\n\nexport function setUsers(data) {\n  return {\n    type: SET_USERS,\n    payload: data\n  };\n}\n\nexport function fetchCities() {\n  return apiAction({\n    url: `${apiUrl}/cities/`,\n    onSuccess: setCities,\n    onFailure: () => console.log('Error occured loading cities'),\n    label: FETCH_CITIES\n  });\n}\n\nfunction setCities(data) {\n  return {\n    type: SET_CITIES,\n    payload: data\n  };\n}\n\nexport function fetchTrip(id) {\n  return apiAction({\n    url: `${apiUrl}/trips/${id}`,\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured loading trips'),\n    label: FETCH_TRIP\n  });\n}\n\nexport function fetchTrips(data) {\n  // Optional timeframe filter\n  const qs =\n    data && data.end_date_after\n      ? `end_date_after=${format(data.end_date_after, 'YYYY-MM-DD')}`\n      : '';\n\n  return apiAction({\n    url: `${apiUrl}/trips/?${qs}`,\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured loading trips'),\n    label: FETCH_TRIPS\n  });\n}\n\nfunction setTrips(data) {\n  return {\n    type: SET_TRIPS,\n    payload: data\n  };\n}\n\nfunction removeTrip(data) {\n  return {\n    type: REMOVE_TRIP,\n    payload: data\n  };\n}\n\nexport function createTrip(data) {\n  return apiAction({\n    url: `${apiUrl}/trips/`,\n    method: 'POST',\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured creating trip'),\n    data: data,\n    label: CREATE_TRIP\n  });\n}\n\nexport function updateTrip(data) {\n  return apiAction({\n    url: `${apiUrl}/trips/${data.id}`,\n    method: 'PUT',\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured updating trip'),\n    data: data,\n    label: UPDATE_TRIP\n  });\n}\n\nexport function deleteTrip(data) {\n  return apiAction({\n    url: `${apiUrl}/trips/${data.id}`,\n    method: 'DELETE',\n    onFailure: () => console.log('Error occured deleting trip'),\n    onSuccess: () => removeTrip(data),\n    label: DELETE_TRIP\n  });\n}\n\nfunction apiAction({\n  url = '',\n  method = 'GET',\n  data = null,\n  accessToken = null,\n  onSuccess = () => {},\n  onFailure = () => {},\n  nextAction = () => {},\n  label = '',\n  headersOverride = null\n}) {\n  return {\n    type: API,\n    payload: {\n      url,\n      method,\n      data,\n      accessToken,\n      onSuccess,\n      onFailure,\n      label,\n      headersOverride,\n      nextAction\n    }\n  };\n}\n","import isWithinRange from 'date-fns/is_within_range';\nimport differenceInDays from 'date-fns/difference_in_days';\nimport isBefore from 'date-fns/is_before';\nimport addDays from 'date-fns/add_days';\nimport subDays from 'date-fns/sub_days';\n\n// Disable any dates that you already have trips on (allowing 1 day overlap)\nexport function determineAlreadySelectedTripDates(trips) {\n  return trips.map(t => ({\n    from: addDays(t.start_date, 1),\n    to: subDays(t.end_date, 1)\n  }));\n}\n\n// Determine the next gap in the dates of n days\nexport function determineNextFreeDate(trips, n) {\n  const nextFreeDate = trips.reduce((lastChecked, nextTrip) => {\n    // Only allow a gap to be auto-selected if there are n days available\n    if (isBefore(addDays(lastChecked, n - 1), nextTrip.start_date)) {\n      return lastChecked;\n    }\n\n    return new Date(nextTrip.end_date);\n  }, Date.now());\n  return [nextFreeDate, addDays(nextFreeDate, n)];\n}\n\nexport const isFutureTrip = t => differenceInDays(t.end_date, new Date()) >= 0;\nexport const isPastTrip = t => differenceInDays(t.end_date, new Date()) < 0;\nexport const isCurrentTrip = t =>\n  isWithinRange(new Date(), t.start_date, t.end_date);\n","import React from 'react';\n\nimport getMonth from 'date-fns/get_month';\nimport getDate from 'date-fns/get_date';\nimport differenceInDays from 'date-fns/difference_in_days';\n\nconst MONTHS = [\n  'JAN',\n  'FEB',\n  'MAR',\n  'APR',\n  'MAY',\n  'JUN',\n  'JUL',\n  'AUG',\n  'SEP',\n  'OCT',\n  'NOV',\n  'DEC'\n];\n\nconst STYLES = {\n  margin: 'auto',\n  width: 'fit-content'\n};\n\nconst DateRange = ({ start_date, end_date, hideDaysCount, className }) => (\n  <div\n    data-toggle\n    className={`uk-flex date-range ${className || ''}`}\n    style={STYLES}\n  >\n    <div>\n      <b>\n        {getDate(start_date)} <br /> {MONTHS[getMonth(start_date)]}\n      </b>\n    </div>\n    <div>\n      <b>\n        {end_date && getDate(end_date)} <br /> {MONTHS[getMonth(end_date)]}\n      </b>\n    </div>\n    {!hideDaysCount && (\n      <p\n        style={{\n          width: 92,\n          height: 42,\n          fontSize: 16,\n          textAlign: 'center',\n          margin: 2,\n          marginTop: 10\n        }}\n      >\n        {end_date ? differenceInDays(end_date, start_date) : '?'} Day Trip\n      </p>\n    )}\n  </div>\n);\n\nexport default DateRange;\n","import React from 'react';\nimport Flatpickr from 'react-flatpickr';\nimport DateRange from './DateRange.react';\n\nimport 'flatpickr/dist/themes/light.css';\n\nfunction DatePicker({\n  disabledDates,\n  onChange,\n  value,\n  hideDaysCount,\n  disabled,\n  className,\n  rangeClassName\n}) {\n  if (disabled) {\n    return (\n      <DateRange\n        className={rangeClassName}\n        start_date={value[0]}\n        end_date={value[1]}\n        hideDaysCount={hideDaysCount}\n      />\n    );\n  }\n  return (\n    <Flatpickr\n      className={className}\n      options={{\n        mode: 'range',\n        disable: disabledDates || [],\n        dateFormat: 'Y-m-d',\n        wrap: true\n      }}\n      value={value}\n      onChange={onChange}\n    >\n      <DateRange\n        className={rangeClassName}\n        start_date={value[0]}\n        end_date={value[1]}\n        hideDaysCount={hideDaysCount}\n      />\n      <input\n        style={{ opacity: 0 }}\n        type=\"text\"\n        placeholder=\"I'm invisible and only here to anchor calendar to\"\n        data-input\n      />\n    </Flatpickr>\n  );\n}\n\nexport default DatePicker;\n","import React, { useState, useEffect } from 'react';\n\nimport { determineNextFreeDate } from '../helpers/dateUtils';\nimport format from 'date-fns/format';\n\nimport { List } from 'react-virtualized';\nimport ReactCountryFlag from 'react-country-flag';\nimport Select from 'react-select';\nimport DatePicker from './DatePicker.react';\n\n//\n// Virtualized Select Component\n//\nconst MenuList = props => {\n  const rows = props.children;\n  const rowRenderer = ({ key, index, isScrolling, isVisible, style }) => (\n    <div key={key} style={style}>\n      {rows[index]}\n    </div>\n  );\n\n  return (\n    <List\n      style={{ width: '100%', flexGrow: true }}\n      width={props.width}\n      height={300}\n      rowHeight={35}\n      rowCount={rows.length || 0}\n      rowRenderer={rowRenderer}\n    />\n  );\n};\n\nconst convertToSelectOpts = i =>\n  i.map(i => ({\n    label: (\n      <div>\n        <ReactCountryFlag code={i.country_code} svg /> {i.name}\n      </div>\n    ),\n    value: `${i.name}:::${i.id}`\n  }));\n\nfunction NewTrip({ cities, trips, disabledDates, onCreateTrip }) {\n  // Default to the next free day and no city selected\n  const [dates, setDates] = useState(determineNextFreeDate(trips, 4));\n  const [city, setCity] = useState(null);\n\n  //\n  // Make sure the default dates stay up to date when a new trip is created\n  //\n  useEffect(\n    () => {\n      setDates(determineNextFreeDate(trips, 4));\n    },\n    [trips.map(t => t.id).join('-')]\n  );\n\n  //\n  // Package up the state as a trip object and pass it back up\n  //\n  const createTrip = e => {\n    e.preventDefault();\n    onCreateTrip({\n      city: parseInt(city.value.split(':::')[1], 10),\n      start_date: format(dates[0], 'YYYY-MM-DD'),\n      end_date: format(dates[1], 'YYYY-MM-DD')\n    });\n    setCity(null);\n  };\n\n  // Order cities by population for now\n  const citiesList = Object.keys(cities.all).map(cId => cities.all[cId]);\n  citiesList.sort((a, b) => b.population - a.population);\n\n  return (\n    <form className=\"uk-tile new-trip-form uk-padding-small uk-flex\">\n      <div>\n        <Select\n          styles={{\n            container: () => ({\n              width: 250\n            }),\n            menu: provided => ({\n              ...provided,\n              top: null\n            })\n          }}\n          components={{\n            MenuList: props => <MenuList {...props} width={window.innerWidth} />\n          }}\n          placeholder=\"New Trip Location\"\n          className=\"country-picker\"\n          isSearchAble\n          isLoading={cities.isFetching}\n          value={city}\n          onChange={setCity}\n          options={convertToSelectOpts(citiesList)}\n        />\n      </div>\n      <DatePicker\n        className=\"uk-width-1-3@m\"\n        rangeClassName=\"uk-text-center\"\n        disabledDates={disabledDates}\n        value={dates}\n        onChange={setDates}\n        hideDaysCount\n      />\n      <button\n        className=\"uk-button uk-button-secondary\"\n        onClick={createTrip}\n        disabled={city === null || dates.length !== 2}\n      >\n        <span className=\"icono-plus\" />\n      </button>\n    </form>\n  );\n}\n\nexport default NewTrip;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FriendChip = ({\n  id,\n  first_name,\n  last_name,\n  username,\n  photo_url,\n  photoOnly\n}) => {\n  const photoSrc = photo_url || '/blank-profile-picture.png';\n  const tooltipText = username || `${first_name} ${last_name}`;\n\n  if (photoOnly) {\n    return (\n      <div className=\"uk-border-circle friend-chip\">\n        <img\n          className=\"uk-border-circle avatar-preview\"\n          alt=\"avatar\"\n          src={photoSrc}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Link className=\"uk-border-circle friend-chip\" to={`/users/${id}`}>\n      <img\n        className=\"uk-border-circle avatar-preview\"\n        alt=\"avatar\"\n        src={photoSrc}\n      />\n      <div className=\"uk-badge tooltip\">{tooltipText}</div>\n    </Link>\n  );\n};\n\nexport default FriendChip;\n","import React, { Fragment, useState } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport format from 'date-fns/format';\nimport addDays from 'date-fns/add_days';\nimport subDays from 'date-fns/sub_days';\n\nimport ReactCountryFlag from 'react-country-flag';\nimport FriendChip from './FriendChip.react';\nimport DatePicker from './DatePicker.react';\n\nfunction TripCard({ onUpdate, onDelete, disabledDates, viewOnly, ...props }) {\n  const { id, city, start_date, end_date, matches } = props;\n\n  const [promptDel, setPromptDel] = useState(false);\n  const [dates, setDates] = useState([\n    new Date(start_date),\n    new Date(end_date)\n  ]);\n\n  const updateDates = d => {\n    setDates(d);\n    if (d.length !== 2) {\n      return;\n    }\n    return onUpdate({\n      id,\n      city: city.id,\n      start_date: format(d[0], 'YYYY-MM-DD'),\n      end_date: format(d[1], 'YYYY-MM-DD')\n    });\n  };\n\n  const disabledDatesMinusThoseForThisTrip = (disabledDates || []).filter(\n    ({ from, to }) =>\n      !(\n        format(addDays(start_date, 1), 'YYYY-MM-DD') ===\n          format(from, 'YYYY-MM-DD') &&\n        format(subDays(end_date, 1), 'YYYY-MM-DD') === format(to, 'YYYY-MM-DD')\n      )\n  );\n\n  const deleteTrip = () => onDelete({ id });\n\n  if (promptDel) {\n    return (\n      <Fragment>\n        <div className=\"uk-tile uk-padding-small uk-flex uk-flex-between uk-background-muted\">\n          <div>\n            <h6>\n              <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n            </h6>\n          </div>\n          <p>Confirm you would like to delete this trip</p>\n          <span className=\"uk-flex\">\n            <hr className=\"uk-divider-vertical uk-margin-right uk-margin-left\" />\n            <span className=\"uk-flex uk-flex-column\">\n              <span className=\"icon-sm\">\n                <span className=\"icono-check\" onClick={deleteTrip} />\n              </span>\n              <span className=\"icon-sm\">\n                <span\n                  className=\"icono-cross\"\n                  onClick={e => setPromptDel(false)}\n                />\n              </span>\n            </span>\n          </span>\n        </div>\n        <hr />\n      </Fragment>\n    );\n  }\n\n  const WrapperComponent = viewOnly ? 'div' : Link;\n\n  return (\n    <Fragment>\n      <div className=\"uk-tile uk-padding-small uk-flex uk-flex-between uk-link-muted\">\n        <div>\n          <WrapperComponent to={`/trips/${id}`}>\n            <h6>\n              <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n            </h6>\n          </WrapperComponent>\n          <DatePicker\n            disabledDates={disabledDatesMinusThoseForThisTrip}\n            value={dates}\n            onChange={updateDates}\n            disabled={viewOnly}\n          />\n        </div>\n        <div className=\"uk-flex\">\n          <span className=\"uk-flex\">\n            {matches.slice(0, 3).map(m => (\n              <FriendChip key={m.id} {...m} />\n            ))}\n            <ExtraFriends allFriends={matches} numDisplayed={3} />\n          </span>\n          {!viewOnly && (\n            <span className=\"uk-flex\">\n              <hr className=\"uk-divider-vertical uk-margin-right uk-margin-left\" />\n              <span className=\"uk-flex uk-flex-column\">\n                <span className=\"icon-sm\">\n                  <span\n                    className=\"icono-trash\"\n                    onClick={e => {\n                      e.preventDefault();\n                      setPromptDel(true);\n                    }}\n                  />\n                </span>\n              </span>\n            </span>\n          )}\n        </div>\n      </div>\n      <hr />\n    </Fragment>\n  );\n}\n\nconst ExtraFriends = ({ allFriends, numDisplayed }) => {\n  if (allFriends.length > numDisplayed) {\n    return (\n      <div className=\"uk-border-circle avatar-preview uk-background-muted\">\n        <p className=\"uk-border-circle uk-dark\">\n          +{allFriends.length - numDisplayed}\n        </p>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default withRouter(TripCard);\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => (\n  <div className=\"spinner-container\">\n    <div className=\"lds-ripple\">\n      <div />\n      <div />\n    </div>\n  </div>\n);\n\nexport default Spinner;\n","//\n// Page with a list of trips for the user\n//\n//\n// TODO:\n// - convert to not be a page (move the fetching to user profile?)\n// - remove active location trip card (from map) and highlight the selected one\n//   in the list\n// - only hide the new-trip and edit/del trip dates when not active user\n// - add trip needs to update map\n// - date slider should remove the need for the \"see past trips button\"\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  fetchTrips,\n  fetchCities,\n  createTrip,\n  fetchFriends,\n  updateTrip,\n  deleteTrip\n} from '../actions';\n\nimport differenceInDays from 'date-fns/difference_in_days';\nimport isBefore from 'date-fns/is_before';\nimport {\n  isFutureTrip,\n  isPastTrip,\n  determineAlreadySelectedTripDates\n} from '../helpers/dateUtils';\n\nimport NewTrip from '../components/NewTrip.react';\nimport TripCard from '../components/TripCard.react';\nimport Spinner from '../components/Spinner.react';\n\nfunction TripDashboard(props) {\n  // Get data out of redux\n  const { cities, trips, users } = props;\n\n  const [isShowingPastTrips, showPastTrips] = useState(false);\n\n  // Load API data for page\n  useEffect(() => {\n    if (!cities.isFetching && !cities.hasFetched) {\n      props.fetchCities();\n    }\n    if (!trips.isFetching && !trips.hasFetched) {\n      props.fetchTrips();\n    }\n  }, []);\n\n  const togglePastTrips = () => {\n    if (!isShowingPastTrips) {\n      props.fetchTrips({\n        end_date_after: new Date('2018-01-01')\n      });\n    }\n    showPastTrips(!isShowingPastTrips);\n  };\n\n  const populatedTrips = trips.ids\n    .map(tId => {\n      const trip = trips.all[tId];\n      return {\n        ...trip,\n        city: cities.all[trip.city],\n        matches: trip.matches.map(match => {\n          const [uId, start, end] = match.split('::');\n          return {\n            ...users.all[uId],\n            start_date: start,\n            end_date: end\n          };\n        })\n      };\n    })\n    .filter(trip => isShowingPastTrips || isBefore(new Date(), trip.end_date));\n\n  // Sort so the soonest trip is first in the list\n  populatedTrips.sort((a, b) => differenceInDays(a.start_date, b.start_date));\n\n  const disabledDates = determineAlreadySelectedTripDates(populatedTrips);\n\n  return (\n    <Fragment>\n      <h4>ADD NEW TRIP</h4>\n      <NewTrip\n        cities={cities}\n        trips={populatedTrips}\n        isLoadingCities={cities.isFetching}\n        onCreateTrip={props.createTrip}\n        disabledDates={disabledDates}\n      />\n\n      <TripsList\n        isFetching={trips.isFetching}\n        trips={populatedTrips}\n        updateTrip={props.updateTrip}\n        deleteTrip={props.deleteTrip}\n        disabledDates={disabledDates}\n      />\n\n      <button\n        className=\"uk-button uk-button-secondary\"\n        onClick={togglePastTrips}\n      >\n        {isShowingPastTrips ? 'Hide Past Trips' : 'Show Past Trips'}\n      </button>\n    </Fragment>\n  );\n}\n\nfunction TripsList({\n  isFetching,\n  trips,\n  disabledDates,\n  updateTrip,\n  deleteTrip\n}) {\n  if (isFetching) {\n    return <Spinner />;\n  }\n\n  if (trips.length === 0) {\n    return <p>You have no upcoming trips. Hope you enjoy your rest.</p>;\n  }\n\n  // TODO: Pagination\n\n  const fTrips = trips.filter(isFutureTrip);\n  const pTrips = trips.filter(isPastTrip);\n\n  return (\n    <Fragment>\n      {pTrips.length > 0 && <h4>PAST TRIPS</h4>}\n      {pTrips.map(trip => (\n        <TripCard\n          key={trip.id}\n          onUpdate={updateTrip}\n          onDelete={deleteTrip}\n          disabledDates={disabledDates}\n          {...trip}\n        />\n      ))}\n      {fTrips.length > 0 && <h4>UPCOMING TRIPS</h4>}\n      {fTrips.map(trip => (\n        <TripCard\n          key={trip.id}\n          onUpdate={updateTrip}\n          onDelete={deleteTrip}\n          disabledDates={disabledDates}\n          {...trip}\n        />\n      ))}\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = ({ cities, trips, users }) => ({\n  cities,\n  trips,\n  users\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchTrips,\n    fetchCities,\n    fetchFriends,\n    createTrip,\n    updateTrip,\n    deleteTrip\n  }\n)(TripDashboard);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactCountryFlag from 'react-country-flag';\n\nimport FriendChip from './FriendChip.react';\n\nimport differenceInDays from 'date-fns/difference_in_days';\nimport getOverlappingDaysInRanges from 'date-fns/get_overlapping_days_in_ranges';\nimport format from 'date-fns/format';\n\nconst TripPanel = ({ city, start_date, end_date, matches, isActive }) => (\n  <dl className=\"uk-description-list\">\n    <dt>Location</dt>\n    <dd className=\"uk-padding-small\">\n      <span className=\"uk-padding-small\">{city.name}</span>\n      <ReactCountryFlag code={city.country_code} svg />\n    </dd>\n    <dt>Duration</dt>\n    <dd className=\"uk-padding-small\">\n      <span className=\"uk-padding\">\n        You will be in {city.name} for {differenceInDays(end_date, start_date)}{' '}\n        Days\n      </span>\n      <OverlapBar\n        start_date={start_date}\n        end_date={end_date}\n        to={end_date}\n        from={start_date}\n      />\n    </dd>\n    <OverlappingFriends\n      matches={matches}\n      start_date={start_date}\n      end_date={end_date}\n    />\n  </dl>\n);\n\nconst OverlappingFriends = ({ matches, start_date, end_date }) => {\n  if (matches.length === 0) {\n    return (\n      <p>\n        None of your friends trips are currently overlapping with this one.\n        Maybe you need to add some people you know to improve your chances?\n      </p>\n    );\n  }\n\n  return (\n    <Fragment>\n      <dt>Friends with overlapping dates</dt>\n      <dd>\n        <span className=\"uk-padding\">\n          {matches.map(m => (\n            <OverlapGraph key={m.id} {...m} from={start_date} to={end_date} />\n          ))}\n        </span>\n      </dd>\n    </Fragment>\n  );\n};\n\nconst OverlapGraph = ({\n  id,\n  first_name,\n  last_name,\n  username,\n  photo_url,\n  start_date,\n  end_date,\n  from,\n  to\n}) => (\n  <div className=\"overlap-graph\">\n    <div className=\"uk-flex uk-flex-middle\">\n      <FriendChip\n        id={id}\n        username={username}\n        first_name={first_name}\n        last_name={last_name}\n        photo_url={photo_url}\n        photoOnly\n      />\n      <Link to={`/users/${id}`} className=\"chip-label uk-link-muted\">\n        @{username}\n      </Link>\n    </div>\n    <OverlapBar\n      start_date={start_date}\n      end_date={end_date}\n      to={to}\n      from={from}\n    />\n  </div>\n);\n\nconst OverlapBar = ({ id, start_date, end_date, from, to }) => {\n  const totalLength = differenceInDays(to, from);\n  const daysFromStart = differenceInDays(start_date, from);\n  const daysOverlap = getOverlappingDaysInRanges(\n    from,\n    to,\n    start_date,\n    end_date\n  );\n\n  const STYLES = {\n    width: `${Math.floor((daysOverlap * 80) / totalLength)}%`\n  };\n  const START_STYLES = {\n    marginLeft: `${Math.max(\n      Math.floor((daysFromStart * 80) / totalLength) - 5,\n      0\n    )}%`\n  };\n\n  // TODO: This look gross ATM\n  return null;\n  return (\n    <div className=\"uk-flex uk-flex-around uk-padding-small\">\n      <span className=\"date-icon\" style={START_STYLES}>\n        {format(start_date, 'DD MMM')}\n      </span>\n      <li className=\"uk-list overlap-bar\" style={STYLES}>\n        {daysOverlap} Days\n      </li>\n      <span className=\"date-icon\">{format(end_date, 'DD MMM')}</span>\n    </div>\n  );\n};\n\nexport default TripPanel;\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrip } from '../actions';\n\nimport TripPanel from '../components/TripPanel.react';\nimport Spinner from '../components/Spinner.react';\n\nconst TripDetail = ({ match, trips, cities, users, fetchTrip }) => {\n  const tripId = parseInt(match.params.id, 10);\n\n  // Clone the trip\n  let trip = trips.all[tripId];\n  if (trip) {\n    trip = {\n      ...trip,\n      city: cities[trip.city],\n      matches: trip.matches.map(match => {\n        const [uId, start, end] = match.split('::');\n        return {\n          ...users.all[uId],\n          start_date: start,\n          end_date: end\n        };\n      })\n    };\n  }\n\n  useEffect(() => {\n    // Get it from the API if:\n    //   - it is not currently fetching trips\n    //   - we don't have the trip in the store already\n    if (!trips.isFetching && !trip) {\n      fetchTrip(tripId);\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <h4>TRIP SUMMARY</h4>\n      <MainPanel isFetching={trips.isFetching} trip={trip} />\n    </Fragment>\n  );\n};\n\nconst MainPanel = ({ isFetching, trip }) => {\n  if (isFetching || !trip) {\n    return <Spinner />;\n  }\n  return <TripPanel {...trip} />;\n};\n\nconst mapStateToProps = ({ trips, users, cities }) => ({\n  trips,\n  users,\n  cities: cities.all\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchTrip\n  }\n)(TripDetail);\n","import React from 'react';\n\nconst FriendshipStatus = ({ user, onRequest, onAccept }) => {\n  if (user && user.is_you) {\n    return (\n      <button className=\"uk-button uk-flex\" disabled>\n        <div className=\"icon-sm\">\n          <span className=\"icono-smile\" />\n        </div>\n        <div>You</div>\n      </button>\n    );\n  }\n  if (user && user.is_friend) {\n    return (\n      <button className=\"uk-button uk-flex\" disabled>\n        <div className=\"icon-sm\">\n          <span className=\"icono-check\" />\n        </div>\n        <div>Friends</div>\n      </button>\n    );\n  }\n  if (user && user.is_pending_friend) {\n    return (\n      <button onClick={onAccept} className=\"uk-button uk-flex\">\n        <div className=\"icon-sm\">\n          <span className=\"icono-check\" />\n        </div>\n        <div>Accept</div>\n      </button>\n    );\n  }\n  if (user && user.have_requested_friend) {\n    return (\n      <button className=\"uk-button uk-flex\" disabled>\n        <div className=\"icon-sm\">\n          <span className=\"icono-clock\" />\n        </div>\n        <div>Waiting</div>\n      </button>\n    );\n  }\n\n  return (\n    <button className=\"uk-button uk-flex\" onClick={onRequest}>\n      <div className=\"icon-sm\">\n        <span className=\"icono-plus\" />\n      </div>\n      <div>Request</div>\n    </button>\n  );\n};\n\nexport default FriendshipStatus;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport { apiUrl } from '../config';\n\nimport FriendChip from './FriendChip.react';\nimport FriendStatusButton from './FriendStatusButton.react';\n\n// TODO:\n//  - integrate with search API\n//  - present results effectively\n//  - request button\nfunction FriendSearch({\n  users,\n  onRequestFriend,\n  onAcceptFriend,\n  fetchFriends\n}) {\n  const [results, setResults] = useState([]);\n  const [phrase, setPhrase] = useState('');\n\n  // Each time the user types, we send a search query.\n  //\n  // TODO:\n  // - Should this be debounced?\n  // - Encoding query strings\n  //\n  useEffect(\n    () => {\n      const CancelToken = axios.CancelToken;\n      const source = CancelToken.source();\n\n      if (phrase) {\n        axios\n          .get(`${apiUrl}/u/search/?q=${phrase}`, {\n            cancelToken: source.token,\n            withCredentials: true\n          })\n          .then(({ data }) => setResults(data.data))\n          .catch(err => {\n            // All good.\n            if (err && err.message === 'unmount') {\n              return;\n            }\n\n            // TODO: Handle this!\n            console.log(err);\n          });\n      } else {\n        setResults([]);\n      }\n\n      // Cancel the request if the component is unmounted\n      return () => source.cancel('unmount');\n    },\n    [phrase]\n  );\n\n  return (\n    <div className=\"uk-padding-small\">\n      <input\n        className=\"uk-input\"\n        placeholder=\"Search for Telegram Username / Full Name\"\n        value={phrase}\n        onChange={e => setPhrase(e.target.value)}\n      />\n      <hr />\n      <dl className=\"uk-description-list\">\n        {results.map(r => {\n          // Get friend object so we can tell if we're friends with each search result\n          const friendObj = users.all[r.id];\n\n          // Don't show yourself in search results\n          if (friendObj && friendObj.is_you) {\n            return null;\n          }\n\n          return (\n            <Fragment key={r.id}>\n              <dt>{r.username}</dt>\n              <dd className=\"uk-padding-small uk-flex uk-flex-between\">\n                <span className=\"uk-flex\">\n                  <FriendChip\n                    {...r}\n                    photoOnly={!friendObj || !friendObj.is_friend}\n                  />\n                  <p>\n                    {r.first_name} {r.last_name}\n                  </p>\n                </span>\n                <span className=\"uk-flex\">\n                  <hr\n                    style={{ height: 30 }}\n                    className=\"uk-divider-vertical uk-margin-right uk-margin-left\"\n                  />\n                  <FriendStatusButton\n                    user={friendObj}\n                    onAccept={() => onAcceptFriend(r)}\n                    onRequest={() => onRequestFriend(r)}\n                  />\n                </span>\n              </dd>\n            </Fragment>\n          );\n        })}\n      </dl>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ users }) => ({\n  users\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(FriendSearch);\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  fetchFriends,\n  requestFriendship,\n  acceptFriendRequest\n} from '../actions';\n\nimport Spinner from '../components/Spinner.react';\nimport FriendChip from '../components/FriendChip.react';\nimport FriendSearch from '../components/FriendSearch.react';\nimport FriendStatusButton from '../components/FriendStatusButton.react';\n\nconst FriendsList = ({\n  users,\n  fetchFriends,\n  requestFriendship,\n  acceptFriendRequest,\n  activeUser\n}) => {\n  useEffect(() => {\n    if (!users.isFetching) {\n      fetchFriends();\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <MainPanel\n        isFetching={users.isFetching && users.ids.length === 0}\n        users={users}\n        activeUser={activeUser}\n        acceptFriendRequest={acceptFriendRequest}\n        requestFriendship={requestFriendship}\n      />\n    </Fragment>\n  );\n};\n\nconst MainPanel = ({\n  isFetching,\n  users,\n  activeUser,\n  acceptFriendRequest,\n  requestFriendship\n}) => {\n  if (isFetching) {\n    return <Spinner />;\n  }\n\n  const friendList = Object.keys(users.all)\n    .filter(uId => parseInt(uId, 10) !== activeUser)\n    .map(uId => users.all[uId]);\n\n  const accepted = friendList.filter(f => f.is_friend);\n  const hasFriends = accepted.length > 0;\n  const pending = friendList.filter(f => f.is_pending_friend);\n  const hasPendingFriends = pending.length > 0;\n\n  return (\n    <Fragment>\n      {hasFriends && <h4>FRIENDS</h4>}\n      {accepted.map(f => (\n        <FriendChip key={f.id} {...f} />\n      ))}\n      {hasPendingFriends && <h4>PENDING REQUESTS</h4>}\n      {pending.map(f => (\n        <Fragment key={f.id}>\n          <FriendChip {...f} onAccept={() => acceptFriendRequest(f)} />\n          <FriendStatusButton\n            user={f}\n            onAccept={() => acceptFriendRequest(f)}\n          />\n        </Fragment>\n      ))}\n      <h4>FIND FRIENDS</h4>\n      <FriendSearch\n        users={users}\n        onRequestFriend={requestFriendship}\n        onAcceptFriend={acceptFriendRequest}\n      />\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ users, activeUser }) => ({\n  users,\n  activeUser\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchFriends,\n    requestFriendship,\n    acceptFriendRequest\n  }\n)(FriendsList);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Map, Marker, Popup, TileLayer, Polyline } from 'react-leaflet';\nimport { divIcon } from 'leaflet';\n\nimport differenceInDays from 'date-fns/difference_in_days';\nimport addDays from 'date-fns/add_days';\nimport subDays from 'date-fns/sub_days';\nimport isWithinRange from 'date-fns/is_within_range';\n\nimport { apiUrl } from '../config';\nimport { isFutureTrip, isPastTrip } from '../helpers/dateUtils';\n\nimport Spinner from './Spinner.react';\nimport TripCard from './TripCard.react';\nimport DateRange from './DateRange.react';\n\n// Custom Icon for the leaftlet map.\nconst locationIcon = divIcon({\n  html: '<span class=\"icono-caretDown\"/>',\n  iconSize: [25, 25],\n  iconAnchor: [17, 24],\n  popupAnchor: [-3, -26]\n});\n\nconst LocationMap = ({ userId }) => {\n  const [locations, setLocations] = useState(null);\n  const [activeLocation, setActiveLocation] = useState(null);\n  const [dateSelection, setDateSlider] = useState(new Date());\n\n  const fetchUserLocations = id => {\n    if (!id) {\n      return;\n    }\n    setLocations(null);\n    return axios(`${apiUrl}/u/${id}/locations/`, {\n      withCredentials: true\n    }).then(res => {\n      if (res.status === 200) {\n        setLocations(res.data.data);\n        setDateSlider(dateFromPercentage(50, res.data.data));\n      } else if (res.status === 404) {\n        setLocations([]);\n      }\n    });\n  };\n\n  useEffect(\n    () => {\n      fetchUserLocations(userId);\n    },\n    [userId]\n  );\n\n  if (locations === null) {\n    return <Spinner />;\n  }\n\n  if (locations.length === 0) {\n    return <div>No Trips added yet...</div>;\n  }\n\n  const dateSpread = Math.max(Math.floor(getDaysInRange(locations) / 4), 10);\n\n  // Sort so the soonest trip is first in the list\n  locations.sort((a, b) => differenceInDays(a.start_date, b.start_date));\n\n  // Only show locations +/- 60 days from date\n  const filteredLocations = locations.filter(\n    isWithinDaysN(dateSelection, dateSpread)\n  );\n\n  const fLocations = filteredLocations.filter(isFutureTrip);\n  const pLocations = filteredLocations.filter(isPastTrip);\n\n  const bounds =\n    filteredLocations.length > 1\n      ? filteredLocations.map(getLatLong)\n      : locations.map(getLatLong);\n\n  return (\n    <Fragment>\n      <Map bounds={findBoundingBox(bounds)} style={{ height: 300 }}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n        />\n        <Polyline positions={pLocations.map(getLatLong)} color=\"black\" />\n        <Polyline positions={fLocations.map(getLatLong)} color=\"#bf4e4e\" />\n        {filteredLocations.map(({ id, city, start_date, end_date }) => (\n          <Marker\n            key={id}\n            position={[city.latitude, city.longitude]}\n            icon={locationIcon}\n          >\n            <Popup\n              onOpen={() => setActiveLocation(id)}\n              onClose={() => setActiveLocation(null)}\n              className=\"uk-hidden\"\n            />\n          </Marker>\n        ))}\n      </Map>\n      <input\n        className=\"uk-range\"\n        type=\"range\"\n        onChange={e =>\n          setDateSlider(dateFromPercentage(e.target.value, locations))\n        }\n        value={percentageFromDate(dateSelection, locations)}\n      />\n      <label style={{ margin: 'auto' }}>\n        <DateRange\n          className=\"uk-flex-around\"\n          hideDaysCount\n          start_date={subDays(dateSelection, dateSpread)}\n          end_date={addDays(dateSelection, dateSpread)}\n        />\n      </label>\n      <hr />\n      {!activeLocation && <p>No trip selected</p>}\n      {activeLocation && (\n        <TripCard viewOnly {...locations.find(l => l.id === activeLocation)} />\n      )}\n    </Fragment>\n  );\n};\n\nconst getDaysInRange = locations => {\n  if (locations.length === 0) {\n    return 0;\n  }\n  const diff = differenceInDays(\n    locations[locations.length - 1].end_date,\n    locations[0].start_date\n  );\n  return Math.abs(diff);\n};\n\nconst percentageFromDate = (date, locations) => {\n  const daysInRange = getDaysInRange(locations);\n  const daysFromStart = differenceInDays(date, locations[0].start_date);\n  return Math.round((daysFromStart / daysInRange) * 100);\n};\n\nconst dateFromPercentage = (percentage, locations) => {\n  const daysInRange = getDaysInRange(locations);\n  const daysFromStart = Math.round(daysInRange * (percentage / 100));\n  return addDays(locations[0].start_date, daysFromStart);\n};\n\nconst getLatLong = ({ city }) => [city.latitude, city.longitude];\n\nconst findBoundingBox = bounds => [\n  [\n    Math.min.apply(null, bounds.map(b => b[0])) - 2,\n    Math.min.apply(null, bounds.map(b => b[1])) - 2\n  ],\n  [\n    Math.max.apply(null, bounds.map(b => b[0])) + 2,\n    Math.max.apply(null, bounds.map(b => b[1])) + 2\n  ]\n];\n\nconst isWithinDaysN = (dateSelection, dateSpread) => ({\n  start_date,\n  end_date\n}) => {\n  return (\n    isWithinRange(\n      start_date,\n      subDays(dateSelection, dateSpread),\n      addDays(dateSelection, dateSpread)\n    ) ||\n    isWithinRange(\n      end_date,\n      subDays(dateSelection, dateSpread),\n      addDays(dateSelection, dateSpread)\n    )\n  );\n};\n\nexport default LocationMap;\n","import React from 'react';\n\nconst TelegramLink = ({ username }) => {\n  if (!username) {\n    return null;\n  }\n  return (\n    <a\n      className=\"uk-button telegram-link\"\n      href={`https://t.me/${username}`}\n      target=\"_blank\"\n      rel=\"no-opener\"\n    >\n      <img src=\"/telegram.svg\" alt=\"telegram-icon\" />\n      <span>Send Message</span>\n    </a>\n  );\n};\n\nexport default TelegramLink;\n","import React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchUser, requestFriendship, acceptFriendRequest } from '../actions';\n\nimport TripDashboard from './TripDashboard.react';\n\nimport Spinner from '../components/Spinner.react';\nimport FriendStatusButton from '../components/FriendStatusButton.react';\nimport LocationMap from '../components/LocationMap.react';\nimport TelegramLink from '../components/TelegramLink.react';\n\nconst UserProfile = ({\n  match,\n  users,\n  fetchUser,\n  activeUser,\n  requestFriendship,\n  acceptFriendRequest\n}) => {\n  const userId = parseInt(match.params.id, 10);\n\n  // Clone the trip\n  let user = users.all[userId];\n\n  useEffect(\n    () => {\n      // Get it from the API if:\n      //   - it is not currently fetching users\n      if (!users.isFetching && userId !== activeUser) {\n        fetchUser(userId);\n      }\n    },\n    [userId]\n  );\n\n  if (user && user.id === userId) {\n    return (\n      <Fragment>\n        <MainPanel\n          isFetching={users.isFetching}\n          user={user}\n          activeUser={activeUser}\n          onRequest={() => requestFriendship(user)}\n          onAccept={() => acceptFriendRequest(user)}\n        />\n        <hr />\n        <TripDashboard />\n      </Fragment>\n    );\n  }\n\n  return (\n    <MainPanel\n      isFetching={users.isFetching}\n      user={user}\n      activeUser={activeUser}\n      onRequest={() => requestFriendship(user)}\n      onAccept={() => acceptFriendRequest(user)}\n    />\n  );\n};\n\nconst MainPanel = ({ isFetching, user, activeUser, onRequest, onAccept }) => {\n  if (isFetching || !user) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"centered-hero\">\n      <div className=\"uk-flex uk-flex-left profile-details\">\n        <div className=\"uk-flex uk-flex-left\">\n          <img\n            className=\"avatar-big uk-border-circle\"\n            alt=\"avatar\"\n            src={user.photo_url || '/blank-profile-picture.png'}\n          />\n\n          <div className=\"uk-flex uk-flex-column uk-padding\">\n            {user.username && <h4>@{user.username}</h4>}\n            <span>\n              {user.first_name.toUpperCase()} {user.last_name.toUpperCase()}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"user-icons\">\n          <FriendStatusButton\n            user={user}\n            onRequest={onRequest}\n            onAccept={onAccept}\n          />\n        </div>\n        <div className=\"user-icons\">\n          <TelegramLink username={user.username} />\n        </div>\n      </div>\n\n      <hr />\n\n      <LocationMap userId={user.id} />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ users, activeUser }) => ({\n  users,\n  activeUser\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchUser,\n    requestFriendship,\n    acceptFriendRequest\n  }\n)(UserProfile);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCities, fetchExploreSuggestions } from '../actions';\n\nimport addDays from 'date-fns/add_days';\nimport format from 'date-fns/format';\n\nimport Select from 'react-select';\nimport ReactCountryFlag from 'react-country-flag';\n\nimport DatePicker from '../components/DatePicker.react';\nimport Spinner from '../components/Spinner.react';\nimport FriendChip from '../components/FriendChip.react';\n\nconst CONTINENT_OPTIONS = [\n  { label: 'Europe', value: 'EU' },\n  { label: 'North America', value: 'NA' },\n  { label: 'South America', value: 'SA' },\n  { label: 'Africa', value: 'AF' },\n  { label: 'Asia', value: 'AS' },\n  { label: 'Oceania', value: 'OC' }\n];\n\nconst Explore = ({\n  cities,\n  suggestions,\n  users,\n  fetchCities,\n  activeUser,\n  fetchExploreSuggestions\n}) => {\n  const [continent, setContinent] = useState(null);\n  const [dates, setDates] = useState([new Date(), addDays(new Date(), 7)]);\n\n  useEffect(() => {\n    if (!cities.isFetching && cities.ids.length === 0) {\n      fetchCities();\n    }\n  }, []);\n\n  useEffect(\n    () => {\n      if (continent && dates[0] && dates[1]) {\n        fetchExploreSuggestions({\n          continent: continent.value,\n          start_date: format(dates[0], 'YYYY-MM-DD'),\n          end_date: format(dates[1], 'YYYY-MM-DD')\n        });\n      }\n    },\n    [continent, dates[0], dates[1]]\n  );\n\n  if (suggestions.isFetching) {\n    return <Spinner />;\n  }\n\n  const populatedSuggestions = suggestions.ids.map(sId => {\n    const s = suggestions.all[sId];\n    const us = s.users.map(uId => users.all[uId]);\n    return {\n      city: cities.all[s.city],\n      users: us\n    };\n  });\n\n  return (\n    <Fragment>\n      <h4>FILTERS</h4>\n      <div className=\"uk-flex uk-flex-around\">\n        <Select\n          styles={{\n            container: () => ({\n              width: 250\n            }),\n            menu: provided => ({\n              ...provided,\n              top: null\n            })\n          }}\n          placeholder=\"Continent\"\n          className=\"contient-picker\"\n          isSearchAble\n          isLoading={suggestions.isFetching}\n          value={continent}\n          onChange={setContinent}\n          options={CONTINENT_OPTIONS}\n        />\n        <DatePicker\n          className=\"uk-width-1-3@m\"\n          value={dates}\n          onChange={setDates}\n          hideDaysCount\n        />\n      </div>\n      <h4>SUGGESTIONS</h4>\n      <SuggestionList suggestions={populatedSuggestions} />\n    </Fragment>\n  );\n};\n\nconst SuggestionList = ({ suggestions }) => {\n  if (suggestions.length === 0) {\n    return (\n      <div>\n        No suggested trips for these filters... Try another continent or date\n        range.\n      </div>\n    );\n  }\n  return (\n    <div>\n      {suggestions.map(({ city, users }) => (\n        <div\n          key={city.id}\n          className=\"uk-tile uk-padding-small uk-flex uk-flex-between uk-link-muted\"\n        >\n          <h6>\n            <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n          </h6>\n          {users.map(u => <FriendChip key={u.id} {...u} />)}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ cities, suggestions, users, activeUser }) => ({\n  cities,\n  suggestions,\n  users,\n  activeUser\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchCities,\n    fetchExploreSuggestions\n  }\n)(Explore);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { withCookies } from 'react-cookie';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      rest.cookies.get('sessionid') ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login'\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default withCookies(PrivateRoute);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { stringify } from 'query-string';\nimport TelegramLoginButton from 'react-telegram-login';\n\nimport { apiUrl, botName } from '../config';\n\nclass Login extends Component {\n  state = {\n    errMsg: null\n  };\n\n  handleResponse = data => {\n    return axios({\n      url: `${apiUrl}/u/auth/?${stringify(data)}`,\n      method: 'get',\n      withCredentials: true\n    })\n      .then(res => {\n        // Pass the user data back to the main app\n        this.props.onLogin(data);\n      })\n      .catch(err => {\n        if (err.response) {\n          const errMsg =\n            (err.response.data &&\n              err.response.data.errors &&\n              err.response.data.errors[0]) ||\n            err.response;\n\n          this.setState({ errMsg });\n        } else {\n          this.setState({ errMsg: 'Unable to connect to the API' });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <section className=\"uk-flex uk-flex-center\">\n        <div className=\"uk-panel uk-panel-box uk-text-center telegram-login-container\">\n          <img\n            src=\"/logo.png\"\n            alt=\"logo\"\n            style={{ height: 55, paddingRight: 15, paddingLeft: 15 }}\n          />\n          <h1>LOCATIONLESS</h1>\n          <hr />\n          <TelegramLoginButton\n            dataOnauth={this.handleResponse}\n            botName={botName}\n          />\n          <hr />\n          <p>\n            You will need an account on{' '}\n            <a target=\"_blank\" href=\"https://telegram.org\" rel=\"no-opener\">\n              Telegram\n            </a>{' '}\n            to get started\n          </p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React, { useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withCookies } from 'react-cookie';\n\nconst Header = ({ cookies, onLogout, activeUser, history }) => {\n  if (!activeUser || !cookies.get('sessionid')) {\n    return null;\n  }\n  return (\n    <div className=\"uk-navbar-container\">\n      <nav className=\"uk-navbar uk-container\">\n        <div className=\"uk-navbar-left\">\n          <MobileNavbar\n            activeUser={activeUser}\n            onLogout={onLogout}\n            history={history}\n          />\n          <Link className=\"uk-navbar-item uk-logo\" to=\"/\">\n            <img\n              src=\"/logo.png\"\n              alt=\"logo\"\n              style={{ height: 35, paddingRight: 15, paddingLeft: 15 }}\n            />\n            Locationless\n          </Link>\n        </div>\n\n        <DesktopNavbar activeUser={activeUser} onLogout={onLogout} />\n      </nav>\n    </div>\n  );\n};\n\nconst MobileNavbar = ({ activeUser, onLogout, history }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const navigateTo = to => {\n    setIsOpen(false);\n    history.push(to);\n  };\n  const logout = () => {\n    setIsOpen(false);\n    onLogout();\n  };\n\n  return (\n    <Fragment>\n      <div\n        className=\"uk-navbar-item uk-hidden@s\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <div className=\"icono-hamburger\" onClick={() => setIsOpen(!isOpen)} />\n      </div>\n      {isOpen && (\n        <div className=\"fullscreen-mobile-menu\">\n          <ul className=\"uk-list\">\n            <li className=\"uk-navbar-item\" onClick={() => setIsOpen(!isOpen)}>\n              <div className=\"icono-cross\" />\n            </li>\n            <li\n              className=\"uk-navbar-item\"\n              onClick={() => navigateTo('/explore')}\n            >\n              <h4>EXPLORE</h4>\n            </li>\n            <li\n              className=\"uk-navbar-item\"\n              onClick={() => navigateTo('/friends')}\n            >\n              <h4>FRIENDS</h4>\n            </li>\n            <li\n              className=\"uk-navbar-item\"\n              onClick={() => navigateTo(`/users/${activeUser}`)}\n            >\n              <h4>PROFILE</h4>\n            </li>\n            <li className=\"uk-navbar-item\" onClick={() => logout()}>\n              <h4>LOGOUT</h4>\n            </li>\n          </ul>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst DesktopNavbar = ({ activeUser, onLogout }) => (\n  <div className=\"uk-navbar-right uk-visible@s\">\n    <ul className=\"uk-navbar-nav\">\n      <li className=\"uk-navbar-item\">\n        <Link to=\"/explore\">Explore</Link>\n      </li>\n      <li className=\"uk-navbar-item\">\n        <Link to=\"/friends\">Friends</Link>\n      </li>\n      <li className=\"uk-navbar-item\">\n        <Link to={`/users/${activeUser}`}>Profile</Link>\n      </li>\n      <li className=\"uk-navbar-item\">\n        <a onClick={onLogout}>Logout</a>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default withRouter(withCookies(Header));\n","export const SERVER_ERR =\n  \"Something has gone wrong. We're going to try turning it off and on again.\";\nexport const NOT_FOUND = 'Nothing to see here.';\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { withCookies } from 'react-cookie';\nimport { withRouter, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\nimport TripDashboard from './pages/TripDashboard.react';\nimport TripDetail from './pages/TripDetail.react';\nimport FriendsList from './pages/FriendsList.react';\nimport UserProfile from './pages/UserProfile.react';\nimport Explore from './pages/Explore.react';\n\nimport PrivateRoute from './components/PrivateRoute.react';\nimport Login from './components/Login.react';\nimport Header from './components/Header.react';\nimport Spinner from './components/Spinner.react';\n\nimport { setUsers, logout } from './actions';\nimport { NOT_FOUND } from './errorMessages';\n\nimport { apiUrl, gaEnabled } from './config';\n\nimport './App.css';\nimport 'uikit/dist/css/uikit.css';\n\nclass App extends Component {\n  onLogout() {\n    this.props.cookies.remove('sessionid');\n    this.props.logout();\n    axios.post(`${apiUrl}/u/logout/`, { withCredentials: true });\n    this.props.history.push('/login');\n  }\n\n  onLogin(data) {\n    this.props.history.push('/');\n    this.props.setUsers({\n      data: {\n        ...data,\n        is_you: true\n      }\n    });\n  }\n\n  componentDidMount() {\n    const { activeUser, location, history } = this.props;\n\n    if (window.gtag && gaEnabled) {\n      history.listen(location => {\n        window.gtag('set', { user: activeUser });\n        window.gtag('event', 'page_view', { pathname: location.pathname });\n      });\n    }\n\n    if (!activeUser && location.pathname !== '/login') {\n      axios\n        .get(`${apiUrl}/u/`, { withCredentials: true })\n        .then(({ data }) => this.props.setUsers({ data: data.data }))\n        .catch(err => {\n          this.props.history.push('/login');\n        });\n    }\n  }\n\n  renderAuthorTag() {\n    return (\n      <div className=\"author\">\n        <a href=\"https://jtfell.github.io\" target=\"_blank\" rel=\"noopener\">\n          by jtfell\n        </a>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.error.message) {\n      return <ErrorPage msg={this.props.error.message} />;\n    }\n\n    // Show spinner while loading the current user\n    if (!this.props.activeUser && this.props.location.pathname !== '/login') {\n      return (\n        <Fragment>\n          <Spinner />\n          {this.renderAuthorTag()}\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        <Header\n          onLogout={this.onLogout.bind(this)}\n          activeUser={this.props.activeUser}\n        />\n        <main className=\"uk-container uk-container-small uk-container-center uk-padding\">\n          <Switch>\n            <Route\n              path=\"/login\"\n              component={() => <Login onLogin={this.onLogin.bind(this)} />}\n            />\n\n            <PrivateRoute exact path=\"/\" component={TripDashboard} />\n            <PrivateRoute path=\"/trips/:id\" component={TripDetail} />\n            <PrivateRoute exact path=\"/friends\" component={FriendsList} />\n            <PrivateRoute exact path=\"/explore\" component={Explore} />\n            <PrivateRoute path=\"/users/:id\" component={UserProfile} />\n            <Route component={() => <ErrorPage msg={NOT_FOUND} hideLogo />} />\n          </Switch>\n        </main>\n\n        {this.renderAuthorTag()}\n      </Fragment>\n    );\n  }\n}\n\nconst ErrorPage = ({ msg, hideLogo }) => (\n  <main className=\"uk-container uk-container-small uk-container-center uk-padding\">\n    {!hideLogo && (\n      <a href=\"/\">\n        <img src=\"/logo.png\" alt=\"logo\" style={{ height: 85, padding: 15 }} />\n      </a>\n    )}\n    <hr />\n    <h4>{msg}</h4>\n  </main>\n);\n\nconst mapStateToProps = ({ users, activeUser, error }) => ({\n  users,\n  activeUser,\n  error\n});\n\nexport default withRouter(\n  withCookies(\n    connect(\n      mapStateToProps,\n      {\n        setUsers,\n        logout\n      }\n    )(App)\n  )\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  API_START,\n  API_END,\n  API_ERROR,\n  LOGOUT,\n  SET_USERS,\n  FETCH_USER,\n  SET_TRIPS,\n  FETCH_TRIPS,\n  REMOVE_TRIP,\n  FETCH_FRIENDS,\n  SET_CITIES,\n  FETCH_CITIES,\n  SET_EXPLORE_SUGGESTIONS\n} from '../actions/types';\n\nimport { reduceError } from './util';\n\nimport { normalize, schema } from 'normalizr';\n\nconst user = new schema.Entity('users');\nconst city = new schema.Entity('cities');\nconst match = new schema.Entity(\n  'matches',\n  {\n    user\n  },\n  {\n    idAttribute: v => `${v.user.id}::${v.start_date}::${v.end_date}`\n  }\n);\n\nconst trip = new schema.Entity(\n  'trips',\n  {\n    user,\n    city,\n    matches: [match]\n  },\n  {\n    processStrategy: (value, parent, key) => {\n      const matches = value.matches || [];\n      return { ...value, matches };\n    }\n  }\n);\n\nconst suggestion = new schema.Entity(\n  'suggestions',\n  {\n    city,\n    users: [user]\n  },\n  {\n    idAttribute: v => v.city.id\n  }\n);\n\nconst schemas = {\n  users: user,\n  cities: city,\n  trips: trip,\n  suggestions: suggestion\n};\n\nconst initialState = {\n  activeUser: null,\n\n  error: {\n    status: null,\n    message: null\n  },\n\n  trips: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false\n  },\n  cities: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false\n  },\n  users: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false\n  },\n  suggestions: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false\n  }\n};\n\nconst ENTITIES = ['trips', 'cities', 'users', 'suggestions'];\n\nconst insertEntities = (state, data, entity, overwrite = false) => {\n  // Make sure we have an array\n  if (!Array.isArray(data)) {\n    data = [data];\n  }\n\n  // Normalise the data\n  const normData = normalize(data, [schemas[entity]]);\n\n  const newState = { ...state };\n  Object.keys(state).forEach(e => {\n    if (!state[e] || ENTITIES.indexOf(e) === -1) {\n      return;\n    }\n\n    newState[e] = {\n      ...state[e]\n    };\n\n    // Merge in all the new objects for each entity\n    const allIds = [\n      ...new Set(\n        Object.keys(state[e].all).concat(\n          Object.keys(normData.entities[e] || {})\n        )\n      )\n    ];\n    allIds.forEach(id => {\n      newState[e].all[id] = Object.assign(\n        {},\n        state[e].all[id],\n        (normData.entities[e] || {})[id]\n      );\n    });\n  });\n\n  if (!overwrite) {\n    // Add all the new IDs to the primary entity\n    const existingIds = state[entity].ids;\n    newState[entity].ids = [...new Set(existingIds.concat(normData.result))];\n  } else {\n    newState[entity].ids = normData.result;\n  }\n\n  return newState;\n};\n\nconst TRIPS_LABELS = [FETCH_TRIPS];\nconst CITIES_LABELS = [FETCH_CITIES];\nconst USERS_LABELS = [FETCH_USER, FETCH_FRIENDS];\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOGOUT:\n      return initialState;\n    case API_ERROR:\n      return reduceError(state, action);\n\n    case REMOVE_TRIP: {\n      const trips = Object.assign({}, state.trips);\n      trips.ids = trips.ids.filter(tId => tId !== action.payload.id);\n      delete trips.all[action.payload.id];\n\n      return {\n        ...state,\n        trips\n      };\n    }\n\n    case SET_EXPLORE_SUGGESTIONS:\n      return insertEntities(\n        state,\n        action.payload.data,\n        'suggestions',\n        !!'overwrite'\n      );\n\n    case SET_TRIPS:\n      return insertEntities(state, action.payload.data, 'trips');\n\n    case SET_CITIES:\n      return insertEntities(state, action.payload.data, 'cities');\n\n    case SET_USERS: {\n      const newState = insertEntities(state, action.payload.data, 'users');\n\n      // Save the user ID of the logged in user\n      if (action.payload && action.payload.data && action.payload.data.is_you) {\n        newState.activeUser = action.payload.data.id;\n      }\n\n      return newState;\n    }\n\n    case API_START:\n      if (TRIPS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          trips: {\n            ...state.trips,\n            isFetching: true\n          }\n        };\n      }\n      if (USERS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          users: {\n            ...state.users,\n            isFetching: true\n          }\n        };\n      }\n      if (CITIES_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          cities: {\n            ...state.cities,\n            isFetching: true\n          }\n        };\n      }\n      return state;\n\n    case API_END:\n      if (TRIPS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          trips: {\n            ...state.trips,\n            isFetching: false,\n            hasFetched: true\n          }\n        };\n      }\n      if (USERS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          users: {\n            ...state.users,\n            isFetching: false,\n            hasFetched: true\n          }\n        };\n      }\n      if (CITIES_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          cities: {\n            ...state.cities,\n            isFetching: false,\n            hasFetched: true\n          }\n        };\n      }\n      return state;\n\n    default:\n      return state;\n  }\n}\n","import axios from 'axios';\nimport { API } from '../actions/types';\nimport { accessDenied, apiError, apiStart, apiEnd } from '../actions/api';\n\nconst apiMiddleware = ({ dispatch }) => next => action => {\n  if (!action) {\n    return;\n  }\n  next(action);\n\n  if (action.type !== API) return;\n\n  const {\n    url,\n    method,\n    data,\n    accessToken,\n    onSuccess,\n    onFailure,\n    label,\n    headers,\n    nextAction\n  } = action.payload;\n  const dataOrParams = ['GET', 'DELETE'].includes(method) ? 'params' : 'data';\n\n  // axios default configs\n  axios.defaults.baseURL = process.env.REACT_APP_BASE_URL || '';\n  axios.defaults.headers.common['Content-Type'] = 'application/json';\n  axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n\n  if (label) {\n    dispatch(apiStart(label));\n  }\n\n  axios\n    .request({\n      url,\n      method,\n      headers,\n      withCredentials: true,\n      [dataOrParams]: data\n    })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n      dispatch(nextAction(data));\n    })\n    .catch(error => {\n      dispatch(apiError(error));\n      dispatch(onFailure(error));\n\n      // TODO: Handle 404s\n\n      if (error.response && error.response.status === 401) {\n        dispatch(accessDenied(window.location.pathname));\n        // window.location = '/login';\n      }\n    })\n    .finally(() => {\n      if (label) {\n        dispatch(apiEnd(label));\n      }\n    });\n};\n\nexport default apiMiddleware;\n","import { API_START, API_END, ACCESS_DENIED, API_ERROR } from '../actions/types';\n\nexport const apiStart = label => ({\n  type: API_START,\n  payload: label\n});\n\nexport const apiEnd = label => ({\n  type: API_END,\n  payload: label\n});\n\nexport const accessDenied = url => ({\n  type: ACCESS_DENIED,\n  payload: {\n    url\n  }\n});\n\nexport const apiError = error => ({\n  type: API_ERROR,\n  error\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport thunkMiddleware from 'redux-thunk';\nimport apiMiddleware from '../middleware/api';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(apiMiddleware, thunkMiddleware))\n);\nwindow.store = store;\n\nexport default store;\n","import { SERVER_ERR, NOT_FOUND } from '../errorMessages';\n\nexport function reduceError(state, action) {\n  const err = action.error && action.error.response;\n  if (!err || err.status >= 500 || !err.status) {\n    return {\n      ...state,\n      error: {\n        status: 500,\n        message: SERVER_ERR\n      }\n    };\n  }\n\n  if (err.status === 404) {\n    return {\n      ...state,\n      error: {\n        status: 404,\n        message: NOT_FOUND\n      }\n    };\n  }\n\n  return {\n    ...state,\n    error: {\n      status: err.status,\n      message: (err.data && err.data.error) || SERVER_ERR\n    }\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport 'icono/dist/icono.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}