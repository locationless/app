{"version":3,"sources":["actions/types.js","config.js","actions/index.js","helpers/dateUtils.js","components/NewTrip.react.js","components/FriendChip.react.js","components/DateRange.react.js","components/TripCard.react.js","components/Spinner.react.js","pages/TripDashboard.react.js","components/TripPanel.react.js","pages/TripDetail.react.js","components/FriendStatusButton.react.js","components/FriendSearch.react.js","pages/FriendsList.react.js","components/LocationMap.react.js","components/TelegramLink.react.js","pages/UserProfile.react.js","pages/Explore.react.js","components/PrivateRoute.react.js","components/Login.react.js","components/Header.react.js","errorMessages.js","App.js","serviceWorker.js","reducers/index.js","middleware/api.js","actions/api.js","store/index.js","reducers/util.js","index.js"],"names":["FETCH_TRIPS","FETCH_TRIP","SET_TRIPS","CREATE_TRIP","UPDATE_TRIP","DELETE_TRIP","REMOVE_TRIP","FETCH_CITIES","SET_CITIES","FETCH_FRIENDS","CREATE_FRIEND_REQ","ACCEPT_FRIEND_REQ","FETCH_USER","SET_USERS","LOGOUT","API","FETCH_EXPLORE_SUGGESTIONS","SET_EXPLORE_SUGGESTIONS","apiUrl","process","setSuggestions","data","type","payload","fetchFriends","apiAction","url","concat","onSuccess","setUsers","onFailure","console","log","label","acceptFriendRequest","id","method","Object","objectSpread","is_friend","is_pending_friend","nextAction","fetchTrips","requestFriendship","have_requested_friend","fetchCities","setCities","qs","end_date_after","format","setTrips","_ref","_ref$url","_ref$method","_ref$data","_ref$accessToken","accessToken","_ref$onSuccess","_ref$onFailure","_ref$nextAction","_ref$label","_ref$headersOverride","headersOverride","determineNextFreeDate","trips","n","nextFreeDate","reduce","lastChecked","nextTrip","isBefore","addDays","start_date","Date","end_date","now","isFutureTrip","t","differenceInDays","isPastTrip","isCurrentTrip","isWithinRange","MenuList","props","rows","children","react_default","a","createElement","dist_es","style","width","flexGrow","height","rowHeight","rowCount","length","rowRenderer","key","index","isScrolling","isVisible","convertToSelectOpts","i","map","index_es","code","country_code","svg","name","value","NewTrip","_ref2","cities","disabledDates","onCreateTrip","_useState","useState","_useState2","slicedToArray","dates","setDates","_useState3","_useState4","city","setCity","useEffect","join","citiesList","keys","all","cId","sort","b","population","className","react_select_esm","styles","container","menu","provided","top","components","_MenuList","assign","window","innerWidth","placeholder","isSearchAble","isLoading","isFetching","onChange","options","build_default","mode","disable","dateFormat","onClick","e","preventDefault","parseInt","split","disabled","FriendChip","first_name","last_name","username","photo_url","photoOnly","photoSrc","tooltipText","alt","src","Link","to","MONTHS","DateRange","getDate","getMonth","fontSize","textAlign","margin","marginTop","ExtraFriends","_ref3","allFriends","numDisplayed","withRouter","onUpdate","onDelete","objectWithoutProperties","matches","editMode","setEditMode","promptDel","setPromptDel","_useState5","_useState6","disabledDatesMinusThoseForThisTrip","filter","from","subDays","react","DateRange_react","slice","m","FriendChip_react","TripCard_react_ExtraFriends","Spinner","TripsList","updateTrip","deleteTrip","Spinner_react","fTrips","pTrips","trip","TripCard_react","connect","users","createTrip","removeTrip","isShowingPastTrips","showPastTrips","hasFetched","populatedTrips","ids","tId","match","_match$split","_match$split2","uId","start","end","determineAlreadySelectedTripDates","NewTrip_react","isLoadingCities","OverlappingFriends","TripPanel_react_OverlapGraph","OverlapGraph","TripPanel_react_OverlapBar","OverlapBar","_ref4","totalLength","daysFromStart","daysOverlap","getOverlappingDaysInRanges","Math","floor","max","TripPanel","isActive","TripPanel_react_OverlappingFriends","MainPanel","TripPanel_react","fetchTrip","tripId","params","TripDetail_react_MainPanel","FriendshipStatus","user","onRequest","onAccept","is_you","onRequestFriend","onAcceptFriend","results","setResults","phrase","setPhrase","source","axios","CancelToken","get","cancelToken","token","withCredentials","then","catch","err","message","cancel","target","r","friendObj","FriendStatusButton_react","activeUser","friendList","accepted","f","hasFriends","pending","hasPendingFriends","FriendSearch_react","FriendsList_react_MainPanel","locationIcon","divIcon","html","iconSize","iconAnchor","popupAnchor","LocationMap","userId","locations","setLocations","res","status","fLocations","cLocation","find","pLocations","push","Map","center","zoom","TileLayer","attribution","Polyline","positions","latitude","longitude","color","Marker","position","icon","Popup","TelegramLink","href","rel","toUpperCase","TelegramLink_react","LocationMap_react","fetchUser","UserProfile_react_MainPanel","CONTINENT_OPTIONS","SuggestionList","suggestions","u","fetchExploreSuggestions","continent","setContinent","populatedSuggestions","sId","s","us","Explore_react_SuggestionList","withCookies","Component","component","rest","Route","render","cookies","Redirect","pathname","Login","state","errMsg","handleResponse","stringify","_this","onLogin","response","errors","setState","paddingRight","paddingLeft","react_telegram_login_build_default","dataOnauth","this","botName","MobileNavbar","onLogout","history","isOpen","setIsOpen","navigateTo","DesktopNavbar","Header_react_MobileNavbar","Header_react_DesktopNavbar","SERVER_ERR","NOT_FOUND","App","remove","logout","post","_this$props","location","_this2","error","App_ErrorPage","msg","Header_react","bind","Switch","path","Login_react","PrivateRoute_react","exact","TripDashboard","TripDetail","FriendsList","Explore","UserProfile","hideLogo","renderAuthorTag","ErrorPage","padding","Boolean","hostname","schema","Entity","idAttribute","v","schemas","processStrategy","parent","initialState","ENTITIES","insertEntities","entity","overwrite","arguments","undefined","Array","isArray","normData","normalize","newState","forEach","indexOf","toConsumableArray","Set","entities","result","existingIds","TRIPS_LABELS","CITIES_LABELS","USERS_LABELS","apiMiddleware","dispatch","next","action","_action$payload","headers","dataOrParams","includes","defaults","baseURL","REACT_APP_BASE_URL","common","apiStart","request","defineProperty","apiError","finally","apiEnd","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reduceError","applyMiddleware","thunkMiddleware","ReactDOM","es","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ad68bf5.chunk.js","sourcesContent":["export const FETCH_TRIPS = 'FETCH_TRIPS';\nexport const FETCH_TRIP = 'FETCH_TRIP';\nexport const SET_TRIPS = 'SET_TRIPS';\nexport const CREATE_TRIP = 'CREATE_TRIP';\nexport const UPDATE_TRIP = 'UPDATE_TRIP';\nexport const DELETE_TRIP = 'DELETE_TRIP';\nexport const REMOVE_TRIP = 'REMOVE_TRIP';\n\nexport const FETCH_CITIES = 'FETCH_CITIES';\nexport const SET_CITIES = 'SET_CITIES';\n\nexport const FETCH_FRIENDS = 'FETCH_FRIENDS';\nexport const SET_FRIENDS = 'SET_FRIENDS';\nexport const CREATE_FRIEND_REQ = 'CREATE_FRIEND_REQ';\nexport const ACCEPT_FRIEND_REQ = 'ACCEPT_FRIEND_REQ';\n\nexport const FETCH_USER = 'FETCH_USER';\nexport const SET_USERS = 'SET_USERS';\n\nexport const LOGOUT = 'LOGOUT';\nexport const API = 'API';\nexport const API_START = 'API_START';\nexport const API_END = 'API_END';\nexport const ACCESS_DENIED = 'ACCESS_DENIED';\nexport const API_ERROR = 'API_ERROR';\n\nexport const FETCH_EXPLORE_SUGGESTIONS = 'FETCH_EXPLORE_SUGGESTIONS';\nexport const SET_EXPLORE_SUGGESTIONS = 'SET_EXPLORE_SUGGESTIONS';\n\nexport const ENTITY_CITIES = 'ENTITY::CITIES';\nexport const ENTITY_TRIPS = 'ENTITY::TRIPS';\n","//\n// Expose friendly names for .env file variables\n//\nexport const apiUrl = process.env.REACT_APP_API_URL;\nexport const botName = process.env.REACT_APP_TELEGRAM_BOT;\n","import {\n  API,\n  LOGOUT,\n  FETCH_EXPLORE_SUGGESTIONS,\n  SET_EXPLORE_SUGGESTIONS,\n  FETCH_TRIPS,\n  FETCH_TRIP,\n  SET_TRIPS,\n  CREATE_TRIP,\n  UPDATE_TRIP,\n  DELETE_TRIP,\n  REMOVE_TRIP,\n  FETCH_FRIENDS,\n  CREATE_FRIEND_REQ,\n  ACCEPT_FRIEND_REQ,\n  FETCH_USER,\n  SET_USERS,\n  FETCH_CITIES,\n  SET_CITIES\n} from './types';\n\nimport format from 'date-fns/format';\n\nimport { apiUrl } from '../config';\n\nexport function logout() {\n  return {\n    type: LOGOUT\n  };\n}\n\nexport function setSuggestions(data) {\n  return {\n    type: SET_EXPLORE_SUGGESTIONS,\n    payload: data\n  };\n}\n\nexport function fetchExploreSuggestions(data) {\n  const qs = `?start_date=${data.start_date}&end_date=${data.end_date}`;\n\n  return apiAction({\n    url: `${apiUrl}/explore/${data.continent}/${qs}`,\n    onSuccess: setSuggestions,\n    onFailure: () => console.log('Error occured loading explore suggestions'),\n    label: FETCH_EXPLORE_SUGGESTIONS\n  });\n}\n\nexport function fetchFriends() {\n  return apiAction({\n    url: `${apiUrl}/u/friends/`,\n    onSuccess: setUsers,\n    onFailure: () => console.log('Error occured loading friends'),\n    label: FETCH_FRIENDS\n  });\n}\n\nexport function acceptFriendRequest(data) {\n  return apiAction({\n    url: `${apiUrl}/u/${data.id}/friends/`,\n    method: 'PUT',\n    // HACK: Need the API to return the updated user object\n    onSuccess: () =>\n      setUsers({\n        data: {\n          ...data,\n          is_friend: true,\n          is_pending_friend: false\n        }\n      }),\n    nextAction: fetchTrips,\n    onFailure: () => console.log('Error occured accepting friendship request'),\n    data: data,\n    label: ACCEPT_FRIEND_REQ\n  });\n}\n\nexport function requestFriendship(data) {\n  return apiAction({\n    url: `${apiUrl}/u/${data.id}/friends/`,\n    method: 'POST',\n    // HACK: Need the API to return the updated user object\n    onSuccess: () =>\n      setUsers({\n        data: {\n          ...data,\n          have_requested_friend: true\n        }\n      }),\n    onFailure: () => console.log('Error occured requesting friendship'),\n    data: data,\n    label: CREATE_FRIEND_REQ\n  });\n}\n\nexport function fetchUser(id) {\n  return apiAction({\n    url: `${apiUrl}/u/${id}/`,\n    onSuccess: setUsers,\n    onFailure: () => console.log('Error occured loading user', id),\n    label: FETCH_USER\n  });\n}\n\nexport function setUsers(data) {\n  return {\n    type: SET_USERS,\n    payload: data\n  };\n}\n\nexport function fetchCities() {\n  return apiAction({\n    url: `${apiUrl}/cities/`,\n    onSuccess: setCities,\n    onFailure: () => console.log('Error occured loading cities'),\n    label: FETCH_CITIES\n  });\n}\n\nfunction setCities(data) {\n  return {\n    type: SET_CITIES,\n    payload: data\n  };\n}\n\nexport function fetchTrip(id) {\n  return apiAction({\n    url: `${apiUrl}/trips/${id}`,\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured loading trips'),\n    label: FETCH_TRIP\n  });\n}\n\nexport function fetchTrips(data) {\n  // Optional timeframe filter\n  const qs =\n    data && data.end_date_after\n      ? `end_date_after=${format(data.end_date_after, 'YYYY-MM-DD')}`\n      : '';\n\n  return apiAction({\n    url: `${apiUrl}/trips/?${qs}`,\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured loading trips'),\n    label: FETCH_TRIPS\n  });\n}\n\nfunction setTrips(data) {\n  return {\n    type: SET_TRIPS,\n    payload: data\n  };\n}\n\nfunction removeTrip(data) {\n  return {\n    type: REMOVE_TRIP,\n    payload: data\n  };\n}\n\nexport function createTrip(data) {\n  return apiAction({\n    url: `${apiUrl}/trips/`,\n    method: 'POST',\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured creating trip'),\n    data: data,\n    label: CREATE_TRIP\n  });\n}\n\nexport function updateTrip(data) {\n  return apiAction({\n    url: `${apiUrl}/trips/${data.id}`,\n    method: 'PUT',\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured updating trip'),\n    data: data,\n    label: UPDATE_TRIP\n  });\n}\n\nexport function deleteTrip(data) {\n  return apiAction({\n    url: `${apiUrl}/trips/${data.id}`,\n    method: 'DELETE',\n    onFailure: () => console.log('Error occured deleting trip'),\n    onSuccess: () => removeTrip(data),\n    label: DELETE_TRIP\n  });\n}\n\nfunction apiAction({\n  url = '',\n  method = 'GET',\n  data = null,\n  accessToken = null,\n  onSuccess = () => {},\n  onFailure = () => {},\n  nextAction = () => {},\n  label = '',\n  headersOverride = null\n}) {\n  return {\n    type: API,\n    payload: {\n      url,\n      method,\n      data,\n      accessToken,\n      onSuccess,\n      onFailure,\n      label,\n      headersOverride,\n      nextAction\n    }\n  };\n}\n","import isWithinRange from 'date-fns/is_within_range';\nimport differenceInDays from 'date-fns/difference_in_days';\nimport isBefore from 'date-fns/is_before';\nimport addDays from 'date-fns/add_days';\nimport subDays from 'date-fns/sub_days';\n\n// Disable any dates that you already have trips on (allowing 1 day overlap)\nexport function determineAlreadySelectedTripDates(trips) {\n  return trips.map(t => ({\n    from: addDays(t.start_date, 1),\n    to: subDays(t.end_date, 1)\n  }));\n}\n\n// Determine the next gap in the dates of n days\nexport function determineNextFreeDate(trips, n) {\n  const nextFreeDate = trips.reduce((lastChecked, nextTrip) => {\n    // Only allow a gap to be auto-selected if there are n days available\n    if (isBefore(addDays(lastChecked, n - 1), nextTrip.start_date)) {\n      return lastChecked;\n    }\n\n    return new Date(nextTrip.end_date);\n  }, Date.now());\n  return [nextFreeDate, addDays(nextFreeDate, n)];\n}\n\nexport const isFutureTrip = t => differenceInDays(t.end_date, new Date()) >= 0;\nexport const isPastTrip = t => differenceInDays(t.end_date, new Date()) < 0;\nexport const isCurrentTrip = t =>\n  isWithinRange(new Date(), t.start_date, t.end_date);\n","import React, { useState, useEffect } from 'react';\nimport { List } from 'react-virtualized';\nimport ReactCountryFlag from 'react-country-flag';\n\nimport { determineNextFreeDate } from '../helpers/dateUtils';\n\nimport format from 'date-fns/format';\n\nimport Select from 'react-select';\nimport Flatpickr from 'react-flatpickr';\n\nimport 'flatpickr/dist/themes/light.css';\n\n//\n// Virtualized Select Component\n//\nconst MenuList = props => {\n  const rows = props.children;\n  const rowRenderer = ({ key, index, isScrolling, isVisible, style }) => (\n    <div key={key} style={style}>\n      {rows[index]}\n    </div>\n  );\n\n  return (\n    <List\n      style={{ width: '100%', flexGrow: true }}\n      width={props.width}\n      height={300}\n      rowHeight={35}\n      rowCount={rows.length || 0}\n      rowRenderer={rowRenderer}\n    />\n  );\n};\n\nconst convertToSelectOpts = i =>\n  i.map(i => ({\n    label: (\n      <div>\n        <ReactCountryFlag code={i.country_code} svg /> {i.name}\n      </div>\n    ),\n    value: `${i.name}:::${i.id}`\n  }));\n\nfunction NewTrip({ cities, trips, disabledDates, onCreateTrip }) {\n  // Default to the next free day and no city selected\n  const [dates, setDates] = useState(determineNextFreeDate(trips, 4));\n  const [city, setCity] = useState(null);\n\n  //\n  // Make sure the default dates stay up to date when a new trip is created\n  //\n  useEffect(\n    () => {\n      setDates(determineNextFreeDate(trips, 4));\n    },\n    [trips.map(t => t.id).join('-')]\n  );\n\n  //\n  // Package up the state as a trip object and pass it back up\n  //\n  const createTrip = e => {\n    e.preventDefault();\n    onCreateTrip({\n      city: parseInt(city.value.split(':::')[1], 10),\n      start_date: format(dates[0], 'YYYY-MM-DD'),\n      end_date: format(dates[1], 'YYYY-MM-DD')\n    });\n    setCity(null);\n  };\n\n  // Order cities by population for now\n  const citiesList = Object.keys(cities.all).map(cId => cities.all[cId]);\n  citiesList.sort((a, b) => b.population - a.population);\n\n  return (\n    <form className=\"uk-tile new-trip-form uk-padding-small uk-flex uk-flex-around uk-flex-middle\">\n      <div>\n        <Select\n          styles={{\n            container: () => ({\n              width: 250\n            }),\n            menu: provided => ({\n              ...provided,\n              top: null\n            })\n          }}\n          components={{\n            MenuList: props => <MenuList {...props} width={window.innerWidth} />\n          }}\n          placeholder=\"New Trip Location\"\n          className=\"country-picker\"\n          isSearchAble\n          isLoading={cities.isFetching}\n          value={city}\n          onChange={setCity}\n          options={convertToSelectOpts(citiesList)}\n        />\n      </div>\n      <Flatpickr\n        className=\"uk-input uk-width-1-3@m\"\n        options={{\n          mode: 'range',\n          disable: disabledDates,\n          dateFormat: 'Y-m-d'\n        }}\n        value={dates}\n        onChange={setDates}\n      />\n      <button\n        className=\"uk-button uk-button-secondary\"\n        onClick={createTrip}\n        disabled={city === null}\n      >\n        <span className=\"icono-plus\" />\n      </button>\n    </form>\n  );\n}\n\nexport default NewTrip;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FriendChip = ({\n  id,\n  first_name,\n  last_name,\n  username,\n  photo_url,\n  photoOnly\n}) => {\n  const photoSrc = photo_url || '/blank-profile-picture.png';\n  const tooltipText = username || `${first_name} ${last_name}`;\n\n  if (photoOnly) {\n    return (\n      <div className=\"uk-border-circle friend-chip\">\n        <img\n          className=\"uk-border-circle avatar-preview\"\n          alt=\"avatar\"\n          src={photoSrc}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Link className=\"uk-border-circle friend-chip\" to={`/users/${id}`}>\n      <img\n        className=\"uk-border-circle avatar-preview\"\n        alt=\"avatar\"\n        src={photoSrc}\n      />\n      <div className=\"uk-badge tooltip\">{tooltipText}</div>\n    </Link>\n  );\n};\n\nexport default FriendChip;\n","import React from 'react';\n\nimport getMonth from 'date-fns/get_month';\nimport getDate from 'date-fns/get_date';\nimport differenceInDays from 'date-fns/difference_in_days';\n\nconst MONTHS = [\n  'JAN',\n  'FEB',\n  'MAR',\n  'APR',\n  'MAY',\n  'JUN',\n  'JUL',\n  'AUG',\n  'SEP',\n  'OCT',\n  'NOV',\n  'DEC'\n];\n\nconst DateRange = ({ start_date, end_date }) => (\n  <div className=\"uk-flex date-range\">\n    <div>\n      <b>\n        {getDate(start_date)} <br /> {MONTHS[getMonth(start_date)]}\n      </b>\n    </div>\n    <div>\n      <b>\n        {getDate(end_date)} <br /> {MONTHS[getMonth(end_date)]}\n      </b>\n    </div>\n    <p\n      style={{\n        width: 92,\n        height: 42,\n        fontSize: 16,\n        textAlign: 'center',\n        margin: 2,\n        marginTop: 10\n      }}\n    >\n      {differenceInDays(end_date, start_date)} Day Trip\n    </p>\n  </div>\n);\n\nexport default DateRange;\n","import React, { Fragment, useState } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport ReactCountryFlag from 'react-country-flag';\nimport Flatpickr from 'react-flatpickr';\n\nimport format from 'date-fns/format';\nimport addDays from 'date-fns/add_days';\nimport subDays from 'date-fns/sub_days';\n\nimport FriendChip from './FriendChip.react';\nimport DateRange from './DateRange.react';\n\nfunction TripCard({ onUpdate, onDelete, disabledDates, ...props }) {\n  const { id, city, start_date, end_date, matches } = props;\n\n  const [editMode, setEditMode] = useState(false);\n  const [promptDel, setPromptDel] = useState(false);\n  const [dates, setDates] = useState([\n    new Date(start_date),\n    new Date(end_date)\n  ]);\n\n  const updateTrip = () => {\n    setEditMode(false);\n    return onUpdate({\n      id,\n      city: city.id,\n      start_date: format(dates[0], 'YYYY-MM-DD'),\n      end_date: format(dates[1], 'YYYY-MM-DD')\n    });\n  };\n\n  const disabledDatesMinusThoseForThisTrip = disabledDates.filter(\n    ({ from, to }) =>\n      !(\n        format(addDays(start_date, 1), 'YYYY-MM-DD') ===\n          format(from, 'YYYY-MM-DD') &&\n        format(subDays(end_date, 1), 'YYYY-MM-DD') === format(to, 'YYYY-MM-DD')\n      )\n  );\n\n  const deleteTrip = () => onDelete({ id });\n\n  if (promptDel) {\n    return (\n      <Fragment>\n        <div className=\"uk-tile uk-padding-small uk-flex uk-flex-between uk-background-muted\">\n          <div>\n            <h6>\n              <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n            </h6>\n          </div>\n          <p>Confirm you would like to delete this trip</p>\n          <span className=\"uk-flex\">\n            <hr className=\"uk-divider-vertical uk-margin-right uk-margin-left\" />\n            <span className=\"uk-flex uk-flex-column\">\n              <span className=\"icon-sm\">\n                <span className=\"icono-check\" onClick={deleteTrip} />\n              </span>\n              <span className=\"icon-sm\">\n                <span\n                  className=\"icono-cross\"\n                  onClick={e => setPromptDel(false)}\n                />\n              </span>\n            </span>\n          </span>\n        </div>\n        <hr />\n      </Fragment>\n    );\n  }\n\n  if (editMode) {\n    return (\n      <Fragment>\n        <div className=\"uk-tile uk-padding-small uk-flex uk-flex-between uk-background-muted\">\n          <div>\n            <h6>\n              <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n            </h6>\n          </div>\n          <Flatpickr\n            className=\"uk-input uk-width-1-3\"\n            options={{\n              mode: 'range',\n              disable: disabledDatesMinusThoseForThisTrip\n            }}\n            value={dates}\n            onChange={setDates}\n          />\n          <span className=\"uk-flex\">\n            <hr className=\"uk-divider-vertical uk-margin-right uk-margin-left\" />\n            <span className=\"uk-flex uk-flex-column\">\n              <span className=\"icon-sm\">\n                <span className=\"icono-check\" onClick={updateTrip} />\n              </span>\n              <span className=\"icon-sm\">\n                <span\n                  className=\"icono-cross\"\n                  onClick={e => setEditMode(!editMode)}\n                />\n              </span>\n            </span>\n          </span>\n        </div>\n        <hr />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"uk-tile uk-padding-small uk-flex uk-flex-between uk-link-muted\">\n        <Link to={`/trips/${id}`}>\n          <h6>\n            <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n          </h6>\n          <DateRange start_date={start_date} end_date={end_date} />\n        </Link>\n        <span className=\"uk-flex\">\n          <span className=\"uk-flex\">\n            {matches.slice(0, 3).map(m => (\n              <FriendChip key={m.id} {...m} />\n            ))}\n            <ExtraFriends allFriends={matches} numDisplayed={3} />\n          </span>\n          <span className=\"uk-flex\">\n            <hr className=\"uk-divider-vertical uk-margin-right uk-margin-left\" />\n            <span className=\"uk-flex uk-flex-column\">\n              <span className=\"icon-sm\">\n                <span\n                  className=\"icono-gear\"\n                  onClick={e => {\n                    e.preventDefault();\n                    setEditMode(!editMode);\n                  }}\n                />\n              </span>\n              <span className=\"icon-sm\">\n                <span\n                  className=\"icono-trash\"\n                  onClick={e => {\n                    e.preventDefault();\n                    setPromptDel(true);\n                  }}\n                />\n              </span>\n            </span>\n          </span>\n        </span>\n      </div>\n      <hr />\n    </Fragment>\n  );\n}\n\nconst ExtraFriends = ({ allFriends, numDisplayed }) => {\n  if (allFriends.length > numDisplayed) {\n    return (\n      <div className=\"uk-border-circle avatar-preview uk-background-muted\">\n        <p className=\"uk-border-circle uk-dark\">\n          +{allFriends.length - numDisplayed}\n        </p>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default withRouter(TripCard);\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => (\n  <div className=\"spinner-container\">\n    <div className=\"lds-ripple\">\n      <div />\n      <div />\n    </div>\n  </div>\n);\n\nexport default Spinner;\n","//\n// Page with a list of trips for the user\n//\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  fetchTrips,\n  fetchCities,\n  createTrip,\n  fetchFriends,\n  updateTrip,\n  deleteTrip\n} from '../actions';\n\nimport differenceInDays from 'date-fns/difference_in_days';\nimport isBefore from 'date-fns/is_before';\nimport {\n  isFutureTrip,\n  isPastTrip,\n  determineAlreadySelectedTripDates\n} from '../helpers/dateUtils';\n\nimport NewTrip from '../components/NewTrip.react';\nimport TripCard from '../components/TripCard.react';\nimport Spinner from '../components/Spinner.react';\n\nfunction TripDashboard(props) {\n  // Get data out of redux\n  const { cities, trips, users } = props;\n\n  const [isShowingPastTrips, showPastTrips] = useState(false);\n\n  // Load API data for page\n  useEffect(() => {\n    if (!cities.isFetching && !cities.hasFetched) {\n      props.fetchCities();\n    }\n    if (!trips.isFetching && !trips.hasFetched) {\n      props.fetchTrips();\n    }\n  }, []);\n\n  const togglePastTrips = () => {\n    if (!isShowingPastTrips) {\n      props.fetchTrips({\n        end_date_after: new Date('2018-01-01')\n      });\n    }\n    showPastTrips(!isShowingPastTrips);\n  };\n\n  const populatedTrips = trips.ids\n    .map(tId => {\n      const trip = trips.all[tId];\n      return {\n        ...trip,\n        city: cities.all[trip.city],\n        matches: trip.matches.map(match => {\n          const [uId, start, end] = match.split('::');\n          return {\n            ...users.all[uId],\n            start_date: start,\n            end_date: end\n          };\n        })\n      };\n    })\n    .filter(trip => isShowingPastTrips || isBefore(new Date(), trip.end_date));\n\n  // Sort so the soonest trip is first in the list\n  populatedTrips.sort((a, b) => differenceInDays(a.start_date, b.start_date));\n\n  const disabledDates = determineAlreadySelectedTripDates(populatedTrips);\n\n  return (\n    <Fragment>\n      <h4>ADD NEW TRIP</h4>\n      <NewTrip\n        cities={cities}\n        trips={populatedTrips}\n        isLoadingCities={cities.isFetching}\n        onCreateTrip={props.createTrip}\n        disabledDates={disabledDates}\n      />\n\n      <TripsList\n        isFetching={trips.isFetching}\n        trips={populatedTrips}\n        updateTrip={props.updateTrip}\n        deleteTrip={props.deleteTrip}\n        disabledDates={disabledDates}\n      />\n\n      <button\n        className=\"uk-button uk-button-secondary\"\n        onClick={togglePastTrips}\n      >\n        {isShowingPastTrips ? 'Hide Past Trips' : 'Show Past Trips'}\n      </button>\n    </Fragment>\n  );\n}\n\nfunction TripsList({\n  isFetching,\n  trips,\n  disabledDates,\n  updateTrip,\n  deleteTrip\n}) {\n  if (isFetching) {\n    return <Spinner />;\n  }\n\n  if (trips.length === 0) {\n    return <p>You have no upcoming trips. Hope you enjoy your rest.</p>;\n  }\n\n  // TODO: Pagination\n\n  const fTrips = trips.filter(isFutureTrip);\n  const pTrips = trips.filter(isPastTrip);\n\n  return (\n    <Fragment>\n      {pTrips.length > 0 && <h4>PAST TRIPS</h4>}\n      {pTrips.map(trip => (\n        <TripCard\n          key={trip.id}\n          onUpdate={updateTrip}\n          onDelete={deleteTrip}\n          disabledDates={disabledDates}\n          {...trip}\n        />\n      ))}\n      {fTrips.length > 0 && <h4>UPCOMING TRIPS</h4>}\n      {fTrips.map(trip => (\n        <TripCard\n          key={trip.id}\n          onUpdate={updateTrip}\n          onDelete={deleteTrip}\n          disabledDates={disabledDates}\n          {...trip}\n        />\n      ))}\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = ({ cities, trips, users }) => ({\n  cities,\n  trips,\n  users\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchTrips,\n    fetchCities,\n    fetchFriends,\n    createTrip,\n    updateTrip,\n    deleteTrip\n  }\n)(TripDashboard);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactCountryFlag from 'react-country-flag';\n\nimport FriendChip from './FriendChip.react';\n\nimport differenceInDays from 'date-fns/difference_in_days';\nimport getOverlappingDaysInRanges from 'date-fns/get_overlapping_days_in_ranges';\nimport format from 'date-fns/format';\n\nconst TripPanel = ({ city, start_date, end_date, matches, isActive }) => (\n  <dl className=\"uk-description-list\">\n    <dt>Location</dt>\n    <dd className=\"uk-padding-small\">\n      <span className=\"uk-padding-small\">{city.name}</span>\n      <ReactCountryFlag code={city.country_code} svg />\n    </dd>\n    <dt>Duration</dt>\n    <dd className=\"uk-padding-small\">\n      <span className=\"uk-padding\">\n        You will be in {city.name} for {differenceInDays(end_date, start_date)}{' '}\n        Days\n      </span>\n      <OverlapBar\n        start_date={start_date}\n        end_date={end_date}\n        to={end_date}\n        from={start_date}\n      />\n    </dd>\n    <OverlappingFriends\n      matches={matches}\n      start_date={start_date}\n      end_date={end_date}\n    />\n  </dl>\n);\n\nconst OverlappingFriends = ({ matches, start_date, end_date }) => {\n  if (matches.length === 0) {\n    return (\n      <p>\n        None of your friends trips are currently overlapping with this one.\n        Maybe you need to add some people you know to improve your chances?\n      </p>\n    );\n  }\n\n  return (\n    <Fragment>\n      <dt>Friends with overlapping dates</dt>\n      <dd>\n        <span className=\"uk-padding\">\n          {matches.map(m => (\n            <OverlapGraph key={m.id} {...m} from={start_date} to={end_date} />\n          ))}\n        </span>\n      </dd>\n    </Fragment>\n  );\n};\n\nconst OverlapGraph = ({\n  id,\n  first_name,\n  last_name,\n  username,\n  photo_url,\n  start_date,\n  end_date,\n  from,\n  to\n}) => (\n  <div className=\"overlap-graph\">\n    <div className=\"uk-flex uk-flex-middle\">\n      <FriendChip\n        id={id}\n        username={username}\n        first_name={first_name}\n        last_name={last_name}\n        photo_url={photo_url}\n        photoOnly\n      />\n      <Link to={`/users/${id}`} className=\"chip-label uk-link-muted\">\n        @{username}\n      </Link>\n    </div>\n    <OverlapBar\n      start_date={start_date}\n      end_date={end_date}\n      to={to}\n      from={from}\n    />\n  </div>\n);\n\nconst OverlapBar = ({ id, start_date, end_date, from, to }) => {\n  const totalLength = differenceInDays(to, from);\n  const daysFromStart = differenceInDays(start_date, from);\n  const daysOverlap = getOverlappingDaysInRanges(\n    from,\n    to,\n    start_date,\n    end_date\n  );\n\n  const STYLES = {\n    width: `${Math.floor((daysOverlap * 80) / totalLength)}%`\n  };\n  const START_STYLES = {\n    marginLeft: `${Math.max(\n      Math.floor((daysFromStart * 80) / totalLength) - 5,\n      0\n    )}%`\n  };\n\n  // TODO: This look gross ATM\n  return null;\n  return (\n    <div className=\"uk-flex uk-flex-around uk-padding-small\">\n      <span className=\"date-icon\" style={START_STYLES}>\n        {format(start_date, 'DD MMM')}\n      </span>\n      <li className=\"uk-list overlap-bar\" style={STYLES}>\n        {daysOverlap} Days\n      </li>\n      <span className=\"date-icon\">{format(end_date, 'DD MMM')}</span>\n    </div>\n  );\n};\n\nexport default TripPanel;\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrip } from '../actions';\n\nimport TripPanel from '../components/TripPanel.react';\nimport Spinner from '../components/Spinner.react';\n\nconst TripDetail = ({ match, trips, cities, users, fetchTrip }) => {\n  const tripId = parseInt(match.params.id, 10);\n\n  // Clone the trip\n  let trip = trips.all[tripId];\n  if (trip) {\n    trip = {\n      ...trip,\n      city: cities[trip.city],\n      matches: trip.matches.map(match => {\n        const [uId, start, end] = match.split('::');\n        return {\n          ...users.all[uId],\n          start_date: start,\n          end_date: end\n        };\n      })\n    };\n  }\n\n  useEffect(() => {\n    // Get it from the API if:\n    //   - it is not currently fetching trips\n    //   - we don't have the trip in the store already\n    if (!trips.isFetching && !trip) {\n      fetchTrip(tripId);\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <h4>TRIP SUMMARY</h4>\n      <MainPanel isFetching={trips.isFetching} trip={trip} />\n    </Fragment>\n  );\n};\n\nconst MainPanel = ({ isFetching, trip }) => {\n  if (isFetching || !trip) {\n    return <Spinner />;\n  }\n  return <TripPanel {...trip} />;\n};\n\nconst mapStateToProps = ({ trips, users, cities }) => ({\n  trips,\n  users,\n  cities: cities.all\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchTrip\n  }\n)(TripDetail);\n","import React from 'react';\n\nconst FriendshipStatus = ({ user, onRequest, onAccept }) => {\n  if (user && user.is_you) {\n    return (\n      <button className=\"uk-button uk-flex\" disabled>\n        <div className=\"icon-sm\">\n          <span className=\"icono-smile\" />\n        </div>\n        <div>You</div>\n      </button>\n    );\n  }\n  if (user && user.is_friend) {\n    return (\n      <button className=\"uk-button uk-flex\" disabled>\n        <div className=\"icon-sm\">\n          <span className=\"icono-check\" />\n        </div>\n        <div>Friends</div>\n      </button>\n    );\n  }\n  if (user && user.is_pending_friend) {\n    return (\n      <button onClick={onAccept} className=\"uk-button uk-flex\">\n        <div>Accept</div>\n      </button>\n    );\n  }\n  if (user && user.have_requested_friend) {\n    return (\n      <button className=\"uk-button uk-flex\" disabled>\n        <div className=\"icon-sm\">\n          <span className=\"icono-clock\" />\n        </div>\n        <div>Waiting</div>\n      </button>\n    );\n  }\n\n  return (\n    <button className=\"uk-button uk-flex\" onClick={onRequest}>\n      <div className=\"icon-sm\">\n        <span className=\"icono-plus\" />\n      </div>\n      <div>Request</div>\n    </button>\n  );\n};\n\nexport default FriendshipStatus;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport { apiUrl } from '../config';\n\nimport FriendChip from './FriendChip.react';\nimport FriendStatusButton from './FriendStatusButton.react';\n\n// TODO:\n//  - integrate with search API\n//  - present results effectively\n//  - request button\nfunction FriendSearch({\n  users,\n  onRequestFriend,\n  onAcceptFriend,\n  fetchFriends\n}) {\n  const [results, setResults] = useState([]);\n  const [phrase, setPhrase] = useState('');\n\n  // Each time the user types, we send a search query.\n  //\n  // TODO:\n  // - Should this be debounced?\n  // - Encoding query strings\n  //\n  useEffect(\n    () => {\n      const CancelToken = axios.CancelToken;\n      const source = CancelToken.source();\n\n      if (phrase) {\n        axios\n          .get(`${apiUrl}/u/search/?q=${phrase}`, {\n            cancelToken: source.token,\n            withCredentials: true\n          })\n          .then(({ data }) => setResults(data.data))\n          .catch(err => {\n            // All good.\n            if (err && err.message === 'unmount') {\n              return;\n            }\n\n            // TODO: Handle this!\n            console.log(err);\n          });\n      } else {\n        setResults([]);\n      }\n\n      // Cancel the request if the component is unmounted\n      return () => source.cancel('unmount');\n    },\n    [phrase]\n  );\n\n  return (\n    <div className=\"uk-padding-small\">\n      <input\n        className=\"uk-input\"\n        placeholder=\"Search for Telegram Username / Full Name\"\n        value={phrase}\n        onChange={e => setPhrase(e.target.value)}\n      />\n      <hr />\n      <dl className=\"uk-description-list\">\n        {results.map(r => {\n          // Get friend object so we can tell if we're friends with each search result\n          const friendObj = users.all[r.id];\n\n          // Don't show yourself in search results\n          if (friendObj && friendObj.is_you) {\n            return null;\n          }\n\n          return (\n            <Fragment key={r.id}>\n              <dt>{r.username}</dt>\n              <dd className=\"uk-padding-small uk-flex uk-flex-between\">\n                <span className=\"uk-flex\">\n                  <FriendChip\n                    {...r}\n                    photoOnly={!friendObj || !friendObj.is_friend}\n                  />\n                  <p>\n                    {r.first_name} {r.last_name}\n                  </p>\n                </span>\n                <span className=\"uk-flex\">\n                  <hr\n                    style={{ height: 30 }}\n                    className=\"uk-divider-vertical uk-margin-right uk-margin-left\"\n                  />\n                  <FriendStatusButton\n                    user={friendObj}\n                    onAccept={() => onAcceptFriend(r)}\n                    onRequest={() => onRequestFriend(r)}\n                  />\n                </span>\n              </dd>\n            </Fragment>\n          );\n        })}\n      </dl>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ users }) => ({\n  users\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(FriendSearch);\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  fetchFriends,\n  requestFriendship,\n  acceptFriendRequest\n} from '../actions';\n\nimport Spinner from '../components/Spinner.react';\nimport FriendChip from '../components/FriendChip.react';\nimport FriendSearch from '../components/FriendSearch.react';\nimport FriendStatusButton from '../components/FriendStatusButton.react';\n\nconst FriendsList = ({\n  users,\n  fetchFriends,\n  requestFriendship,\n  acceptFriendRequest,\n  activeUser\n}) => {\n  useEffect(() => {\n    if (!users.isFetching) {\n      fetchFriends();\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <MainPanel\n        isFetching={users.isFetching && users.ids.length === 0}\n        users={users}\n        activeUser={activeUser}\n        acceptFriendRequest={acceptFriendRequest}\n        requestFriendship={requestFriendship}\n      />\n    </Fragment>\n  );\n};\n\nconst MainPanel = ({\n  isFetching,\n  users,\n  activeUser,\n  acceptFriendRequest,\n  requestFriendship\n}) => {\n  if (isFetching) {\n    return <Spinner />;\n  }\n\n  const friendList = Object.keys(users.all)\n    .filter(uId => parseInt(uId, 10) !== activeUser)\n    .map(uId => users.all[uId]);\n\n  const accepted = friendList.filter(f => f.is_friend);\n  const hasFriends = accepted.length > 0;\n  const pending = friendList.filter(f => f.is_pending_friend);\n  const hasPendingFriends = pending.length > 0;\n\n  return (\n    <Fragment>\n      {hasFriends && <h4>FRIENDS</h4>}\n      {accepted.map(f => (\n        <FriendChip key={f.id} {...f} />\n      ))}\n      {hasPendingFriends && <h4>PENDING REQUESTS</h4>}\n      {pending.map(f => (\n        <Fragment key={f.id}>\n          <FriendChip {...f} onAccept={() => acceptFriendRequest(f)} />\n          <FriendStatusButton\n            user={f}\n            onAccept={() => acceptFriendRequest(f)}\n          />\n        </Fragment>\n      ))}\n      <h4>FIND FRIENDS</h4>\n      <FriendSearch\n        users={users}\n        onRequestFriend={requestFriendship}\n        onAcceptFriend={acceptFriendRequest}\n      />\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ users, activeUser }) => ({\n  users,\n  activeUser\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchFriends,\n    requestFriendship,\n    acceptFriendRequest\n  }\n)(FriendsList);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Map, Marker, Popup, TileLayer, Polyline } from 'react-leaflet';\nimport { divIcon } from 'leaflet';\n\nimport differenceInDays from 'date-fns/difference_in_days';\n\nimport { apiUrl } from '../config';\nimport { isFutureTrip, isPastTrip, isCurrentTrip } from '../helpers/dateUtils';\n\nimport Spinner from './Spinner.react';\n\n// Custom Icon for the leaftlet map.\nconst locationIcon = divIcon({\n  html: '<span class=\"icono-caretDown\"/>',\n  iconSize: [25, 25],\n  iconAnchor: [17, 24],\n  popupAnchor: [-3, -26]\n});\n\nconst LocationMap = ({ userId }) => {\n  const [locations, setLocations] = useState(null);\n\n  const fetchUserLocations = id => {\n    if (!id) {\n      return;\n    }\n    setLocations(null);\n    return axios(`${apiUrl}/u/${id}/locations/`, {\n      withCredentials: true\n    }).then(res => {\n      if (res.status === 200) {\n        setLocations(res.data.data);\n      } else if (res.status === 404) {\n        setLocations([]);\n      }\n    });\n  };\n\n  useEffect(\n    () => {\n      fetchUserLocations(userId);\n    },\n    [userId]\n  );\n\n  if (locations === null) {\n    return <Spinner />;\n  }\n\n  // Sort so the soonest trip is first in the list\n  locations.sort((a, b) => differenceInDays(a.start_date, b.start_date));\n\n  const fLocations = locations.filter(isFutureTrip);\n  const cLocation = locations.find(isCurrentTrip) || fLocations[0];\n\n  const pLocations = locations.filter(isPastTrip);\n  if (cLocation) {\n    pLocations.push(cLocation);\n  }\n\n  const position = [51.505, -0.09];\n\n  return (\n    <Fragment>\n      <Map center={position} zoom={1} style={{ height: 300 }}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <Polyline\n          positions={pLocations.map(({ city }) => [\n            city.latitude,\n            city.longitude\n          ])}\n          color=\"black\"\n        />\n        <Polyline\n          positions={fLocations.map(({ city }) => [\n            city.latitude,\n            city.longitude\n          ])}\n          color=\"#bf4e4e\"\n        />\n        {locations.map(({ id, city, start_date, end_date }) => (\n          <Marker\n            key={id}\n            position={[city.latitude, city.longitude]}\n            icon={locationIcon}\n          >\n            <Popup>{city.name}</Popup>\n          </Marker>\n        ))}\n      </Map>\n      <dl className=\"uk-description-list\" style={{ textAlign: 'left' }}>\n        <dt>Past Trips</dt>\n        <dt style={{ color: '#bf4e4e' }}>Future Trips</dt>\n      </dl>\n    </Fragment>\n  );\n};\n\nexport default LocationMap;\n","import React from 'react';\n\nconst TelegramLink = ({ username }) => {\n  if (!username) {\n    return null;\n  }\n  return (\n    <a\n      className=\"uk-button telegram-link\"\n      href={`https://t.me/${username}`}\n      target=\"_blank\"\n      rel=\"no-opener\"\n    >\n      <img src=\"/telegram.svg\" alt=\"telegram-icon\" />\n      <span>Send Message</span>\n    </a>\n  );\n};\n\nexport default TelegramLink;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchUser, requestFriendship, acceptFriendRequest } from '../actions';\n\nimport Spinner from '../components/Spinner.react';\nimport FriendStatusButton from '../components/FriendStatusButton.react';\nimport LocationMap from '../components/LocationMap.react';\nimport TelegramLink from '../components/TelegramLink.react';\n\nconst UserProfile = ({\n  match,\n  users,\n  fetchUser,\n  activeUser,\n  requestFriendship,\n  acceptFriendRequest\n}) => {\n  const userId = parseInt(match.params.id, 10);\n\n  // Clone the trip\n  let user = users.all[userId];\n\n  useEffect(\n    () => {\n      // Get it from the API if:\n      //   - it is not currently fetching users\n      if (!users.isFetching && userId !== activeUser) {\n        fetchUser(userId);\n      }\n    },\n    [userId]\n  );\n\n  return (\n    <MainPanel\n      isFetching={users.isFetching}\n      user={user}\n      activeUser={activeUser}\n      onRequest={() => requestFriendship(user)}\n      onAccept={() => acceptFriendRequest(user)}\n    />\n  );\n};\n\nconst MainPanel = ({ isFetching, user, activeUser, onRequest, onAccept }) => {\n  if (isFetching || !user) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"centered-hero\">\n      <div className=\"uk-flex uk-flex-left profile-details\">\n        <div className=\"uk-flex uk-flex-left\">\n          <img\n            className=\"avatar-big uk-border-circle\"\n            alt=\"avatar\"\n            src={user.photo_url || '/blank-profile-picture.png'}\n          />\n\n          <div className=\"uk-flex uk-flex-column uk-padding\">\n            {user.username && <h4>@{user.username}</h4>}\n            <span>\n              {user.first_name.toUpperCase()} {user.last_name.toUpperCase()}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"user-icons\">\n          <FriendStatusButton\n            user={user}\n            onRequest={onRequest}\n            onAccept={onAccept}\n          />\n        </div>\n        <div className=\"user-icons\">\n          <TelegramLink username={user.username} />\n        </div>\n      </div>\n\n      <hr />\n\n      <LocationMap userId={user.id} />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ users, activeUser }) => ({\n  users,\n  activeUser\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchUser,\n    requestFriendship,\n    acceptFriendRequest\n  }\n)(UserProfile);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCities, fetchExploreSuggestions } from '../actions';\n\nimport addDays from 'date-fns/add_days';\nimport format from 'date-fns/format';\n\nimport Select from 'react-select';\nimport Flatpickr from 'react-flatpickr';\nimport ReactCountryFlag from 'react-country-flag';\n\nimport Spinner from '../components/Spinner.react';\nimport FriendChip from '../components/FriendChip.react';\n\nconst CONTINENT_OPTIONS = [\n  { label: 'Europe', value: 'EU' },\n  { label: 'North America', value: 'NA' },\n  { label: 'South America', value: 'SA' },\n  { label: 'Africa', value: 'AF' },\n  { label: 'Asia', value: 'AS' },\n  { label: 'Oceania', value: 'OC' }\n];\n\nconst Explore = ({\n  cities,\n  suggestions,\n  users,\n  fetchCities,\n  activeUser,\n  fetchExploreSuggestions\n}) => {\n  const [continent, setContinent] = useState(null);\n  const [dates, setDates] = useState([new Date(), addDays(new Date(), 7)]);\n\n  useEffect(() => {\n    if (!cities.isFetching && cities.ids.length === 0) {\n      fetchCities();\n    }\n  }, []);\n\n  useEffect(\n    () => {\n      if (continent && dates[0] && dates[1]) {\n        fetchExploreSuggestions({\n          continent: continent.value,\n          start_date: format(dates[0], 'YYYY-MM-DD'),\n          end_date: format(dates[1], 'YYYY-MM-DD')\n        });\n      }\n    },\n    [continent, dates[0], dates[1]]\n  );\n\n  if (suggestions.isFetching) {\n    return <Spinner />;\n  }\n\n  const populatedSuggestions = suggestions.ids.map(sId => {\n    const s = suggestions.all[sId];\n    const us = s.users.map(uId => users.all[uId]);\n    return {\n      city: cities.all[s.city],\n      users: us\n    };\n  });\n\n  return (\n    <Fragment>\n      <h4>FILTERS</h4>\n      <div className=\"uk-flex uk-flex-around\">\n        <Select\n          styles={{\n            container: () => ({\n              width: 250\n            }),\n            menu: provided => ({\n              ...provided,\n              top: null\n            })\n          }}\n          placeholder=\"Continent\"\n          className=\"contient-picker\"\n          isSearchAble\n          isLoading={suggestions.isFetching}\n          value={continent}\n          onChange={setContinent}\n          options={CONTINENT_OPTIONS}\n        />\n        <Flatpickr\n          className=\"uk-input uk-width-1-3@m\"\n          options={{\n            mode: 'range',\n            dateFormat: 'Y-m-d'\n          }}\n          value={dates}\n          onChange={setDates}\n        />\n      </div>\n      <h4>SUGGESTIONS</h4>\n      <SuggestionList suggestions={populatedSuggestions} />\n    </Fragment>\n  );\n};\n\nconst SuggestionList = ({ suggestions }) => {\n  if (suggestions.length === 0) {\n    return (\n      <div>\n        No suggested trips for these filters... Try another continent or date\n        range.\n      </div>\n    );\n  }\n  return (\n    <div>\n      {suggestions.map(({ city, users }) => (\n        <div\n          key={city.id}\n          className=\"uk-tile uk-padding-small uk-flex uk-flex-between uk-link-muted\"\n        >\n          <h6>\n            <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n          </h6>\n          {users.map(u => <FriendChip key={u.id} {...u} />)}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ cities, suggestions, users, activeUser }) => ({\n  cities,\n  suggestions,\n  users,\n  activeUser\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchCities,\n    fetchExploreSuggestions\n  }\n)(Explore);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { withCookies } from 'react-cookie';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      rest.cookies.get('sessionid') ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login'\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default withCookies(PrivateRoute);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { stringify } from 'query-string';\nimport TelegramLoginButton from 'react-telegram-login';\n\nimport { apiUrl, botName } from '../config';\n\nclass Login extends Component {\n  state = {\n    errMsg: null\n  };\n\n  handleResponse = data => {\n    return axios({\n      url: `${apiUrl}/u/auth/?${stringify(data)}`,\n      method: 'get',\n      withCredentials: true\n    })\n      .then(res => {\n        // Pass the user data back to the main app\n        this.props.onLogin(data);\n      })\n      .catch(err => {\n        if (err.response) {\n          const errMsg =\n            (err.response.data &&\n              err.response.data.errors &&\n              err.response.data.errors[0]) ||\n            err.response;\n\n          this.setState({ errMsg });\n        } else {\n          this.setState({ errMsg: 'Unable to connect to the API' });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <section className=\"uk-flex uk-flex-center\">\n        <div className=\"uk-panel uk-panel-box uk-text-center telegram-login-container\">\n          <img\n            src=\"/logo.png\"\n            alt=\"logo\"\n            style={{ height: 55, paddingRight: 15, paddingLeft: 15 }}\n          />\n          <h1>LOCATIONLESS</h1>\n          <hr />\n          <TelegramLoginButton\n            dataOnauth={this.handleResponse}\n            botName={botName}\n          />\n          <hr />\n          <p>\n            You will need an account on\n            <a target=\"_blank\" href=\"https://telegram.org\" rel=\"no-opener\">\n              Telegram\n            </a>{' '}\n            to get started\n          </p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React, { useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withCookies } from 'react-cookie';\n\nconst Header = ({ cookies, onLogout, activeUser, history }) => {\n  if (!activeUser || !cookies.get('sessionid')) {\n    return null;\n  }\n  return (\n    <div className=\"uk-navbar-container\">\n      <nav className=\"uk-navbar uk-container\">\n        <div className=\"uk-navbar-left\">\n          <MobileNavbar\n            activeUser={activeUser}\n            onLogout={onLogout}\n            history={history}\n          />\n          <Link className=\"uk-navbar-item uk-logo\" to=\"/\">\n            <img\n              src=\"/logo.png\"\n              alt=\"logo\"\n              style={{ height: 35, paddingRight: 15, paddingLeft: 15 }}\n            />\n            Locationless\n          </Link>\n        </div>\n\n        <DesktopNavbar activeUser={activeUser} onLogout={onLogout} />\n      </nav>\n    </div>\n  );\n};\n\nconst MobileNavbar = ({ activeUser, onLogout, history }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const navigateTo = to => {\n    setIsOpen(false);\n    history.push(to);\n  };\n  const logout = () => {\n    setIsOpen(false);\n    onLogout();\n  };\n\n  return (\n    <Fragment>\n      <div\n        className=\"uk-navbar-item uk-hidden@s\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <div className=\"icono-hamburger\" onClick={() => setIsOpen(!isOpen)} />\n      </div>\n      {isOpen && (\n        <div className=\"fullscreen-mobile-menu\">\n          <ul className=\"uk-list\">\n            <li className=\"uk-navbar-item\" onClick={() => setIsOpen(!isOpen)}>\n              <div className=\"icono-cross\" />\n            </li>\n            <li\n              className=\"uk-navbar-item\"\n              onClick={() => navigateTo('/explore')}\n            >\n              <h4>EXPLORE</h4>\n            </li>\n            <li\n              className=\"uk-navbar-item\"\n              onClick={() => navigateTo('/friends')}\n            >\n              <h4>FRIENDS</h4>\n            </li>\n            <li\n              className=\"uk-navbar-item\"\n              onClick={() => navigateTo(`/users/${activeUser}`)}\n            >\n              <h4>PROFILE</h4>\n            </li>\n            <li className=\"uk-navbar-item\" onClick={() => logout()}>\n              <h4>LOGOUT</h4>\n            </li>\n          </ul>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst DesktopNavbar = ({ activeUser, onLogout }) => (\n  <div className=\"uk-navbar-right uk-visible@s\">\n    <ul className=\"uk-navbar-nav\">\n      <li className=\"uk-navbar-item\">\n        <Link to=\"/explore\">Explore</Link>\n      </li>\n      <li className=\"uk-navbar-item\">\n        <Link to=\"/friends\">Friends</Link>\n      </li>\n      <li className=\"uk-navbar-item\">\n        <Link to={`/users/${activeUser}`}>Profile</Link>\n      </li>\n      <li className=\"uk-navbar-item\">\n        <a onClick={onLogout}>Logout</a>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default withRouter(withCookies(Header));\n","export const SERVER_ERR =\n  \"Something has gone wrong. We're going to try turning it off and on again.\";\nexport const NOT_FOUND = 'Nothing to see here.';\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { withCookies } from 'react-cookie';\nimport { withRouter, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\nimport TripDashboard from './pages/TripDashboard.react';\nimport TripDetail from './pages/TripDetail.react';\nimport FriendsList from './pages/FriendsList.react';\nimport UserProfile from './pages/UserProfile.react';\nimport Explore from './pages/Explore.react';\n\nimport PrivateRoute from './components/PrivateRoute.react';\nimport Login from './components/Login.react';\nimport Header from './components/Header.react';\nimport Spinner from './components/Spinner.react';\n\nimport { setUsers, logout } from './actions';\nimport { NOT_FOUND } from './errorMessages';\n\nimport { apiUrl } from './config';\n\nimport './App.css';\nimport 'uikit/dist/css/uikit.css';\n\nclass App extends Component {\n  onLogout() {\n    this.props.cookies.remove('sessionid');\n    this.props.logout();\n    axios.post(`${apiUrl}/u/logout/`, { withCredentials: true });\n    this.props.history.push('/login');\n  }\n\n  onLogin(data) {\n    this.props.history.push('/');\n    this.props.setUsers({\n      data: {\n        ...data,\n        is_you: true\n      }\n    });\n  }\n\n  componentDidMount() {\n    const { activeUser, location } = this.props;\n\n    if (!activeUser && location.pathname !== '/login') {\n      axios\n        .get(`${apiUrl}/u/`, { withCredentials: true })\n        .then(({ data }) => this.props.setUsers({ data: data.data }))\n        .catch(err => {\n          this.props.history.push('/login');\n        });\n    }\n  }\n\n  renderAuthorTag() {\n    return (\n      <div className=\"author\">\n        <a href=\"https://jtfell.github.io\" target=\"_blank\" rel=\"noopener\">\n          by jtfell\n        </a>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.error.message) {\n      return <ErrorPage msg={this.props.error.message} />;\n    }\n\n    // Show spinner while loading the current user\n    if (!this.props.activeUser && this.props.location.pathname !== '/login') {\n      return (\n        <Fragment>\n          <Spinner />\n          {this.renderAuthorTag()}\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        <Header\n          onLogout={this.onLogout.bind(this)}\n          activeUser={this.props.activeUser}\n        />\n        <main className=\"uk-container uk-container-small uk-container-center uk-padding\">\n          <Switch>\n            <Route\n              path=\"/login\"\n              component={() => <Login onLogin={this.onLogin.bind(this)} />}\n            />\n\n            <PrivateRoute exact path=\"/\" component={TripDashboard} />\n            <PrivateRoute path=\"/trips/:id\" component={TripDetail} />\n            <PrivateRoute exact path=\"/friends\" component={FriendsList} />\n            <PrivateRoute exact path=\"/explore\" component={Explore} />\n            <PrivateRoute path=\"/users/:id\" component={UserProfile} />\n            <Route component={() => <ErrorPage msg={NOT_FOUND} hideLogo />} />\n          </Switch>\n        </main>\n\n        {this.renderAuthorTag()}\n      </Fragment>\n    );\n  }\n}\n\nconst ErrorPage = ({ msg, hideLogo }) => (\n  <main className=\"uk-container uk-container-small uk-container-center uk-padding\">\n    {!hideLogo && (\n      <a href=\"/\">\n        <img src=\"/logo.png\" alt=\"logo\" style={{ height: 85, padding: 15 }} />\n      </a>\n    )}\n    <hr />\n    <h4>{msg}</h4>\n  </main>\n);\n\nconst mapStateToProps = ({ users, activeUser, error }) => ({\n  users,\n  activeUser,\n  error\n});\n\nexport default withRouter(\n  withCookies(\n    connect(\n      mapStateToProps,\n      {\n        setUsers,\n        logout\n      }\n    )(App)\n  )\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  API_START,\n  API_END,\n  API_ERROR,\n  LOGOUT,\n  SET_USERS,\n  FETCH_USER,\n  SET_TRIPS,\n  FETCH_TRIPS,\n  REMOVE_TRIP,\n  FETCH_FRIENDS,\n  SET_CITIES,\n  FETCH_CITIES,\n  SET_EXPLORE_SUGGESTIONS\n} from '../actions/types';\n\nimport { reduceError } from './util';\n\nimport { normalize, schema } from 'normalizr';\n\nconst user = new schema.Entity('users');\nconst city = new schema.Entity('cities');\nconst match = new schema.Entity(\n  'matches',\n  {\n    user\n  },\n  {\n    idAttribute: v => `${v.user.id}::${v.start_date}::${v.end_date}`\n  }\n);\n\nconst trip = new schema.Entity(\n  'trips',\n  {\n    user,\n    city,\n    matches: [match]\n  },\n  {\n    processStrategy: (value, parent, key) => {\n      const matches = value.matches || [];\n      return { ...value, matches };\n    }\n  }\n);\n\nconst suggestion = new schema.Entity(\n  'suggestions',\n  {\n    city,\n    users: [user]\n  },\n  {\n    idAttribute: v => v.city.id\n  }\n);\n\nconst schemas = {\n  users: user,\n  cities: city,\n  trips: trip,\n  suggestions: suggestion\n};\n\nconst initialState = {\n  activeUser: null,\n\n  error: {\n    status: null,\n    message: null\n  },\n\n  trips: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false\n  },\n  cities: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false\n  },\n  users: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false\n  },\n  suggestions: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false\n  }\n};\n\nconst ENTITIES = ['trips', 'cities', 'users', 'suggestions'];\n\nconst insertEntities = (state, data, entity, overwrite = false) => {\n  // Make sure we have an array\n  if (!Array.isArray(data)) {\n    data = [data];\n  }\n\n  // Normalise the data\n  const normData = normalize(data, [schemas[entity]]);\n\n  const newState = { ...state };\n  Object.keys(state).forEach(e => {\n    if (!state[e] || ENTITIES.indexOf(e) === -1) {\n      return;\n    }\n\n    newState[e] = {\n      ...state[e]\n    };\n\n    // Merge in all the new objects for each entity\n    const allIds = [\n      ...new Set(\n        Object.keys(state[e].all).concat(\n          Object.keys(normData.entities[e] || {})\n        )\n      )\n    ];\n    allIds.forEach(id => {\n      newState[e].all[id] = Object.assign(\n        {},\n        state[e].all[id],\n        (normData.entities[e] || {})[id]\n      );\n    });\n  });\n\n  if (!overwrite) {\n    // Add all the new IDs to the primary entity\n    const existingIds = state[entity].ids;\n    newState[entity].ids = [...new Set(existingIds.concat(normData.result))];\n  } else {\n    newState[entity].ids = normData.result;\n  }\n\n  return newState;\n};\n\nconst TRIPS_LABELS = [FETCH_TRIPS];\nconst CITIES_LABELS = [FETCH_CITIES];\nconst USERS_LABELS = [FETCH_USER, FETCH_FRIENDS];\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOGOUT:\n      return initialState;\n    case API_ERROR:\n      return reduceError(state, action);\n\n    case REMOVE_TRIP: {\n      const trips = Object.assign({}, state.trips);\n      trips.ids = trips.ids.filter(tId => tId !== action.payload.id);\n      delete trips.all[action.payload.id];\n\n      return {\n        ...state,\n        trips\n      };\n    }\n\n    case SET_EXPLORE_SUGGESTIONS:\n      return insertEntities(\n        state,\n        action.payload.data,\n        'suggestions',\n        !!'overwrite'\n      );\n\n    case SET_TRIPS:\n      return insertEntities(state, action.payload.data, 'trips');\n\n    case SET_CITIES:\n      return insertEntities(state, action.payload.data, 'cities');\n\n    case SET_USERS: {\n      const newState = insertEntities(state, action.payload.data, 'users');\n\n      // Save the user ID of the logged in user\n      if (action.payload && action.payload.data && action.payload.data.is_you) {\n        newState.activeUser = action.payload.data.id;\n      }\n\n      return newState;\n    }\n\n    case API_START:\n      if (TRIPS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          trips: {\n            ...state.trips,\n            isFetching: true\n          }\n        };\n      }\n      if (USERS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          users: {\n            ...state.users,\n            isFetching: true\n          }\n        };\n      }\n      if (CITIES_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          cities: {\n            ...state.cities,\n            isFetching: true\n          }\n        };\n      }\n      return state;\n\n    case API_END:\n      if (TRIPS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          trips: {\n            ...state.trips,\n            isFetching: false,\n            hasFetched: true\n          }\n        };\n      }\n      if (USERS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          users: {\n            ...state.users,\n            isFetching: false,\n            hasFetched: true\n          }\n        };\n      }\n      if (CITIES_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          cities: {\n            ...state.cities,\n            isFetching: false,\n            hasFetched: true\n          }\n        };\n      }\n      return state;\n\n    default:\n      return state;\n  }\n}\n","import axios from 'axios';\nimport { API } from '../actions/types';\nimport { accessDenied, apiError, apiStart, apiEnd } from '../actions/api';\n\nconst apiMiddleware = ({ dispatch }) => next => action => {\n  if (!action) {\n    return;\n  }\n  next(action);\n\n  if (action.type !== API) return;\n\n  const {\n    url,\n    method,\n    data,\n    accessToken,\n    onSuccess,\n    onFailure,\n    label,\n    headers,\n    nextAction\n  } = action.payload;\n  const dataOrParams = ['GET', 'DELETE'].includes(method) ? 'params' : 'data';\n\n  // axios default configs\n  axios.defaults.baseURL = process.env.REACT_APP_BASE_URL || '';\n  axios.defaults.headers.common['Content-Type'] = 'application/json';\n  axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n\n  if (label) {\n    dispatch(apiStart(label));\n  }\n\n  axios\n    .request({\n      url,\n      method,\n      headers,\n      withCredentials: true,\n      [dataOrParams]: data\n    })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n      dispatch(nextAction(data));\n    })\n    .catch(error => {\n      dispatch(apiError(error));\n      dispatch(onFailure(error));\n\n      // TODO: Handle 404s\n\n      if (error.response && error.response.status === 401) {\n        dispatch(accessDenied(window.location.pathname));\n        // window.location = '/login';\n      }\n    })\n    .finally(() => {\n      if (label) {\n        dispatch(apiEnd(label));\n      }\n    });\n};\n\nexport default apiMiddleware;\n","import { API_START, API_END, ACCESS_DENIED, API_ERROR } from '../actions/types';\n\nexport const apiStart = label => ({\n  type: API_START,\n  payload: label\n});\n\nexport const apiEnd = label => ({\n  type: API_END,\n  payload: label\n});\n\nexport const accessDenied = url => ({\n  type: ACCESS_DENIED,\n  payload: {\n    url\n  }\n});\n\nexport const apiError = error => ({\n  type: API_ERROR,\n  error\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport thunkMiddleware from 'redux-thunk';\nimport apiMiddleware from '../middleware/api';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(apiMiddleware, thunkMiddleware))\n);\nwindow.store = store;\n\nexport default store;\n","import { SERVER_ERR, NOT_FOUND } from '../errorMessages';\n\nexport function reduceError(state, action) {\n  const err = action.error && action.error.response;\n  if (!err || err.status >= 500 || !err.status) {\n    return {\n      ...state,\n      error: {\n        status: 500,\n        message: SERVER_ERR\n      }\n    };\n  }\n\n  if (err.status === 404) {\n    return {\n      ...state,\n      error: {\n        status: 404,\n        message: NOT_FOUND\n      }\n    };\n  }\n\n  return {\n    ...state,\n    error: {\n      status: err.status,\n      message: (err.data && err.data.error) || SERVER_ERR\n    }\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport 'icono/dist/icono.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}