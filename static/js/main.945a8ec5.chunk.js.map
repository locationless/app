{"version":3,"sources":["actions/types.js","config.js","actions/index.js","components/NewTrip.react.js","components/FriendChip.react.js","components/TripCard.react.js","components/Spinner.react.js","pages/TripDashboard.react.js","components/TripPanel.react.js","pages/TripDetail.react.js","components/FriendStatusButton.react.js","components/FriendSearch.react.js","pages/FriendsList.react.js","components/LocationMap.react.js","pages/UserProfile.react.js","components/PrivateRoute.react.js","components/Login.react.js","components/Header.react.js","App.js","serviceWorker.js","reducers/util.js","reducers/index.js","middleware/api.js","actions/api.js","store/index.js","index.js"],"names":["FETCH_TRIPS","FETCH_TRIP","SET_TRIPS","CREATE_TRIP","UPDATE_TRIP","DELETE_TRIP","REMOVE_TRIP","FETCH_CITIES","SET_CITIES","FETCH_FRIENDS","CREATE_FRIEND_REQ","ACCEPT_FRIEND_REQ","FETCH_USER","SET_USERS","API","apiUrl","fetchFriends","apiAction","url","concat","onSuccess","setUsers","onFailure","console","log","label","acceptFriendRequest","data","id","method","Object","objectSpread","is_friend","is_pending_friend","nextAction","fetchTrips","requestFriendship","have_requested_friend","type","payload","setCities","setTrips","_ref","_ref$url","_ref$method","_ref$data","_ref$accessToken","accessToken","_ref$onSuccess","_ref$onFailure","_ref$nextAction","_ref$label","_ref$headersOverride","headersOverride","convertToSelectOpts","i","map","react_default","a","createElement","index_es","code","country_code","svg","name","value","MenuList","props","rows","children","dist_es","style","width","flexGrow","height","rowHeight","rowCount","length","rowRenderer","key","index","isScrolling","isVisible","NewTrip","_ref2","cities","onCreateTrip","_useState","useState","_useState2","slicedToArray","city","setCity","_useState3","Date","now","addDays","_useState4","dates","setDates","citiesList","keys","all","cId","sort","b","population","className","react_select_esm","styles","container","components","_MenuList","assign","window","innerWidth","placeholder","isSearchAble","isLoading","isFetching","onChange","options","build_default","mode","onClick","e","preventDefault","parseInt","split","start_date","format","end_date","disabled","FriendChip","first_name","last_name","username","photo_url","photoOnly","photoSrc","tooltipText","alt","src","Link","to","MONTHS","DateRange","getDate","getMonth","fontSize","textAlign","margin","marginTop","differenceInDays","ExtraFriends","_ref3","allFriends","numDisplayed","withRouter","matches","onUpdate","history","onDelete","editMode","setEditMode","promptDel","setPromptDel","_useState5","_useState6","react","TripCard_react_DateRange","slice","m","FriendChip_react","TripCard_react_ExtraFriends","Spinner","TripsList","trips","updateTrip","deleteTrip","Spinner_react","trip","TripCard_react","connect","users","fetchCities","createTrip","removeTrip","useEffect","hasFetched","populatedTrips","ids","tId","match","_match$split","_match$split2","uId","start","end","NewTrip_react","isLoadingCities","OverlappingFriends","TripPanel_react_OverlapGraph","from","OverlapGraph","TripPanel_react_OverlapBar","OverlapBar","_ref4","totalLength","daysFromStart","daysOverlap","getOverlappingDaysInRanges","Math","floor","max","TripPanel","isActive","TripPanel_react_OverlappingFriends","MainPanel","TripPanel_react","fetchTrip","tripId","params","TripDetail_react_MainPanel","FriendshipStatus","user","onRequest","onAccept","is_you","onRequestFriend","onAcceptFriend","results","setResults","phrase","setPhrase","source","axios","CancelToken","get","cancelToken","token","then","catch","err","message","cancel","target","r","friendObj","FriendStatusButton_react","activeUser","friendList","filter","accepted","f","hasFriends","pending","hasPendingFriends","FriendSearch_react","FriendsList_react_MainPanel","locationIcon","divIcon","html","iconSize","iconAnchor","popupAnchor","LocationMap","userId","locations","setLocations","res","status","fLocations","Map","center","zoom","TileLayer","attribution","Polyline","positions","latitude","longitude","color","Marker","position","icon","Popup","toUpperCase","LocationMap_react","fetchUser","UserProfile_react_MainPanel","withCookies","Component","component","rest","objectWithoutProperties","Route","render","cookies","Redirect","pathname","Login","state","errMsg","handleResponse","stringify","withCredentials","_this","onLogin","push","response","errors","setState","react_telegram_login_build_default","dataOnauth","this","botName","onLogout","paddingRight","App","remove","post","location","PrivateRoute_react","exact","path","TripDashboard","TripDetail","FriendsList","UserProfile","msg","href","padding","_this2","error","renderError","BrowserRouter","Header_react","bind","Login_react","renderPrivateRoutes","Boolean","hostname","SERVER_ERR_MESSAGE","NOT_FOUND_ERR_MESSAGE","schema","Entity","idAttribute","v","schemas","processStrategy","parent","initialState","ENTITIES","insertEntities","entity","Array","isArray","normData","normalize","newState","forEach","indexOf","toConsumableArray","Set","entities","existingIds","result","TRIPS_LABELS","CITIES_LABELS","USERS_LABELS","apiMiddleware","dispatch","next","action","_action$payload","headers","dataOrParams","includes","defaults","baseURL","process","REACT_APP_BASE_URL","common","apiStart","request","defineProperty","apiError","finally","apiEnd","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","arguments","undefined","reduceError","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.945a8ec5.chunk.js","sourcesContent":["export const FETCH_TRIPS = 'FETCH_TRIPS';\nexport const FETCH_TRIP = 'FETCH_TRIP';\nexport const SET_TRIPS = 'SET_TRIPS';\nexport const CREATE_TRIP = 'CREATE_TRIP';\nexport const UPDATE_TRIP = 'UPDATE_TRIP';\nexport const DELETE_TRIP = 'DELETE_TRIP';\nexport const REMOVE_TRIP = 'REMOVE_TRIP';\n\nexport const FETCH_CITIES = 'FETCH_CITIES';\nexport const SET_CITIES = 'SET_CITIES';\n\nexport const FETCH_FRIENDS = 'FETCH_FRIENDS';\nexport const SET_FRIENDS = 'SET_FRIENDS';\nexport const CREATE_FRIEND_REQ = 'CREATE_FRIEND_REQ';\nexport const ACCEPT_FRIEND_REQ = 'ACCEPT_FRIEND_REQ';\n\nexport const FETCH_USER = 'FETCH_USER'\nexport const SET_USERS = 'SET_USERS';\n\nexport const API = 'API';\nexport const API_START = 'API_START';\nexport const API_END = 'API_END';\nexport const ACCESS_DENIED = 'ACCESS_DENIED';\nexport const API_ERROR = 'API_ERROR';\n\nexport const ENTITY_CITIES = 'ENTITY::CITIES';\nexport const ENTITY_TRIPS = 'ENTITY::TRIPS';\n","\n//\n// Development\n//\n// export const apiUrl = '';\n// export const botName = 'LocationlessDevBot';\n\n//\n// Production\n//\nexport const apiUrl = 'http://api.locationless.club';\nexport const botName = 'LocationlessBot';\n","import {\n  API,\n\n  FETCH_TRIPS,\n  FETCH_TRIP,\n  SET_TRIPS,\n  CREATE_TRIP,\n  UPDATE_TRIP,\n  DELETE_TRIP,\n  REMOVE_TRIP,\n\n  FETCH_FRIENDS,\n  CREATE_FRIEND_REQ,\n  ACCEPT_FRIEND_REQ,\n\n  FETCH_USER,\n  SET_USERS,\n\n  FETCH_CITIES,\n  SET_CITIES,\n} from './types';\n\nimport { apiUrl } from '../config';\n\nexport function fetchFriends() {\n  return apiAction({\n    url: `${apiUrl}/u/friends/`,\n    onSuccess: setUsers,\n    onFailure: () => console.log('Error occured loading friends'),\n    label: FETCH_FRIENDS,\n  });\n}\n\nexport function acceptFriendRequest(data) {\n  return apiAction({\n    url: `${apiUrl}/u/${data.id}/friends/`,\n    method: 'PUT',\n    // HACK: Need the API to return the updated user object\n    onSuccess: () => setUsers({\n      data: {\n        ...data,\n        is_friend: true,\n        is_pending_friend: false\n      }\n    }),\n    nextAction: fetchTrips,\n    onFailure: () => console.log('Error occured accepting friendship request'),\n    data: data,\n    label: ACCEPT_FRIEND_REQ,\n  });\n}\n\nexport function requestFriendship(data) {\n  return apiAction({\n    url: `${apiUrl}/u/${data.id}/friends/`,\n    method: 'POST',\n    // HACK: Need the API to return the updated user object\n    onSuccess: () => setUsers({\n      data: {\n        ...data,\n        have_requested_friend: true\n      }\n    }),\n    onFailure: () => console.log('Error occured requesting friendship'),\n    data: data,\n    label: CREATE_FRIEND_REQ,\n  });\n}\n\nexport function fetchUser(id) {\n  return apiAction({\n    url: `${apiUrl}/u/${id}/`,\n    onSuccess: setUsers,\n    onFailure: () => console.log('Error occured loading user', id),\n    label: FETCH_USER,\n  });\n}\n\nexport function setUsers(data) {\n  return {\n    type: SET_USERS,\n    payload: data,\n  };\n}\n\nexport function fetchCities() {\n  return apiAction({\n    url: `${apiUrl}/cities/`,\n    onSuccess: setCities,\n    onFailure: () => console.log('Error occured loading cities'),\n    label: FETCH_CITIES,\n  });\n}\n\nfunction setCities(data) {\n  return {\n    type: SET_CITIES,\n    payload: data,\n  };\n}\n\nexport function fetchTrip(id) {\n  return apiAction({\n    url: `${apiUrl}/trips/${id}`,\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured loading trips'),\n    label: FETCH_TRIP,\n  });\n}\n\nexport function fetchTrips() {\n  return apiAction({\n    url: `${apiUrl}/trips/`,\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured loading trips'),\n    label: FETCH_TRIPS,\n  });\n}\n\nfunction setTrips(data) {\n  return {\n    type: SET_TRIPS,\n    payload: data,\n  };\n}\n\nfunction removeTrip(data) {\n  return {\n    type: REMOVE_TRIP,\n    payload: data,\n  };\n}\n\nexport function createTrip(data) {\n  return apiAction({\n    url: `${apiUrl}/trips/`,\n    method: 'POST',\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured creating trip'),\n    data: data,\n    label: CREATE_TRIP,\n  });\n}\n\nexport function updateTrip(data) {\n  return apiAction({\n    url: `${apiUrl}/trips/${data.id}`,\n    method: 'PUT',\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured updating trip'),\n    data: data,\n    label: UPDATE_TRIP,\n  });\n}\n\nexport function deleteTrip(data) {\n  return apiAction({\n    url: `${apiUrl}/trips/${data.id}`,\n    method: 'DELETE',\n    onFailure: () => console.log('Error occured deleting trip'),\n    onSuccess: () => removeTrip(data),\n    label: DELETE_TRIP,\n  });\n}\n\nfunction apiAction({\n  url = '',\n  method = 'GET',\n  data = null,\n  accessToken = null,\n  onSuccess = () => {},\n  onFailure = () => {},\n  nextAction = () => {},\n  label = '',\n  headersOverride = null\n}) {\n  return {\n    type: API,\n    payload: {\n      url,\n      method,\n      data,\n      accessToken,\n      onSuccess,\n      onFailure,\n      label,\n      headersOverride,\n      nextAction\n    }\n  };\n}\n","import React, { useState } from 'react';\nimport { List } from 'react-virtualized';\nimport ReactCountryFlag from 'react-country-flag';\nimport format from 'date-fns/format';\nimport addDays from 'date-fns/add_days'\n\nimport Select from 'react-select';\nimport Flatpickr from 'react-flatpickr'\n\nimport 'flatpickr/dist/themes/light.css'\n\nconst convertToSelectOpts = i => i.map(i => ({\n  label: <div><ReactCountryFlag code={i.country_code} svg /> {i.name}</div>,\n  value: `${i.name}:::${i.id}`\n}));\n\n//\n// Virtualized Select Component\n//\nconst MenuList = props => {\n  const rows = props.children;\n  const rowRenderer = ({ key, index, isScrolling, isVisible, style }) => (\n    <div key={key} style={style}>{rows[index]}</div>\n  );\n\n  return (\n    <List\n      style={{ width: '100%', flexGrow: true }}\n      width={props.width}\n      height={300}\n      rowHeight={35}\n      rowCount={rows.length || 0}\n      rowRenderer={rowRenderer}\n    />\n  );\n}\n\nfunction NewTrip ({ cities, onCreateTrip }) {\n  const [city, setCity] = useState(null);\n  const [dates, setDates] = useState([Date.now(), addDays(Date.now(), 7)]);\n\n  //\n  // Package up the state as a trip object and pass it back up\n  //\n  const createTrip = (e) => {\n    e.preventDefault();\n    onCreateTrip({\n      city: parseInt(city.value.split(':::')[1], 10),\n      start_date: format(dates[0], 'YYYY-MM-DD'),\n      end_date: format(dates[1], 'YYYY-MM-DD'),\n    });\n    setCity(null);\n  };\n\n  const citiesList = Object.keys(cities.all)\n    .map(cId => cities.all[cId]);\n\n  // Order cities by population for now\n  citiesList.sort((a, b) => b.population - a.population);\n\n  return <form className='uk-tile uk-padding-small uk-flex uk-flex-around uk-flex-middle'>\n    <Select\n      styles={{\n        container: () => ({\n          width: 250\n        })\n      }}\n      components={{\n        MenuList: (props)=> <MenuList {...props} width={window.innerWidth} />\n      }}\n      placeholder='New Trip Location'\n      className='-select'\n      isSearchAble\n      isLoading={cities.isFetching}\n      value={city}\n      onChange={setCity}\n      options={convertToSelectOpts(citiesList)}\n    />\n      <Flatpickr\n        className='uk-input uk-width-1-3'\n        options={{\n          mode: 'range'\n        }}\n        value={dates}\n        onChange={setDates}\n      />\n    <button\n      className='uk-button uk-button-secondary'\n      onClick={createTrip}\n      disabled={city === null}\n    >\n      <span className='icono-plus'/>\n    </button>\n  </form>;\n}\n\nexport default NewTrip;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FriendChip = ({ id, first_name, last_name, username, photo_url, photoOnly }) => {\n  const photoSrc = photo_url || '/blank-profile-picture.png';\n  const tooltipText = username || `${first_name} ${last_name}`;\n\n  if (photoOnly) {\n    return <div className='uk-border-circle friend-chip'>\n      <img className='uk-border-circle avatar-preview' alt='avatar' src={photoSrc} />\n    </div>;\n  }\n\n  return <Link className='uk-border-circle friend-chip' to={`/users/${id}`}>\n    <img className='uk-border-circle avatar-preview' alt='avatar' src={photoSrc} />\n    <div className='uk-badge tooltip'>{tooltipText}</div>\n  </Link>;\n};\n\nexport default FriendChip;\n","import React, { Fragment, useState } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport ReactCountryFlag from 'react-country-flag';\nimport Flatpickr from 'react-flatpickr';\n\nimport getMonth from 'date-fns/get_month'\nimport getDate from 'date-fns/get_date'\nimport differenceInDays from 'date-fns/difference_in_days'\nimport format from 'date-fns/format';\n\nimport FriendChip from './FriendChip.react';\n\nconst MONTHS = [\n  'JAN',\n  'FEB',\n  'MAR',\n  'APR',\n  'MAY',\n  'JUN',\n  'JUL',\n  'AUG',\n  'SEP',\n  'OCT',\n  'NOV',\n  'DEC'\n];\n\nconst DateRange = ({ start_date, end_date }) =>\n    <div className='uk-flex date-range'>\n      <div>\n        <b>{getDate(start_date)} <br/> {MONTHS[getMonth(start_date)]}</b>\n      </div>\n      <div>\n        <b>{getDate(end_date)} <br/> {MONTHS[getMonth(end_date)]}</b>\n      </div>\n      <p\n        style={{\n          width: 92,\n          height: 42,\n          fontSize: 16,\n          textAlign: 'center',\n          margin: 2,\n          marginTop: 10\n       }}\n      >\n        {differenceInDays(end_date, start_date)} Day Trip\n      </p>\n  </div>;\n\nfunction TripCard({ id, city, start_date, end_date, matches, history, onUpdate, onDelete }) {\n\n  const [editMode, setEditMode] = useState(false);\n  const [promptDel, setPromptDel] = useState(false);\n  const [dates, setDates] = useState([new Date(start_date), new Date(end_date)]);\n\n  const updateTrip = () => {\n    setEditMode(false);\n    return onUpdate({\n      id,\n      city: city.id,\n      start_date: format(dates[0], 'YYYY-MM-DD'),\n      end_date: format(dates[1], 'YYYY-MM-DD'),\n    });\n  };\n\n  const deleteTrip = () => onDelete({ id });\n\n  if (promptDel) {\n    return <Fragment>\n      <div className='uk-tile uk-padding-small uk-flex uk-flex-between uk-background-muted'>\n        <div>\n          <h6>\n             <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n          </h6>\n        </div>\n          <p>Definitely delete this trip?</p>\n          <span className='uk-flex'>\n            <hr className='uk-divider-vertical uk-margin-right uk-margin-left' />\n            <span className='uk-flex uk-flex-column'>\n              <span className='icon-sm'>\n                <span className='icono-check' onClick={deleteTrip} />\n              </span>\n              <span className='icon-sm'>\n                <span className='icono-cross' onClick={(e) => setPromptDel(false)} />\n              </span>\n            </span>\n          </span>\n      </div>\n      <hr />\n    </Fragment>;\n  }\n\n  if (editMode) {\n    return <Fragment>\n      <div className='uk-tile uk-padding-small uk-flex uk-flex-between uk-background-muted'>\n        <div>\n          <h6>\n             <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n          </h6>\n        </div>\n          <Flatpickr\n            className='uk-input uk-width-1-3'\n            options={{ mode: 'range' }}\n            value={dates}\n            onChange={setDates}\n          />\n          <span className='uk-flex'>\n            <hr className='uk-divider-vertical uk-margin-right uk-margin-left' />\n            <span className='uk-flex uk-flex-column'>\n              <span className='icon-sm'>\n                <span className='icono-check' onClick={updateTrip} />\n              </span>\n              <span className='icon-sm'>\n                <span className='icono-cross' onClick={(e) => setEditMode(!editMode)} />\n              </span>\n            </span>\n          </span>\n      </div>\n      <hr />\n    </Fragment>;\n  }\n\n  return <Fragment>\n    <Link\n      className='uk-tile uk-padding-small uk-flex uk-flex-between uk-link-muted'\n      to={`/trips/${id}`}\n    >\n      <div>\n        <h6>\n           <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n        </h6>\n        <DateRange start_date={start_date} end_date={end_date} />\n      </div>\n      <span className='uk-flex'>\n        <span className='uk-flex'>\n          {matches.slice(0, 3).map(m => <FriendChip key={m.id} {...m} />)}\n          <ExtraFriends allFriends={matches} numDisplayed={3} />\n        </span>\n        <span className='uk-flex'>\n            <hr className='uk-divider-vertical uk-margin-right uk-margin-left' />\n          <span className='uk-flex uk-flex-column' >\n            <span className='icon-sm'>\n              <span className='icono-gear' onClick={(e) => {e.preventDefault();setEditMode(!editMode);}} />\n            </span>\n            <span className='icon-sm'>\n              <span className='icono-trash' onClick={(e) => {e.preventDefault();setPromptDel(true);}} />\n            </span>\n          </span>\n        </span>\n      </span>\n    </Link>\n    <hr />\n  </Fragment>;\n}\n\nconst ExtraFriends = ({ allFriends, numDisplayed }) => {\n  if (allFriends.length > numDisplayed) {\n    return <div className='uk-border-circle avatar-preview uk-background-muted'>\n      <p className='uk-border-circle uk-dark'>\n        +{allFriends.length - numDisplayed}\n      </p>\n    </div>;\n  }\n  return null;\n};\n\nexport default withRouter(TripCard);\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => <div className='spinner-container'>\n    <div className='lds-ripple'><div></div><div></div></div>\n  </div>;\n\nexport default Spinner;\n","//\n// Page with a list of trips for the user\n//\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrips, fetchCities, createTrip, fetchFriends, updateTrip, deleteTrip } from '../actions';\n\nimport differenceInDays from 'date-fns/difference_in_days';\n\nimport NewTrip from '../components/NewTrip.react';\nimport TripCard from '../components/TripCard.react';\nimport Spinner from '../components/Spinner.react';\n\nfunction TripDashboard(props) {\n  // Get data out of redux\n  const { cities, trips, users } = props;\n\n  // Load API data for page\n  useEffect(\n    () => {\n      if (!cities.isFetching && !cities.hasFetched) {\n        props.fetchCities();\n      }\n      if (!trips.isFetching && !trips.hasFetched) {\n        props.fetchTrips();\n      }\n    },\n    []\n  );\n\n  const populatedTrips = trips.ids.map(tId => {\n    const trip = trips.all[tId];\n    return {\n      ...trip,\n      city: cities.all[trip.city],\n      matches: trip.matches.map(match => {\n        const [uId, start, end] = match.split('::');\n        return {\n          ...users.all[uId],\n          start_date: start,\n          end_date: end\n        };\n      })\n    };\n  });\n\n  // Sort so the soonest trip is first in the list\n  populatedTrips.sort((a, b) => differenceInDays(a.start_date, b.start_date));\n\n  return (\n    <Fragment>\n\n      <h4>ADD NEW TRIP</h4>\n      <NewTrip\n        cities={cities}\n        isLoadingCities={cities.isFetching}\n        onCreateTrip={props.createTrip}\n      />\n\n      <TripsList\n        trips={populatedTrips}\n        updateTrip={props.updateTrip}\n        deleteTrip={props.deleteTrip}\n      />\n\n    </Fragment>\n  );\n}\n\nfunction TripsList({ trips, updateTrip, deleteTrip }) {\n  if (trips.isFetching) {\n    return <Spinner />;\n  }\n\n  if (trips.length === 0) {\n    return <p>\n      You have no upcoming trips. Hope you enjoy your rest.\n    </p>;\n  }\n\n  // TODO: Pagination / see historic etc\n\n  return <Fragment>\n    <h4>UPCOMING TRIPS</h4>\n    {trips.map(trip => \n      <TripCard\n        key={trip.id}\n        onUpdate={updateTrip}\n        onDelete={deleteTrip}\n        {...trip}\n      />\n    )}\n  </Fragment>;\n}\n\nconst mapStateToProps = ({ cities, trips, users }) => ({\n  cities,\n  trips,\n  users,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchTrips,\n    fetchCities,\n    fetchFriends,\n    createTrip,\n    updateTrip,\n    deleteTrip\n  }\n)(TripDashboard);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactCountryFlag from 'react-country-flag';\n\nimport FriendChip from './FriendChip.react';\n\nimport differenceInDays from 'date-fns/difference_in_days';\nimport getOverlappingDaysInRanges from 'date-fns/get_overlapping_days_in_ranges';\nimport format from 'date-fns/format';\n\nconst TripPanel = ({ city, start_date, end_date, matches, isActive }) => (\n  <dl className='uk-description-list'>\n    <dt>\n       Location\n    </dt>\n    <dd className='uk-padding-small'>\n      <span className='uk-padding-small'>{city.name}</span>\n      <ReactCountryFlag code={city.country_code} svg />\n    </dd>\n    <dt>Duration</dt>\n    <dd className='uk-padding-small'>\n      <span className='uk-padding'>\n        You will be in {city.name} for {differenceInDays(end_date, start_date)} Days\n      </span>\n      <OverlapBar start_date={start_date} end_date={end_date} to={end_date} from={start_date} />\n    </dd>\n    <OverlappingFriends matches={matches} start_date={start_date} end_date={end_date} />\n  </dl>\n);\n\nconst OverlappingFriends = ({ matches, start_date, end_date }) => {\n\n  if (matches.length === 0) {\n    return <p>None of your friends trips are currently overlapping with this one.\n      Maybe you need to add some people you know to improve your chances?\n    </p>;\n  }\n\n  return <Fragment>\n    <dt>\n      Friends with overlapping dates\n    </dt>\n    <dd>\n      <span className='uk-padding'>\n        {matches.map(m => <OverlapGraph\n          key={m.id}\n          {...m}\n          from={start_date}\n          to={end_date}\n        />)}\n      </span>\n    </dd>\n  </Fragment>\n};\n\nconst OverlapGraph = ({ id, first_name, last_name, username, photo_url, start_date, end_date, from, to }) => (\n  <div className='overlap-graph'>\n    <div className='uk-flex uk-flex-middle'>\n      <FriendChip\n        id={id}\n        username={username}\n        first_name={first_name}\n        last_name={last_name}\n        photo_url={photo_url}\n        photoOnly\n      />\n      <Link to={`/users/${id}`} className='chip-label uk-link-muted'>@{username}</Link>\n    </div>\n    <OverlapBar start_date={start_date} end_date={end_date} to={to} from={from} />\n  </div>\n);\n\nconst OverlapBar = ({ id, start_date, end_date, from, to }) => {\n  const totalLength = differenceInDays(to, from);\n  const daysFromStart = differenceInDays(start_date, from);\n  const daysOverlap = getOverlappingDaysInRanges(from, to, start_date, end_date);\n\n  const STYLES = {\n    width: `${Math.floor((daysOverlap * 80) / totalLength)}%`,\n  };\n  const START_STYLES = {\n    marginLeft: `${Math.max(Math.floor((daysFromStart * 80) / totalLength) - 5, 0)}%`,\n  };\n\n  // TODO: This look gross ATM\n  return null;\n  return <div className='uk-flex uk-flex-around uk-padding-small'>\n    <span className='date-icon' style={START_STYLES}>\n      {format(start_date, 'DD MMM')}\n    </span>\n    <li className='uk-list overlap-bar' style={STYLES}>{daysOverlap} Days</li>\n    <span className='date-icon'>\n      {format(end_date, 'DD MMM')}\n    </span>\n  </div>;\n};\n\nexport default TripPanel;\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrip } from '../actions';\n\nimport TripPanel from '../components/TripPanel.react';\nimport Spinner from '../components/Spinner.react';\n\nconst TripDetail = ({ match, trips, cities, users, fetchTrip }) => {\n  const tripId = parseInt(match.params.id, 10);\n\n  // Clone the trip\n  let trip = trips.all[tripId];\n  if (trip) {\n    trip = {\n      ...trip,\n      city: cities[trip.city],\n      matches: trip.matches.map(match => {\n        const [uId, start, end] = match.split('::');\n        return {\n          ...users.all[uId],\n          start_date: start,\n          end_date: end\n        };\n      })\n    };\n  }\n\n  useEffect(\n    () => {\n      // Get it from the API if:\n      //   - it is not currently fetching trips\n      //   - we don't have the trip in the store already\n      if (!trips.isFetching && !trip) {\n        fetchTrip(tripId);\n      }\n    },\n    []\n  );\n\n  return <Fragment>\n    <h4>TRIP SUMMARY</h4>\n    <MainPanel isFetching={trips.isFetching} trip={trip} />\n  </Fragment>\n};\n\nconst MainPanel = ({ isFetching, trip }) => {\n  if (isFetching || !trip) {\n    return <Spinner />;\n  }\n  return <TripPanel {...trip} />;\n}\n\nconst mapStateToProps = ({ trips, users, cities }) => ({\n  trips,\n  users,\n  cities: cities.all\n})\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchTrip\n  }\n)(TripDetail);\n","import React from 'react';\n\nconst FriendshipStatus = ({ user, onRequest, onAccept }) => {\n  if (user && user.is_you) {\n    return <button\n      className='uk-button icon-sm'\n      disabled\n    >\n        <span className='icono-smile'/>\n        You\n    </button>;\n  }\n  if (user && user.is_friend) {\n    return <button\n      className='uk-button icon-sm'\n      disabled\n    >\n        <span className='icono-check'/>\n        Friends\n    </button>;\n  }\n  if (user && user.is_pending_friend) {\n    return <button\n      onClick={onAccept}\n      className='uk-button icon-sm'>\n        Accept\n    </button>;\n  }\n  if (user && user.have_requested_friend) {\n    return <button\n      className='uk-button icon-sm'\n      disabled\n    >\n        <span className='icono-clock'/>\n        Waiting\n    </button>;\n  }\n\n  return <button\n    className='uk-button icon-sm'\n    onClick={onRequest}>\n      <span className='icono-plus'/>\n      Request\n  </button>;\n}\n\nexport default FriendshipStatus;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport FriendChip from './FriendChip.react';\nimport FriendStatusButton from './FriendStatusButton.react';\n\n// TODO:\n//  - integrate with search API\n//  - present results effectively\n//  - request button\nfunction FriendSearch ({ users, onRequestFriend, onAcceptFriend, fetchFriends }) {\n  const [results, setResults] = useState([]);\n  const [phrase, setPhrase] = useState('');\n\n  // Each time the user types, we send a search query.\n  //\n  // TODO: \n  // - Should this be debounced?\n  // - Encoding query strings\n  //\n  useEffect(\n    () => {\n      const CancelToken = axios.CancelToken;\n      const source = CancelToken.source();\n\n      if (phrase) {\n        axios.get(`/u/search/?q=${phrase}`, { cancelToken: source.token })\n          .then(({ data }) => setResults(data.data))\n          .catch(err => {\n\n            // All good.\n            if (err && err.message === 'unmount') {\n              return;\n            }\n\n            // TODO: Handle this!\n            console.log(err);\n          });\n      } else {\n        setResults([]);\n      }\n\n      // Cancel the request if the component is unmounted\n      return () => source.cancel('unmount');\n    },\n    [phrase]\n  );\n\n  return <div className='uk-padding-small'>\n    <input\n      className='uk-input'\n      placeholder='Search for Telegram Username / Full Name'\n      value={phrase}\n      onChange={e => setPhrase(e.target.value)}\n    />\n    <hr />\n    <dl className='uk-description-list' >\n      {results.map(r => {\n\n        // Get friend object so we can tell if we're friends with each search result\n        const friendObj = users.all[r.id];\n\n        // Don't show yourself in search results\n        if (friendObj && friendObj.is_you) {\n          return null;\n        }\n\n        return <Fragment key={r.id}>\n          <dt>{r.username}</dt>\n          <dd className='uk-padding-small uk-flex uk-flex-between'>\n            <span className='uk-flex'>\n              <FriendChip {...r} photoOnly={!friendObj || !friendObj.is_friend} />\n              <p>{r.first_name} {r.last_name}</p>\n            </span>\n            <span className='uk-flex'>\n              <hr style={{ height: 30 }} className='uk-divider-vertical uk-margin-right uk-margin-left' />\n              <FriendStatusButton\n                user={friendObj}\n                onAccept={() => onAcceptFriend(r)}\n                onRequest={() => onRequestFriend(r)}\n              />\n            </span>\n          </dd>\n        </Fragment>;\n      })}\n    </dl>\n  </div>;\n}\n\nconst mapStateToProps = ({ users }) => ({\n  users\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    \n  }\n)(FriendSearch);\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchFriends, requestFriendship, acceptFriendRequest } from '../actions';\n\nimport Spinner from '../components/Spinner.react';\nimport FriendChip from '../components/FriendChip.react';\nimport FriendSearch from '../components/FriendSearch.react';\nimport FriendStatusButton from '../components/FriendStatusButton.react';\n\nconst FriendsList = ({ users, fetchFriends, requestFriendship, acceptFriendRequest, activeUser }) => {\n  useEffect(\n    () => {\n      if (!users.isFetching) {\n        fetchFriends();\n      }\n    },\n    []\n  );\n\n  return <Fragment>\n    <MainPanel\n      isFetching={users.isFetching && users.ids.length === 0}\n      users={users}\n      activeUser={activeUser}\n      acceptFriendRequest={acceptFriendRequest}\n      requestFriendship={requestFriendship}\n    />\n  </Fragment>;\n};\n\nconst MainPanel = ({ isFetching, users, activeUser, acceptFriendRequest, requestFriendship }) => {\n  if (isFetching) {\n    return <Spinner />;\n  }\n\n  const friendList = Object.keys(users.all)\n    .filter(uId => parseInt(uId, 10) !== activeUser)\n    .map(uId => users.all[uId]);\n\n  const accepted = friendList.filter(f => f.is_friend);\n  const hasFriends = accepted.length > 0;\n  const pending = friendList.filter(f => f.is_pending_friend);\n  const hasPendingFriends = pending.length > 0;\n\n  return <Fragment>\n    {hasFriends && <h4>FRIENDS</h4>}\n    {accepted.map(f => <FriendChip key={f.id} {...f} />)}\n    {hasPendingFriends && <h4>PENDING REQUESTS</h4>}\n    {pending.map(f => <Fragment key={f.id}>\n      <FriendChip {...f} onAccept={() => acceptFriendRequest(f)} />\n      <FriendStatusButton \n        user={f}\n        onAccept={() => acceptFriendRequest(f)}\n      />\n    </Fragment>)}\n    <h4>FIND FRIENDS</h4>\n    <FriendSearch \n      users={users}\n      onRequestFriend={requestFriendship}\n      onAcceptFriend={acceptFriendRequest}\n    />\n  </Fragment>;\n}\n\nconst mapStateToProps = ({ users, activeUser }) => ({\n  users,\n  activeUser\n})\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchFriends,\n    requestFriendship,\n    acceptFriendRequest\n  }\n)(FriendsList);\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Map, Marker, Popup, TileLayer, Polyline } from 'react-leaflet'\nimport { divIcon } from 'leaflet';\n\nimport Spinner from '../components/Spinner.react';\n\n// Custom Icon for the leaftlet map.\nconst locationIcon = divIcon({\n  html: '<span class=\"icono-caretDown\"/>',\n  iconSize: [25, 25],\n  iconAnchor: [17, 24],\n  popupAnchor: [-3, -26],\n});\n \nconst LocationMap = ({ userId }) => {\n  const [locations, setLocations] = useState(null);\n\n  const fetchUserLocations = (id) => {\n    if (!id) {\n      return;\n    }\n    setLocations(null);\n    return axios(`/u/${id}/locations/`)\n      .then(res => {\n        if (res.status === 200) {\n          setLocations(res.data.data);\n        }\n      });\n  };\n\n  useEffect(\n    () => {\n      fetchUserLocations(userId);\n    },\n    [userId]\n  );\n\n  // TODO: timing calcs\n  const pLocations = []; // locations.filter();\n  const fLocations = locations; // .filter();\n  // const cLocation = null; // locations.find();\n\n  const position = [51.505, -0.09];\n\n  if (locations === null) {\n    return <Spinner />;\n  }\n\n  return <Map center={position} zoom={1} style={{ height: 300 }}>\n    <TileLayer\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n    />\n    <Polyline\n      positions={pLocations.map(({ city }) => [city.latitude, city.longitude])}\n    />\n    <Polyline\n      positions={fLocations.map(({ city }) => [city.latitude, city.longitude])}\n      color='#bf4e4e'\n    />\n    {locations.map(({ id, city, start_date, end_date }) => (\n      <Marker\n        key={id}\n        position={[city.latitude, city.longitude]}\n        icon={locationIcon}\n      >\n        <Popup>{city.name}</Popup>\n      </Marker>\n    ))}\n  </Map>\n};\n\nexport default LocationMap;\n\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  fetchUser,\n  requestFriendship,\n  acceptFriendRequest\n} from '../actions';\n\nimport Spinner from '../components/Spinner.react';\nimport FriendStatusButton from '../components/FriendStatusButton.react';\nimport LocationMap from '../components/LocationMap.react';\n\nconst UserProfile = ({ match, users, fetchUser, activeUser, requestFriendship, acceptFriendRequest }) => {\n  const userId = parseInt(match.params.id, 10);\n\n  // Clone the trip\n  let user = users.all[userId];\n\n  useEffect(\n    () => {\n      // Get it from the API if:\n      //   - it is not currently fetching users\n      //   - we don't have the user in the store already\n      if (!users.isFetching && !user) {\n        fetchUser(userId);\n      }\n    },\n    []\n  );\n\n  return <MainPanel\n    isFetching={users.isFetching}\n    user={user}\n    activeUser={activeUser}\n    onRequest={() => requestFriendship(user)}\n    onAccept={() => acceptFriendRequest(user)}\n  />;\n};\n\nconst MainPanel = ({ isFetching, user, activeUser, onRequest, onAccept }) => {\n  if (isFetching || !user) {\n    return <Spinner />;\n  }\n\n  return <div className='centered-hero'>\n    <div className='uk-flex uk-flex-left'>\n      <img\n        className='avatar-big uk-border-circle'\n        alt='avatar'\n        src={user.photo_url || '/blank-profile-picture.png'}\n      />\n\n      <div className='uk-flex uk-flex-column uk-padding'>\n        <h4>@{user.username}</h4>\n        <span>{user.first_name.toUpperCase()} {user.last_name.toUpperCase()}</span>\n      </div>\n\n      <div className='user-icons'>\n        <FriendStatusButton user={user} onRequest={onRequest} onAccept={onAccept} />\n      </div>\n    </div>\n\n    <hr />\n\n    <LocationMap userId={user.id} />\n  </div>;\n}\n\nconst mapStateToProps = ({ users, activeUser }) => ({\n  users,\n  activeUser\n})\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchUser,\n    requestFriendship,\n    acceptFriendRequest\n  }\n)(UserProfile);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { withCookies } from 'react-cookie';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      rest.cookies.get('sessionid') ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/login\"\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default withCookies(PrivateRoute);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { stringify } from 'query-string';\nimport TelegramLoginButton from 'react-telegram-login';\n\nimport { apiUrl, botName } from '../config';\n\nclass Login extends Component {\n\n  state = {\n    errMsg: null\n  };\n\n  handleResponse = (data) => {\n    return axios({\n      url: `${apiUrl}/u/auth/?${stringify(data)}`,\n      method: 'get',\n      withCredentials: true\n    })\n      .then(res => {\n        // Pass the user data back to the main app\n        this.props.onLogin(data);\n        this.props.history.push('/');\n      })\n      .catch(err => {\n        if (err.response) {\n          const errMsg = (err.response.data && err.response.data.errors && err.response.data.errors[0]) ||\n            err.response;\n\n          this.setState({ errMsg });\n        } else {\n          this.setState({ errMsg: 'Unable to connect to the API' });\n        }\n      });\n  }\n\n  render() {\n    return <section className='uk-grid-match'>\n      <div className='uk-panel uk-panel-box uk-text-center telegram-login-container'>\n        <TelegramLoginButton\n          dataOnauth={this.handleResponse}\n          botName={botName}\n        />\n      </div>\n    </section>;\n  }\n}\n\nexport default withRouter(Login);\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withCookies } from 'react-cookie';\n\n// TODO: Make mobile-specific version.\nconst Header = ({ cookies, onLogout, activeUser }) => (\n  <div className='uk-navbar-container'>\n    <nav className='uk-navbar uk-container'>\n      <div className='uk-navbar-left'>\n        <Link className='uk-navbar-item uk-logo' to='/'>\n          <img src='/logo.png' alt='logo' style={{ height: 35, paddingRight: 15 }} />\n          Locationless\n        </Link>\n      </div>\n      \n      {(cookies.get('sessionid') && activeUser) ?\n        <div className='uk-navbar-right'>\n          <ul className='uk-navbar-nav'>\n            <li className='uk-navbar-item'>\n              <Link to='/'>Dashboard</Link>\n            </li>\n            <li className='uk-navbar-item'>\n              <Link to='/friends'>Friends</Link>\n            </li>\n            <li className='uk-navbar-item'>\n              <Link to={`/users/${activeUser}`}>Profile</Link>\n            </li>\n            <li className='uk-navbar-item'>\n              <a onClick={onLogout}>Logout</a>\n            </li>\n          </ul>\n        </div> :\n        null\n      }\n    </nav>\n  </div>\n);\n\nexport default withCookies(Header);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { withCookies } from 'react-cookie';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios';\n\nimport TripDashboard from './pages/TripDashboard.react';\nimport TripDetail from './pages/TripDetail.react';\nimport FriendsList from './pages/FriendsList.react';\nimport UserProfile from './pages/UserProfile.react';\n\nimport PrivateRoute from './components/PrivateRoute.react';\nimport Login from './components/Login.react';\nimport Header from './components/Header.react';\nimport Spinner from './components/Spinner.react';\n\nimport { setUsers } from './actions';\n\nimport { apiUrl } from './config';\n\nimport './App.css';\nimport 'uikit/dist/css/uikit.css'\n\nclass App extends Component {\n  onLogout() {\n    this.props.cookies.remove('sessionid');\n    axios.post(`${apiUrl}/u/logout/`);\n    window.location = '/login';\n  }\n\n  onLogin(data) {\n    this.props.setUsers({\n      data: {\n        ...data,\n        is_you: true\n      }\n    });\n  }\n\n  componentDidMount() {\n    const { activeUser } = this.props;\n\n    if (!activeUser && window.location.pathname !== '/login') {\n      axios.get('/u/')\n        .then(({ data }) => this.props.setUsers({ data: data.data }))\n        .catch(err => {\n          window.location = '/login';\n        });\n    }\n  }\n\n  renderPrivateRoutes() {\n    return <Fragment>\n      <PrivateRoute exact path=\"/\" component={TripDashboard} />\n      <PrivateRoute path=\"/trips/:id\" component={TripDetail} />\n      <PrivateRoute exact path=\"/friends\" component={FriendsList} />\n      <PrivateRoute path=\"/users/:id\" component={UserProfile} />\n    </Fragment>;\n  }\n\n  renderError(msg) {\n    return <main className='uk-container uk-container-small uk-container-center uk-padding'>\n      <a href='/'>\n        <img src='/logo.png' alt='logo' style={{ height: 85, padding: 15 }} />\n      </a>\n      <hr />\n      <p>{msg}</p>\n    </main>;\n  }\n\n  render() {\n    if (!this.props.activeUser && window.location.pathname !== '/login') {\n      return <Spinner />;\n    }\n\n    if (this.props.error.message) {\n      return this.renderError(this.props.error.message);\n    }\n\n    return (\n      <Router>\n        <Fragment>\n          <Header onLogout={this.onLogout.bind(this)} activeUser={this.props.activeUser} />\n          <main className='uk-container uk-container-small uk-container-center uk-padding'>\n            <Route path=\"/login\" component={() => <Login onLogin={this.onLogin.bind(this)} />} />\n\n            {this.renderPrivateRoutes()}\n          </main>\n        </Fragment>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = ({ users, activeUser, error }) => ({\n  users,\n  activeUser,\n  error\n});\n\nexport default withCookies(\n  connect(mapStateToProps, {\n    setUsers\n  })(App)\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const SERVER_ERR_MESSAGE = 'Looks like we\\'re a little... LOCATIONLESS ourselves. Sorry about that.';\nconst NOT_FOUND_ERR_MESSAGE = 'Nothing to see here.';\n\nexport function reduceError(state, action) {\n  const err = action.error && action.error.response;\n  if (!err || (err.status >= 500) || !err.status) {\n    return {\n      ...state,\n      error: {\n        status: 500,\n        message: SERVER_ERR_MESSAGE,\n      }\n    };\n  }\n\n  if (err.status === 404) {\n    return {\n      ...state,\n      error: {\n        status: 404,\n        message: NOT_FOUND_ERR_MESSAGE,\n      }\n    };\n  }\n\n  return {\n    ...state,\n    error: {\n      status: err.status,\n      message: (err.data && err.data.error) || SERVER_ERR_MESSAGE,\n    }\n  };\n}\n\n","import {\n  API_START,\n  API_END,\n  API_ERROR,\n\n  SET_USERS,\n  FETCH_USER,\n\n  SET_TRIPS,\n  FETCH_TRIPS,\n  REMOVE_TRIP,\n\n  FETCH_FRIENDS,\n\n  SET_CITIES,\n  FETCH_CITIES,\n} from '../actions/types';\n\nimport {\n  reduceError\n} from './util';\n\nimport { normalize, schema } from 'normalizr';\n\nconst user = new schema.Entity('users');\nconst city = new schema.Entity('cities');\nconst match = new schema.Entity('matches', {\n  user\n}, {\n  idAttribute: v => `${v.user.id}::${v.start_date}::${v.end_date}`\n});\n\nconst trip = new schema.Entity('trips', {\n  user,\n  city,\n  matches: [match]\n}, {\n  processStrategy: (value, parent, key) => {\n    const matches = value.matches || [];\n    return { ...value, matches };\n  }\n});\n\nconst schemas = {\n  users: user,\n  cities: city,\n  trips: trip\n};\n\nconst initialState = {\n  activeUser: null,\n\n  error: {\n    status: null,\n    message: null,\n  },\n\n  trips: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false,\n  },\n  cities: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false,\n  },\n  users: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false,\n  }\n};\n\nconst ENTITIES = [\n  'trips',\n  'cities',\n  'users'\n];\n\nconst insertEntities = (state, data, entity) => {\n  // Make sure we have an array\n  if (!Array.isArray(data)) {\n    data = [data];\n  }\n\n  // Normalise the data\n  const normData = normalize(data, [schemas[entity]]);\n\n  const newState = { ...state };\n  Object.keys(state).forEach(e => {\n    if (!state[e] || ENTITIES.indexOf(e) === -1) {\n      return;\n    }\n\n    newState[e] = {\n      ...state[e],\n    };\n\n    // Merge in all the new objects for each entity\n    const allIds = [...new Set(Object.keys(state[e].all).concat(Object.keys(normData.entities[e] || {})))];\n    allIds.forEach(id => {\n      newState[e].all[id] = Object.assign({}, state[e].all[id], (normData.entities[e] || {})[id])\n    });\n  });\n\n  // Add all the new IDs to the primary entity\n  const existingIds = state[entity].ids;\n  newState[entity].ids = [...new Set(existingIds.concat(normData.result))];\n\n  return newState;\n};\n\nconst TRIPS_LABELS = [\n  FETCH_TRIPS\n];\nconst CITIES_LABELS = [\n  FETCH_CITIES\n];\nconst USERS_LABELS = [\n  FETCH_USER,\n  FETCH_FRIENDS\n];\n\nexport default function(state = initialState, action) {\n\n  switch (action.type) {\n    case API_ERROR:\n      return reduceError(state, action);\n\n    case REMOVE_TRIP: {\n      const trips = Object.assign({}, state.trips);\n      trips.ids = trips.ids.filter(tId => tId !== action.payload.id);\n      delete trips.all[action.payload.id];\n\n      return {\n        ...state,\n        trips\n      };\n    }\n\n    case SET_TRIPS:\n      return insertEntities(state, action.payload.data, 'trips')\n\n    case SET_CITIES:\n      return insertEntities(state, action.payload.data, 'cities')\n\n    case SET_USERS: {\n      const newState = insertEntities(state, action.payload.data, 'users');\n\n      // Save the user ID of the logged in user\n      if (action.payload && action.payload.data && action.payload.data.is_you) {\n        newState.activeUser = action.payload.data.id;\n      }\n\n      return newState;\n    }\n\n    case API_START:\n      if (TRIPS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          trips: {\n            ...state.trips,\n            isFetching: true\n          }\n        };\n      }\n      if (USERS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          users: {\n            ...state.users,\n            isFetching: true\n          }\n        };\n      }\n      if (CITIES_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          cities: {\n            ...state.cities,\n            isFetching: true\n          }\n        };\n      }\n      return state;\n\n    case API_END:\n      if (TRIPS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          trips: {\n            ...state.trips,\n            isFetching: false,\n            hasFetched: true\n          }\n        };\n      }\n      if (USERS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          users: {\n            ...state.users,\n            isFetching: false,\n            hasFetched: true\n          }\n        };\n      }\n      if (CITIES_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          cities: {\n            ...state.cities,\n            isFetching: false,\n            hasFetched: true\n          }\n        };\n      }\n      return state;\n\n    default:\n      return state;\n  }\n}\n","import axios from 'axios';\nimport { API } from '../actions/types';\nimport { accessDenied, apiError, apiStart, apiEnd } from '../actions/api';\n\nconst apiMiddleware = ({ dispatch }) => next => action => {\n  if (!action) {\n    return;\n  }\n  next(action);\n\n  if (action.type !== API) return;\n\n  const {\n    url,\n    method,\n    data,\n    accessToken,\n    onSuccess,\n    onFailure,\n    label,\n    headers,\n    nextAction\n  } = action.payload;\n  const dataOrParams = [\"GET\", \"DELETE\"].includes(method) ? \"params\" : \"data\";\n\n  // axios default configs\n  axios.defaults.baseURL = process.env.REACT_APP_BASE_URL || \"\";\n  axios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\n\n  if (label) {\n    dispatch(apiStart(label));\n  }\n\n  axios\n    .request({\n      url,\n      method,\n      headers,\n      [dataOrParams]: data\n    })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n      dispatch(nextAction(data));\n    })\n    .catch(error => {\n      dispatch(apiError(error));\n      dispatch(onFailure(error));\n\n      // TODO: Handle 404s\n\n      if (error.response && error.response.status === 401) {\n        dispatch(accessDenied(window.location.pathname));\n        window.location = '/login';\n      }\n    })\n    .finally(() => {\n      if (label) {\n        dispatch(apiEnd(label));\n      }\n    });\n};\n\nexport default apiMiddleware;\n","import { API_START, API_END, ACCESS_DENIED, API_ERROR } from '../actions/types';\n\nexport const apiStart = label => ({\n  type: API_START,\n  payload: label\n});\n\nexport const apiEnd = label => ({\n  type: API_END,\n  payload: label\n});\n\nexport const accessDenied = url => ({\n  type: ACCESS_DENIED,\n  payload: {\n    url\n  }\n});\n\nexport const apiError = error => ({\n  type: API_ERROR,\n  error\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport thunkMiddleware from 'redux-thunk'\nimport apiMiddleware from '../middleware/api';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(\n      apiMiddleware,\n      thunkMiddleware,\n    )\n  )\n);\nwindow.store = store;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport 'icono/dist/icono.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}