{"version":3,"sources":["actions/types.js","config.js","actions/index.js","helpers/dateUtils.js","components/NewTrip.react.js","components/FriendChip.react.js","components/DateRange.react.js","components/TripCard.react.js","components/Spinner.react.js","pages/TripDashboard.react.js","components/TripPanel.react.js","pages/TripDetail.react.js","components/FriendStatusButton.react.js","components/FriendSearch.react.js","pages/FriendsList.react.js","components/LocationMap.react.js","components/TelegramLink.react.js","pages/UserProfile.react.js","pages/Explore.react.js","components/PrivateRoute.react.js","components/Login.react.js","components/Header.react.js","errorMessages.js","App.js","serviceWorker.js","reducers/index.js","middleware/api.js","actions/api.js","store/index.js","reducers/util.js","index.js"],"names":["FETCH_TRIPS","FETCH_TRIP","SET_TRIPS","CREATE_TRIP","UPDATE_TRIP","DELETE_TRIP","REMOVE_TRIP","FETCH_CITIES","SET_CITIES","FETCH_FRIENDS","CREATE_FRIEND_REQ","ACCEPT_FRIEND_REQ","FETCH_USER","SET_USERS","LOGOUT","API","FETCH_EXPLORE_SUGGESTIONS","SET_EXPLORE_SUGGESTIONS","apiUrl","process","setSuggestions","data","type","payload","fetchFriends","apiAction","url","concat","onSuccess","setUsers","onFailure","console","log","label","acceptFriendRequest","id","method","Object","objectSpread","is_friend","is_pending_friend","nextAction","fetchTrips","requestFriendship","have_requested_friend","fetchCities","setCities","qs","end_date_after","format","setTrips","_ref","_ref$url","_ref$method","_ref$data","_ref$accessToken","accessToken","_ref$onSuccess","_ref$onFailure","_ref$nextAction","_ref$label","_ref$headersOverride","headersOverride","determineNextFreeDate","trips","n","nextFreeDate","reduce","lastChecked","nextTrip","isBefore","addDays","start_date","Date","end_date","now","isFutureTrip","t","differenceInDays","isPastTrip","MenuList","props","rows","children","react_default","a","createElement","dist_es","style","width","flexGrow","height","rowHeight","rowCount","length","rowRenderer","key","index","isScrolling","isVisible","convertToSelectOpts","i","map","index_es","code","country_code","svg","name","value","NewTrip","_ref2","cities","disabledDates","onCreateTrip","_useState","useState","_useState2","slicedToArray","dates","setDates","_useState3","_useState4","city","setCity","useEffect","join","citiesList","keys","all","cId","sort","b","population","className","react_select_esm","styles","container","menu","provided","top","components","_MenuList","assign","window","innerWidth","placeholder","isSearchAble","isLoading","isFetching","onChange","options","build_default","mode","disable","dateFormat","onClick","e","preventDefault","parseInt","split","disabled","FriendChip","first_name","last_name","username","photo_url","photoOnly","photoSrc","tooltipText","alt","src","Link","to","MONTHS","DateRange","hideDaysCount","getDate","getMonth","fontSize","textAlign","margin","marginTop","ExtraFriends","_ref3","allFriends","numDisplayed","withRouter","onUpdate","onDelete","viewOnly","objectWithoutProperties","matches","editMode","setEditMode","promptDel","setPromptDel","_useState5","_useState6","disabledDatesMinusThoseForThisTrip","filter","from","subDays","react","DateRange_react","slice","m","FriendChip_react","TripCard_react_ExtraFriends","Spinner","TripsList","updateTrip","deleteTrip","Spinner_react","fTrips","pTrips","trip","TripCard_react","connect","users","createTrip","removeTrip","isShowingPastTrips","showPastTrips","hasFetched","populatedTrips","ids","tId","match","_match$split","_match$split2","uId","start","end","determineAlreadySelectedTripDates","NewTrip_react","isLoadingCities","OverlappingFriends","TripPanel_react_OverlapGraph","OverlapGraph","TripPanel_react_OverlapBar","OverlapBar","_ref4","totalLength","daysFromStart","daysOverlap","getOverlappingDaysInRanges","Math","floor","max","TripPanel","isActive","TripPanel_react_OverlappingFriends","MainPanel","TripPanel_react","fetchTrip","tripId","params","TripDetail_react_MainPanel","FriendshipStatus","user","onRequest","onAccept","is_you","onRequestFriend","onAcceptFriend","results","setResults","phrase","setPhrase","source","axios","CancelToken","get","cancelToken","token","withCredentials","then","catch","err","message","cancel","target","r","friendObj","FriendStatusButton_react","activeUser","friendList","accepted","f","hasFriends","pending","hasPendingFriends","FriendSearch_react","FriendsList_react_MainPanel","locationIcon","divIcon","html","iconSize","iconAnchor","popupAnchor","getDaysInRange","locations","percentageFromDate","date","daysInRange","round","dateFromPercentage","percentage","getLatLong","latitude","longitude","findBoundingBox","bounds","min","apply","isWithinDaysN","dateSelection","dateSpread","isWithinRange","LocationMap","userId","setLocations","activeLocation","setActiveLocation","setDateSlider","res","status","filteredLocations","fLocations","pLocations","Map","TileLayer","attribution","Polyline","positions","color","Marker","position","icon","Popup","onOpen","onClose","find","l","TelegramLink","href","rel","toUpperCase","TelegramLink_react","LocationMap_react","fetchUser","UserProfile_react_MainPanel","CONTINENT_OPTIONS","SuggestionList","suggestions","u","fetchExploreSuggestions","continent","setContinent","populatedSuggestions","sId","s","us","Explore_react_SuggestionList","withCookies","Component","component","rest","Route","render","cookies","Redirect","pathname","Login","state","errMsg","handleResponse","stringify","_this","onLogin","response","errors","setState","paddingRight","paddingLeft","react_telegram_login_build_default","dataOnauth","this","botName","MobileNavbar","onLogout","history","isOpen","setIsOpen","navigateTo","push","DesktopNavbar","Header_react_MobileNavbar","Header_react_DesktopNavbar","SERVER_ERR","NOT_FOUND","App","remove","logout","post","_this$props","location","_this2","error","App_ErrorPage","msg","Header_react","bind","Switch","path","Login_react","PrivateRoute_react","exact","TripDashboard","TripDetail","FriendsList","Explore","UserProfile","hideLogo","renderAuthorTag","ErrorPage","padding","Boolean","hostname","schema","Entity","idAttribute","v","schemas","processStrategy","parent","initialState","ENTITIES","insertEntities","entity","overwrite","arguments","undefined","Array","isArray","normData","normalize","newState","forEach","indexOf","toConsumableArray","Set","entities","result","existingIds","TRIPS_LABELS","CITIES_LABELS","USERS_LABELS","apiMiddleware","dispatch","next","action","_action$payload","headers","dataOrParams","includes","defaults","baseURL","REACT_APP_BASE_URL","common","apiStart","request","defineProperty","apiError","finally","apiEnd","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reduceError","applyMiddleware","thunkMiddleware","ReactDOM","es","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9369c4b.chunk.js","sourcesContent":["export const FETCH_TRIPS = 'FETCH_TRIPS';\nexport const FETCH_TRIP = 'FETCH_TRIP';\nexport const SET_TRIPS = 'SET_TRIPS';\nexport const CREATE_TRIP = 'CREATE_TRIP';\nexport const UPDATE_TRIP = 'UPDATE_TRIP';\nexport const DELETE_TRIP = 'DELETE_TRIP';\nexport const REMOVE_TRIP = 'REMOVE_TRIP';\n\nexport const FETCH_CITIES = 'FETCH_CITIES';\nexport const SET_CITIES = 'SET_CITIES';\n\nexport const FETCH_FRIENDS = 'FETCH_FRIENDS';\nexport const SET_FRIENDS = 'SET_FRIENDS';\nexport const CREATE_FRIEND_REQ = 'CREATE_FRIEND_REQ';\nexport const ACCEPT_FRIEND_REQ = 'ACCEPT_FRIEND_REQ';\n\nexport const FETCH_USER = 'FETCH_USER';\nexport const SET_USERS = 'SET_USERS';\n\nexport const LOGOUT = 'LOGOUT';\nexport const API = 'API';\nexport const API_START = 'API_START';\nexport const API_END = 'API_END';\nexport const ACCESS_DENIED = 'ACCESS_DENIED';\nexport const API_ERROR = 'API_ERROR';\n\nexport const FETCH_EXPLORE_SUGGESTIONS = 'FETCH_EXPLORE_SUGGESTIONS';\nexport const SET_EXPLORE_SUGGESTIONS = 'SET_EXPLORE_SUGGESTIONS';\n\nexport const ENTITY_CITIES = 'ENTITY::CITIES';\nexport const ENTITY_TRIPS = 'ENTITY::TRIPS';\n","//\n// Expose friendly names for .env file variables\n//\nexport const apiUrl = process.env.REACT_APP_API_URL;\nexport const botName = process.env.REACT_APP_TELEGRAM_BOT;\n","import {\n  API,\n  LOGOUT,\n  FETCH_EXPLORE_SUGGESTIONS,\n  SET_EXPLORE_SUGGESTIONS,\n  FETCH_TRIPS,\n  FETCH_TRIP,\n  SET_TRIPS,\n  CREATE_TRIP,\n  UPDATE_TRIP,\n  DELETE_TRIP,\n  REMOVE_TRIP,\n  FETCH_FRIENDS,\n  CREATE_FRIEND_REQ,\n  ACCEPT_FRIEND_REQ,\n  FETCH_USER,\n  SET_USERS,\n  FETCH_CITIES,\n  SET_CITIES\n} from './types';\n\nimport format from 'date-fns/format';\n\nimport { apiUrl } from '../config';\n\nexport function logout() {\n  return {\n    type: LOGOUT\n  };\n}\n\nexport function setSuggestions(data) {\n  return {\n    type: SET_EXPLORE_SUGGESTIONS,\n    payload: data\n  };\n}\n\nexport function fetchExploreSuggestions(data) {\n  const qs = `?start_date=${data.start_date}&end_date=${data.end_date}`;\n\n  return apiAction({\n    url: `${apiUrl}/explore/${data.continent}/${qs}`,\n    onSuccess: setSuggestions,\n    onFailure: () => console.log('Error occured loading explore suggestions'),\n    label: FETCH_EXPLORE_SUGGESTIONS\n  });\n}\n\nexport function fetchFriends() {\n  return apiAction({\n    url: `${apiUrl}/u/friends/`,\n    onSuccess: setUsers,\n    onFailure: () => console.log('Error occured loading friends'),\n    label: FETCH_FRIENDS\n  });\n}\n\nexport function acceptFriendRequest(data) {\n  return apiAction({\n    url: `${apiUrl}/u/${data.id}/friends/`,\n    method: 'PUT',\n    // HACK: Need the API to return the updated user object\n    onSuccess: () =>\n      setUsers({\n        data: {\n          ...data,\n          is_friend: true,\n          is_pending_friend: false\n        }\n      }),\n    nextAction: fetchTrips,\n    onFailure: () => console.log('Error occured accepting friendship request'),\n    data: data,\n    label: ACCEPT_FRIEND_REQ\n  });\n}\n\nexport function requestFriendship(data) {\n  return apiAction({\n    url: `${apiUrl}/u/${data.id}/friends/`,\n    method: 'POST',\n    // HACK: Need the API to return the updated user object\n    onSuccess: () =>\n      setUsers({\n        data: {\n          ...data,\n          have_requested_friend: true\n        }\n      }),\n    onFailure: () => console.log('Error occured requesting friendship'),\n    data: data,\n    label: CREATE_FRIEND_REQ\n  });\n}\n\nexport function fetchUser(id) {\n  return apiAction({\n    url: `${apiUrl}/u/${id}/`,\n    onSuccess: setUsers,\n    onFailure: () => console.log('Error occured loading user', id),\n    label: FETCH_USER\n  });\n}\n\nexport function setUsers(data) {\n  return {\n    type: SET_USERS,\n    payload: data\n  };\n}\n\nexport function fetchCities() {\n  return apiAction({\n    url: `${apiUrl}/cities/`,\n    onSuccess: setCities,\n    onFailure: () => console.log('Error occured loading cities'),\n    label: FETCH_CITIES\n  });\n}\n\nfunction setCities(data) {\n  return {\n    type: SET_CITIES,\n    payload: data\n  };\n}\n\nexport function fetchTrip(id) {\n  return apiAction({\n    url: `${apiUrl}/trips/${id}`,\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured loading trips'),\n    label: FETCH_TRIP\n  });\n}\n\nexport function fetchTrips(data) {\n  // Optional timeframe filter\n  const qs =\n    data && data.end_date_after\n      ? `end_date_after=${format(data.end_date_after, 'YYYY-MM-DD')}`\n      : '';\n\n  return apiAction({\n    url: `${apiUrl}/trips/?${qs}`,\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured loading trips'),\n    label: FETCH_TRIPS\n  });\n}\n\nfunction setTrips(data) {\n  return {\n    type: SET_TRIPS,\n    payload: data\n  };\n}\n\nfunction removeTrip(data) {\n  return {\n    type: REMOVE_TRIP,\n    payload: data\n  };\n}\n\nexport function createTrip(data) {\n  return apiAction({\n    url: `${apiUrl}/trips/`,\n    method: 'POST',\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured creating trip'),\n    data: data,\n    label: CREATE_TRIP\n  });\n}\n\nexport function updateTrip(data) {\n  return apiAction({\n    url: `${apiUrl}/trips/${data.id}`,\n    method: 'PUT',\n    onSuccess: setTrips,\n    onFailure: () => console.log('Error occured updating trip'),\n    data: data,\n    label: UPDATE_TRIP\n  });\n}\n\nexport function deleteTrip(data) {\n  return apiAction({\n    url: `${apiUrl}/trips/${data.id}`,\n    method: 'DELETE',\n    onFailure: () => console.log('Error occured deleting trip'),\n    onSuccess: () => removeTrip(data),\n    label: DELETE_TRIP\n  });\n}\n\nfunction apiAction({\n  url = '',\n  method = 'GET',\n  data = null,\n  accessToken = null,\n  onSuccess = () => {},\n  onFailure = () => {},\n  nextAction = () => {},\n  label = '',\n  headersOverride = null\n}) {\n  return {\n    type: API,\n    payload: {\n      url,\n      method,\n      data,\n      accessToken,\n      onSuccess,\n      onFailure,\n      label,\n      headersOverride,\n      nextAction\n    }\n  };\n}\n","import isWithinRange from 'date-fns/is_within_range';\nimport differenceInDays from 'date-fns/difference_in_days';\nimport isBefore from 'date-fns/is_before';\nimport addDays from 'date-fns/add_days';\nimport subDays from 'date-fns/sub_days';\n\n// Disable any dates that you already have trips on (allowing 1 day overlap)\nexport function determineAlreadySelectedTripDates(trips) {\n  return trips.map(t => ({\n    from: addDays(t.start_date, 1),\n    to: subDays(t.end_date, 1)\n  }));\n}\n\n// Determine the next gap in the dates of n days\nexport function determineNextFreeDate(trips, n) {\n  const nextFreeDate = trips.reduce((lastChecked, nextTrip) => {\n    // Only allow a gap to be auto-selected if there are n days available\n    if (isBefore(addDays(lastChecked, n - 1), nextTrip.start_date)) {\n      return lastChecked;\n    }\n\n    return new Date(nextTrip.end_date);\n  }, Date.now());\n  return [nextFreeDate, addDays(nextFreeDate, n)];\n}\n\nexport const isFutureTrip = t => differenceInDays(t.end_date, new Date()) >= 0;\nexport const isPastTrip = t => differenceInDays(t.end_date, new Date()) < 0;\nexport const isCurrentTrip = t =>\n  isWithinRange(new Date(), t.start_date, t.end_date);\n","import React, { useState, useEffect } from 'react';\nimport { List } from 'react-virtualized';\nimport ReactCountryFlag from 'react-country-flag';\n\nimport { determineNextFreeDate } from '../helpers/dateUtils';\n\nimport format from 'date-fns/format';\n\nimport Select from 'react-select';\nimport Flatpickr from 'react-flatpickr';\n\nimport 'flatpickr/dist/themes/light.css';\n\n//\n// Virtualized Select Component\n//\nconst MenuList = props => {\n  const rows = props.children;\n  const rowRenderer = ({ key, index, isScrolling, isVisible, style }) => (\n    <div key={key} style={style}>\n      {rows[index]}\n    </div>\n  );\n\n  return (\n    <List\n      style={{ width: '100%', flexGrow: true }}\n      width={props.width}\n      height={300}\n      rowHeight={35}\n      rowCount={rows.length || 0}\n      rowRenderer={rowRenderer}\n    />\n  );\n};\n\nconst convertToSelectOpts = i =>\n  i.map(i => ({\n    label: (\n      <div>\n        <ReactCountryFlag code={i.country_code} svg /> {i.name}\n      </div>\n    ),\n    value: `${i.name}:::${i.id}`\n  }));\n\nfunction NewTrip({ cities, trips, disabledDates, onCreateTrip }) {\n  // Default to the next free day and no city selected\n  const [dates, setDates] = useState(determineNextFreeDate(trips, 4));\n  const [city, setCity] = useState(null);\n\n  //\n  // Make sure the default dates stay up to date when a new trip is created\n  //\n  useEffect(\n    () => {\n      setDates(determineNextFreeDate(trips, 4));\n    },\n    [trips.map(t => t.id).join('-')]\n  );\n\n  //\n  // Package up the state as a trip object and pass it back up\n  //\n  const createTrip = e => {\n    e.preventDefault();\n    onCreateTrip({\n      city: parseInt(city.value.split(':::')[1], 10),\n      start_date: format(dates[0], 'YYYY-MM-DD'),\n      end_date: format(dates[1], 'YYYY-MM-DD')\n    });\n    setCity(null);\n  };\n\n  // Order cities by population for now\n  const citiesList = Object.keys(cities.all).map(cId => cities.all[cId]);\n  citiesList.sort((a, b) => b.population - a.population);\n\n  return (\n    <form className=\"uk-tile new-trip-form uk-padding-small uk-flex uk-flex-around uk-flex-middle\">\n      <div>\n        <Select\n          styles={{\n            container: () => ({\n              width: 250\n            }),\n            menu: provided => ({\n              ...provided,\n              top: null\n            })\n          }}\n          components={{\n            MenuList: props => <MenuList {...props} width={window.innerWidth} />\n          }}\n          placeholder=\"New Trip Location\"\n          className=\"country-picker\"\n          isSearchAble\n          isLoading={cities.isFetching}\n          value={city}\n          onChange={setCity}\n          options={convertToSelectOpts(citiesList)}\n        />\n      </div>\n      <Flatpickr\n        className=\"uk-input uk-width-1-3@m\"\n        options={{\n          mode: 'range',\n          disable: disabledDates,\n          dateFormat: 'Y-m-d'\n        }}\n        value={dates}\n        onChange={setDates}\n      />\n      <button\n        className=\"uk-button uk-button-secondary\"\n        onClick={createTrip}\n        disabled={city === null}\n      >\n        <span className=\"icono-plus\" />\n      </button>\n    </form>\n  );\n}\n\nexport default NewTrip;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FriendChip = ({\n  id,\n  first_name,\n  last_name,\n  username,\n  photo_url,\n  photoOnly\n}) => {\n  const photoSrc = photo_url || '/blank-profile-picture.png';\n  const tooltipText = username || `${first_name} ${last_name}`;\n\n  if (photoOnly) {\n    return (\n      <div className=\"uk-border-circle friend-chip\">\n        <img\n          className=\"uk-border-circle avatar-preview\"\n          alt=\"avatar\"\n          src={photoSrc}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Link className=\"uk-border-circle friend-chip\" to={`/users/${id}`}>\n      <img\n        className=\"uk-border-circle avatar-preview\"\n        alt=\"avatar\"\n        src={photoSrc}\n      />\n      <div className=\"uk-badge tooltip\">{tooltipText}</div>\n    </Link>\n  );\n};\n\nexport default FriendChip;\n","import React from 'react';\n\nimport getMonth from 'date-fns/get_month';\nimport getDate from 'date-fns/get_date';\nimport differenceInDays from 'date-fns/difference_in_days';\n\nconst MONTHS = [\n  'JAN',\n  'FEB',\n  'MAR',\n  'APR',\n  'MAY',\n  'JUN',\n  'JUL',\n  'AUG',\n  'SEP',\n  'OCT',\n  'NOV',\n  'DEC'\n];\n\nconst DateRange = ({ start_date, end_date, hideDaysCount, className }) => (\n  <div className={`uk-flex date-range ${className || ''}`}>\n    <div>\n      <b>\n        {getDate(start_date)} <br /> {MONTHS[getMonth(start_date)]}\n      </b>\n    </div>\n    <div>\n      <b>\n        {getDate(end_date)} <br /> {MONTHS[getMonth(end_date)]}\n      </b>\n    </div>\n    {!hideDaysCount && (\n      <p\n        style={{\n          width: 92,\n          height: 42,\n          fontSize: 16,\n          textAlign: 'center',\n          margin: 2,\n          marginTop: 10\n        }}\n      >\n        {differenceInDays(end_date, start_date)} Day Trip\n      </p>\n    )}\n  </div>\n);\n\nexport default DateRange;\n","import React, { Fragment, useState } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport ReactCountryFlag from 'react-country-flag';\nimport Flatpickr from 'react-flatpickr';\n\nimport format from 'date-fns/format';\nimport addDays from 'date-fns/add_days';\nimport subDays from 'date-fns/sub_days';\n\nimport FriendChip from './FriendChip.react';\nimport DateRange from './DateRange.react';\n\nfunction TripCard({ onUpdate, onDelete, disabledDates, viewOnly, ...props }) {\n  const { id, city, start_date, end_date, matches } = props;\n\n  const [editMode, setEditMode] = useState(false);\n  const [promptDel, setPromptDel] = useState(false);\n  const [dates, setDates] = useState([\n    new Date(start_date),\n    new Date(end_date)\n  ]);\n\n  const updateTrip = () => {\n    setEditMode(false);\n    return onUpdate({\n      id,\n      city: city.id,\n      start_date: format(dates[0], 'YYYY-MM-DD'),\n      end_date: format(dates[1], 'YYYY-MM-DD')\n    });\n  };\n\n  const disabledDatesMinusThoseForThisTrip = (disabledDates || []).filter(\n    ({ from, to }) =>\n      !(\n        format(addDays(start_date, 1), 'YYYY-MM-DD') ===\n          format(from, 'YYYY-MM-DD') &&\n        format(subDays(end_date, 1), 'YYYY-MM-DD') === format(to, 'YYYY-MM-DD')\n      )\n  );\n\n  const deleteTrip = () => onDelete({ id });\n\n  if (promptDel) {\n    return (\n      <Fragment>\n        <div className=\"uk-tile uk-padding-small uk-flex uk-flex-between uk-background-muted\">\n          <div>\n            <h6>\n              <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n            </h6>\n          </div>\n          <p>Confirm you would like to delete this trip</p>\n          <span className=\"uk-flex\">\n            <hr className=\"uk-divider-vertical uk-margin-right uk-margin-left\" />\n            <span className=\"uk-flex uk-flex-column\">\n              <span className=\"icon-sm\">\n                <span className=\"icono-check\" onClick={deleteTrip} />\n              </span>\n              <span className=\"icon-sm\">\n                <span\n                  className=\"icono-cross\"\n                  onClick={e => setPromptDel(false)}\n                />\n              </span>\n            </span>\n          </span>\n        </div>\n        <hr />\n      </Fragment>\n    );\n  }\n\n  if (editMode) {\n    return (\n      <Fragment>\n        <div className=\"uk-tile uk-padding-small uk-flex uk-flex-between uk-background-muted\">\n          <div>\n            <h6>\n              <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n            </h6>\n          </div>\n          <Flatpickr\n            className=\"uk-input uk-width-1-3\"\n            options={{\n              mode: 'range',\n              disable: disabledDatesMinusThoseForThisTrip\n            }}\n            value={dates}\n            onChange={setDates}\n          />\n          <span className=\"uk-flex\">\n            <hr className=\"uk-divider-vertical uk-margin-right uk-margin-left\" />\n            <span className=\"uk-flex uk-flex-column\">\n              <span className=\"icon-sm\">\n                <span className=\"icono-check\" onClick={updateTrip} />\n              </span>\n              <span className=\"icon-sm\">\n                <span\n                  className=\"icono-cross\"\n                  onClick={e => setEditMode(!editMode)}\n                />\n              </span>\n            </span>\n          </span>\n        </div>\n        <hr />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"uk-tile uk-padding-small uk-flex uk-flex-between uk-link-muted\">\n        <Link to={`/trips/${id}`}>\n          <h6>\n            <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n          </h6>\n          <DateRange start_date={start_date} end_date={end_date} />\n        </Link>\n        <span className=\"uk-flex\">\n          <span className=\"uk-flex\">\n            {matches.slice(0, 3).map(m => (\n              <FriendChip key={m.id} {...m} />\n            ))}\n            <ExtraFriends allFriends={matches} numDisplayed={3} />\n          </span>\n          {!viewOnly && (\n            <span className=\"uk-flex\">\n              <hr className=\"uk-divider-vertical uk-margin-right uk-margin-left\" />\n              <span className=\"uk-flex uk-flex-column\">\n                <span className=\"icon-sm\">\n                  <span\n                    className=\"icono-gear\"\n                    onClick={e => {\n                      e.preventDefault();\n                      setEditMode(!editMode);\n                    }}\n                  />\n                </span>\n                <span className=\"icon-sm\">\n                  <span\n                    className=\"icono-trash\"\n                    onClick={e => {\n                      e.preventDefault();\n                      setPromptDel(true);\n                    }}\n                  />\n                </span>\n              </span>\n            </span>\n          )}\n        </span>\n      </div>\n      <hr />\n    </Fragment>\n  );\n}\n\nconst ExtraFriends = ({ allFriends, numDisplayed }) => {\n  if (allFriends.length > numDisplayed) {\n    return (\n      <div className=\"uk-border-circle avatar-preview uk-background-muted\">\n        <p className=\"uk-border-circle uk-dark\">\n          +{allFriends.length - numDisplayed}\n        </p>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default withRouter(TripCard);\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => (\n  <div className=\"spinner-container\">\n    <div className=\"lds-ripple\">\n      <div />\n      <div />\n    </div>\n  </div>\n);\n\nexport default Spinner;\n","//\n// Page with a list of trips for the user\n//\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  fetchTrips,\n  fetchCities,\n  createTrip,\n  fetchFriends,\n  updateTrip,\n  deleteTrip\n} from '../actions';\n\nimport differenceInDays from 'date-fns/difference_in_days';\nimport isBefore from 'date-fns/is_before';\nimport {\n  isFutureTrip,\n  isPastTrip,\n  determineAlreadySelectedTripDates\n} from '../helpers/dateUtils';\n\nimport NewTrip from '../components/NewTrip.react';\nimport TripCard from '../components/TripCard.react';\nimport Spinner from '../components/Spinner.react';\n\nfunction TripDashboard(props) {\n  // Get data out of redux\n  const { cities, trips, users } = props;\n\n  const [isShowingPastTrips, showPastTrips] = useState(false);\n\n  // Load API data for page\n  useEffect(() => {\n    if (!cities.isFetching && !cities.hasFetched) {\n      props.fetchCities();\n    }\n    if (!trips.isFetching && !trips.hasFetched) {\n      props.fetchTrips();\n    }\n  }, []);\n\n  const togglePastTrips = () => {\n    if (!isShowingPastTrips) {\n      props.fetchTrips({\n        end_date_after: new Date('2018-01-01')\n      });\n    }\n    showPastTrips(!isShowingPastTrips);\n  };\n\n  const populatedTrips = trips.ids\n    .map(tId => {\n      const trip = trips.all[tId];\n      return {\n        ...trip,\n        city: cities.all[trip.city],\n        matches: trip.matches.map(match => {\n          const [uId, start, end] = match.split('::');\n          return {\n            ...users.all[uId],\n            start_date: start,\n            end_date: end\n          };\n        })\n      };\n    })\n    .filter(trip => isShowingPastTrips || isBefore(new Date(), trip.end_date));\n\n  // Sort so the soonest trip is first in the list\n  populatedTrips.sort((a, b) => differenceInDays(a.start_date, b.start_date));\n\n  const disabledDates = determineAlreadySelectedTripDates(populatedTrips);\n\n  return (\n    <Fragment>\n      <h4>ADD NEW TRIP</h4>\n      <NewTrip\n        cities={cities}\n        trips={populatedTrips}\n        isLoadingCities={cities.isFetching}\n        onCreateTrip={props.createTrip}\n        disabledDates={disabledDates}\n      />\n\n      <TripsList\n        isFetching={trips.isFetching}\n        trips={populatedTrips}\n        updateTrip={props.updateTrip}\n        deleteTrip={props.deleteTrip}\n        disabledDates={disabledDates}\n      />\n\n      <button\n        className=\"uk-button uk-button-secondary\"\n        onClick={togglePastTrips}\n      >\n        {isShowingPastTrips ? 'Hide Past Trips' : 'Show Past Trips'}\n      </button>\n    </Fragment>\n  );\n}\n\nfunction TripsList({\n  isFetching,\n  trips,\n  disabledDates,\n  updateTrip,\n  deleteTrip\n}) {\n  if (isFetching) {\n    return <Spinner />;\n  }\n\n  if (trips.length === 0) {\n    return <p>You have no upcoming trips. Hope you enjoy your rest.</p>;\n  }\n\n  // TODO: Pagination\n\n  const fTrips = trips.filter(isFutureTrip);\n  const pTrips = trips.filter(isPastTrip);\n\n  return (\n    <Fragment>\n      {pTrips.length > 0 && <h4>PAST TRIPS</h4>}\n      {pTrips.map(trip => (\n        <TripCard\n          key={trip.id}\n          onUpdate={updateTrip}\n          onDelete={deleteTrip}\n          disabledDates={disabledDates}\n          {...trip}\n        />\n      ))}\n      {fTrips.length > 0 && <h4>UPCOMING TRIPS</h4>}\n      {fTrips.map(trip => (\n        <TripCard\n          key={trip.id}\n          onUpdate={updateTrip}\n          onDelete={deleteTrip}\n          disabledDates={disabledDates}\n          {...trip}\n        />\n      ))}\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = ({ cities, trips, users }) => ({\n  cities,\n  trips,\n  users\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchTrips,\n    fetchCities,\n    fetchFriends,\n    createTrip,\n    updateTrip,\n    deleteTrip\n  }\n)(TripDashboard);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactCountryFlag from 'react-country-flag';\n\nimport FriendChip from './FriendChip.react';\n\nimport differenceInDays from 'date-fns/difference_in_days';\nimport getOverlappingDaysInRanges from 'date-fns/get_overlapping_days_in_ranges';\nimport format from 'date-fns/format';\n\nconst TripPanel = ({ city, start_date, end_date, matches, isActive }) => (\n  <dl className=\"uk-description-list\">\n    <dt>Location</dt>\n    <dd className=\"uk-padding-small\">\n      <span className=\"uk-padding-small\">{city.name}</span>\n      <ReactCountryFlag code={city.country_code} svg />\n    </dd>\n    <dt>Duration</dt>\n    <dd className=\"uk-padding-small\">\n      <span className=\"uk-padding\">\n        You will be in {city.name} for {differenceInDays(end_date, start_date)}{' '}\n        Days\n      </span>\n      <OverlapBar\n        start_date={start_date}\n        end_date={end_date}\n        to={end_date}\n        from={start_date}\n      />\n    </dd>\n    <OverlappingFriends\n      matches={matches}\n      start_date={start_date}\n      end_date={end_date}\n    />\n  </dl>\n);\n\nconst OverlappingFriends = ({ matches, start_date, end_date }) => {\n  if (matches.length === 0) {\n    return (\n      <p>\n        None of your friends trips are currently overlapping with this one.\n        Maybe you need to add some people you know to improve your chances?\n      </p>\n    );\n  }\n\n  return (\n    <Fragment>\n      <dt>Friends with overlapping dates</dt>\n      <dd>\n        <span className=\"uk-padding\">\n          {matches.map(m => (\n            <OverlapGraph key={m.id} {...m} from={start_date} to={end_date} />\n          ))}\n        </span>\n      </dd>\n    </Fragment>\n  );\n};\n\nconst OverlapGraph = ({\n  id,\n  first_name,\n  last_name,\n  username,\n  photo_url,\n  start_date,\n  end_date,\n  from,\n  to\n}) => (\n  <div className=\"overlap-graph\">\n    <div className=\"uk-flex uk-flex-middle\">\n      <FriendChip\n        id={id}\n        username={username}\n        first_name={first_name}\n        last_name={last_name}\n        photo_url={photo_url}\n        photoOnly\n      />\n      <Link to={`/users/${id}`} className=\"chip-label uk-link-muted\">\n        @{username}\n      </Link>\n    </div>\n    <OverlapBar\n      start_date={start_date}\n      end_date={end_date}\n      to={to}\n      from={from}\n    />\n  </div>\n);\n\nconst OverlapBar = ({ id, start_date, end_date, from, to }) => {\n  const totalLength = differenceInDays(to, from);\n  const daysFromStart = differenceInDays(start_date, from);\n  const daysOverlap = getOverlappingDaysInRanges(\n    from,\n    to,\n    start_date,\n    end_date\n  );\n\n  const STYLES = {\n    width: `${Math.floor((daysOverlap * 80) / totalLength)}%`\n  };\n  const START_STYLES = {\n    marginLeft: `${Math.max(\n      Math.floor((daysFromStart * 80) / totalLength) - 5,\n      0\n    )}%`\n  };\n\n  // TODO: This look gross ATM\n  return null;\n  return (\n    <div className=\"uk-flex uk-flex-around uk-padding-small\">\n      <span className=\"date-icon\" style={START_STYLES}>\n        {format(start_date, 'DD MMM')}\n      </span>\n      <li className=\"uk-list overlap-bar\" style={STYLES}>\n        {daysOverlap} Days\n      </li>\n      <span className=\"date-icon\">{format(end_date, 'DD MMM')}</span>\n    </div>\n  );\n};\n\nexport default TripPanel;\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrip } from '../actions';\n\nimport TripPanel from '../components/TripPanel.react';\nimport Spinner from '../components/Spinner.react';\n\nconst TripDetail = ({ match, trips, cities, users, fetchTrip }) => {\n  const tripId = parseInt(match.params.id, 10);\n\n  // Clone the trip\n  let trip = trips.all[tripId];\n  if (trip) {\n    trip = {\n      ...trip,\n      city: cities[trip.city],\n      matches: trip.matches.map(match => {\n        const [uId, start, end] = match.split('::');\n        return {\n          ...users.all[uId],\n          start_date: start,\n          end_date: end\n        };\n      })\n    };\n  }\n\n  useEffect(() => {\n    // Get it from the API if:\n    //   - it is not currently fetching trips\n    //   - we don't have the trip in the store already\n    if (!trips.isFetching && !trip) {\n      fetchTrip(tripId);\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <h4>TRIP SUMMARY</h4>\n      <MainPanel isFetching={trips.isFetching} trip={trip} />\n    </Fragment>\n  );\n};\n\nconst MainPanel = ({ isFetching, trip }) => {\n  if (isFetching || !trip) {\n    return <Spinner />;\n  }\n  return <TripPanel {...trip} />;\n};\n\nconst mapStateToProps = ({ trips, users, cities }) => ({\n  trips,\n  users,\n  cities: cities.all\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchTrip\n  }\n)(TripDetail);\n","import React from 'react';\n\nconst FriendshipStatus = ({ user, onRequest, onAccept }) => {\n  if (user && user.is_you) {\n    return (\n      <button className=\"uk-button uk-flex\" disabled>\n        <div className=\"icon-sm\">\n          <span className=\"icono-smile\" />\n        </div>\n        <div>You</div>\n      </button>\n    );\n  }\n  if (user && user.is_friend) {\n    return (\n      <button className=\"uk-button uk-flex\" disabled>\n        <div className=\"icon-sm\">\n          <span className=\"icono-check\" />\n        </div>\n        <div>Friends</div>\n      </button>\n    );\n  }\n  if (user && user.is_pending_friend) {\n    return (\n      <button onClick={onAccept} className=\"uk-button uk-flex\">\n        <div>Accept</div>\n      </button>\n    );\n  }\n  if (user && user.have_requested_friend) {\n    return (\n      <button className=\"uk-button uk-flex\" disabled>\n        <div className=\"icon-sm\">\n          <span className=\"icono-clock\" />\n        </div>\n        <div>Waiting</div>\n      </button>\n    );\n  }\n\n  return (\n    <button className=\"uk-button uk-flex\" onClick={onRequest}>\n      <div className=\"icon-sm\">\n        <span className=\"icono-plus\" />\n      </div>\n      <div>Request</div>\n    </button>\n  );\n};\n\nexport default FriendshipStatus;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport { apiUrl } from '../config';\n\nimport FriendChip from './FriendChip.react';\nimport FriendStatusButton from './FriendStatusButton.react';\n\n// TODO:\n//  - integrate with search API\n//  - present results effectively\n//  - request button\nfunction FriendSearch({\n  users,\n  onRequestFriend,\n  onAcceptFriend,\n  fetchFriends\n}) {\n  const [results, setResults] = useState([]);\n  const [phrase, setPhrase] = useState('');\n\n  // Each time the user types, we send a search query.\n  //\n  // TODO:\n  // - Should this be debounced?\n  // - Encoding query strings\n  //\n  useEffect(\n    () => {\n      const CancelToken = axios.CancelToken;\n      const source = CancelToken.source();\n\n      if (phrase) {\n        axios\n          .get(`${apiUrl}/u/search/?q=${phrase}`, {\n            cancelToken: source.token,\n            withCredentials: true\n          })\n          .then(({ data }) => setResults(data.data))\n          .catch(err => {\n            // All good.\n            if (err && err.message === 'unmount') {\n              return;\n            }\n\n            // TODO: Handle this!\n            console.log(err);\n          });\n      } else {\n        setResults([]);\n      }\n\n      // Cancel the request if the component is unmounted\n      return () => source.cancel('unmount');\n    },\n    [phrase]\n  );\n\n  return (\n    <div className=\"uk-padding-small\">\n      <input\n        className=\"uk-input\"\n        placeholder=\"Search for Telegram Username / Full Name\"\n        value={phrase}\n        onChange={e => setPhrase(e.target.value)}\n      />\n      <hr />\n      <dl className=\"uk-description-list\">\n        {results.map(r => {\n          // Get friend object so we can tell if we're friends with each search result\n          const friendObj = users.all[r.id];\n\n          // Don't show yourself in search results\n          if (friendObj && friendObj.is_you) {\n            return null;\n          }\n\n          return (\n            <Fragment key={r.id}>\n              <dt>{r.username}</dt>\n              <dd className=\"uk-padding-small uk-flex uk-flex-between\">\n                <span className=\"uk-flex\">\n                  <FriendChip\n                    {...r}\n                    photoOnly={!friendObj || !friendObj.is_friend}\n                  />\n                  <p>\n                    {r.first_name} {r.last_name}\n                  </p>\n                </span>\n                <span className=\"uk-flex\">\n                  <hr\n                    style={{ height: 30 }}\n                    className=\"uk-divider-vertical uk-margin-right uk-margin-left\"\n                  />\n                  <FriendStatusButton\n                    user={friendObj}\n                    onAccept={() => onAcceptFriend(r)}\n                    onRequest={() => onRequestFriend(r)}\n                  />\n                </span>\n              </dd>\n            </Fragment>\n          );\n        })}\n      </dl>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ users }) => ({\n  users\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(FriendSearch);\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  fetchFriends,\n  requestFriendship,\n  acceptFriendRequest\n} from '../actions';\n\nimport Spinner from '../components/Spinner.react';\nimport FriendChip from '../components/FriendChip.react';\nimport FriendSearch from '../components/FriendSearch.react';\nimport FriendStatusButton from '../components/FriendStatusButton.react';\n\nconst FriendsList = ({\n  users,\n  fetchFriends,\n  requestFriendship,\n  acceptFriendRequest,\n  activeUser\n}) => {\n  useEffect(() => {\n    if (!users.isFetching) {\n      fetchFriends();\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <MainPanel\n        isFetching={users.isFetching && users.ids.length === 0}\n        users={users}\n        activeUser={activeUser}\n        acceptFriendRequest={acceptFriendRequest}\n        requestFriendship={requestFriendship}\n      />\n    </Fragment>\n  );\n};\n\nconst MainPanel = ({\n  isFetching,\n  users,\n  activeUser,\n  acceptFriendRequest,\n  requestFriendship\n}) => {\n  if (isFetching) {\n    return <Spinner />;\n  }\n\n  const friendList = Object.keys(users.all)\n    .filter(uId => parseInt(uId, 10) !== activeUser)\n    .map(uId => users.all[uId]);\n\n  const accepted = friendList.filter(f => f.is_friend);\n  const hasFriends = accepted.length > 0;\n  const pending = friendList.filter(f => f.is_pending_friend);\n  const hasPendingFriends = pending.length > 0;\n\n  return (\n    <Fragment>\n      {hasFriends && <h4>FRIENDS</h4>}\n      {accepted.map(f => (\n        <FriendChip key={f.id} {...f} />\n      ))}\n      {hasPendingFriends && <h4>PENDING REQUESTS</h4>}\n      {pending.map(f => (\n        <Fragment key={f.id}>\n          <FriendChip {...f} onAccept={() => acceptFriendRequest(f)} />\n          <FriendStatusButton\n            user={f}\n            onAccept={() => acceptFriendRequest(f)}\n          />\n        </Fragment>\n      ))}\n      <h4>FIND FRIENDS</h4>\n      <FriendSearch\n        users={users}\n        onRequestFriend={requestFriendship}\n        onAcceptFriend={acceptFriendRequest}\n      />\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ users, activeUser }) => ({\n  users,\n  activeUser\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchFriends,\n    requestFriendship,\n    acceptFriendRequest\n  }\n)(FriendsList);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Map, Marker, Popup, TileLayer, Polyline } from 'react-leaflet';\nimport { divIcon } from 'leaflet';\n\nimport differenceInDays from 'date-fns/difference_in_days';\nimport addDays from 'date-fns/add_days';\nimport subDays from 'date-fns/sub_days';\nimport isWithinRange from 'date-fns/is_within_range';\n\nimport { apiUrl } from '../config';\nimport { isFutureTrip, isPastTrip } from '../helpers/dateUtils';\n\nimport Spinner from './Spinner.react';\nimport TripCard from './TripCard.react';\nimport DateRange from './DateRange.react';\n\n// Custom Icon for the leaftlet map.\nconst locationIcon = divIcon({\n  html: '<span class=\"icono-caretDown\"/>',\n  iconSize: [25, 25],\n  iconAnchor: [17, 24],\n  popupAnchor: [-3, -26]\n});\n\nconst LocationMap = ({ userId }) => {\n  const [locations, setLocations] = useState(null);\n  const [activeLocation, setActiveLocation] = useState(null);\n  const [dateSelection, setDateSlider] = useState(new Date());\n\n  const fetchUserLocations = id => {\n    if (!id) {\n      return;\n    }\n    setLocations(null);\n    return axios(`${apiUrl}/u/${id}/locations/`, {\n      withCredentials: true\n    }).then(res => {\n      if (res.status === 200) {\n        setLocations(res.data.data);\n        setDateSlider(dateFromPercentage(50, res.data.data));\n      } else if (res.status === 404) {\n        setLocations([]);\n      }\n    });\n  };\n\n  useEffect(\n    () => {\n      fetchUserLocations(userId);\n    },\n    [userId]\n  );\n\n  if (locations === null) {\n    return <Spinner />;\n  }\n\n  const dateSpread = Math.floor(getDaysInRange(locations) / 4);\n\n  // Sort so the soonest trip is first in the list\n  locations.sort((a, b) => differenceInDays(a.start_date, b.start_date));\n\n  // Only show locations +/- 60 days from date\n  const filteredLocations = locations.filter(\n    isWithinDaysN(dateSelection, dateSpread)\n  );\n\n  const fLocations = filteredLocations.filter(isFutureTrip);\n  const pLocations = filteredLocations.filter(isPastTrip);\n\n  const bounds =\n    filteredLocations.length > 1\n      ? filteredLocations.map(getLatLong)\n      : locations.map(getLatLong);\n\n  return (\n    <Fragment>\n      <Map bounds={findBoundingBox(bounds)} style={{ height: 300 }}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n        />\n        <Polyline positions={pLocations.map(getLatLong)} color=\"black\" />\n        <Polyline positions={fLocations.map(getLatLong)} color=\"#bf4e4e\" />\n        {filteredLocations.map(({ id, city, start_date, end_date }) => (\n          <Marker\n            key={id}\n            position={[city.latitude, city.longitude]}\n            icon={locationIcon}\n          >\n            <Popup\n              onOpen={() => setActiveLocation(id)}\n              onClose={() => setActiveLocation(null)}\n              className=\"uk-hidden\"\n            />\n          </Marker>\n        ))}\n      </Map>\n      <input\n        className=\"uk-range\"\n        type=\"range\"\n        onChange={e =>\n          setDateSlider(dateFromPercentage(e.target.value, locations))\n        }\n        value={percentageFromDate(dateSelection, locations)}\n      />\n      <label style={{ margin: 'auto' }}>\n        <DateRange\n          className=\"uk-flex-around\"\n          hideDaysCount\n          start_date={subDays(dateSelection, dateSpread)}\n          end_date={addDays(dateSelection, dateSpread)}\n        />\n      </label>\n      {!activeLocation && <p>No trip selected</p>}\n      {activeLocation && (\n        <TripCard viewOnly {...locations.find(l => l.id === activeLocation)} />\n      )}\n    </Fragment>\n  );\n};\n\nconst getDaysInRange = locations => {\n  if (locations.length === 0) {\n    return 0;\n  }\n  return differenceInDays(\n    locations[locations.length - 1].end_date,\n    locations[0].start_date\n  );\n};\n\nconst percentageFromDate = (date, locations) => {\n  const daysInRange = getDaysInRange(locations);\n  const daysFromStart = differenceInDays(date, locations[0].start_date);\n  return Math.round((daysFromStart / daysInRange) * 100);\n};\n\nconst dateFromPercentage = (percentage, locations) => {\n  const daysInRange = getDaysInRange(locations);\n  const daysFromStart = Math.round(daysInRange * (percentage / 100));\n  return addDays(locations[0].start_date, daysFromStart);\n};\n\nconst getLatLong = ({ city }) => [city.latitude, city.longitude];\n\nconst findBoundingBox = bounds => [\n  [\n    Math.min.apply(null, bounds.map(b => b[0])) - 2,\n    Math.min.apply(null, bounds.map(b => b[1])) - 2\n  ],\n  [\n    Math.max.apply(null, bounds.map(b => b[0])) + 2,\n    Math.max.apply(null, bounds.map(b => b[1])) + 2\n  ]\n];\n\nconst isWithinDaysN = (dateSelection, dateSpread) => ({\n  start_date,\n  end_date\n}) => {\n  return (\n    isWithinRange(\n      start_date,\n      subDays(dateSelection, dateSpread),\n      addDays(dateSelection, dateSpread)\n    ) ||\n    isWithinRange(\n      end_date,\n      subDays(dateSelection, dateSpread),\n      addDays(dateSelection, dateSpread)\n    )\n  );\n};\n\nexport default LocationMap;\n","import React from 'react';\n\nconst TelegramLink = ({ username }) => {\n  if (!username) {\n    return null;\n  }\n  return (\n    <a\n      className=\"uk-button telegram-link\"\n      href={`https://t.me/${username}`}\n      target=\"_blank\"\n      rel=\"no-opener\"\n    >\n      <img src=\"/telegram.svg\" alt=\"telegram-icon\" />\n      <span>Send Message</span>\n    </a>\n  );\n};\n\nexport default TelegramLink;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchUser, requestFriendship, acceptFriendRequest } from '../actions';\n\nimport Spinner from '../components/Spinner.react';\nimport FriendStatusButton from '../components/FriendStatusButton.react';\nimport LocationMap from '../components/LocationMap.react';\nimport TelegramLink from '../components/TelegramLink.react';\n\nconst UserProfile = ({\n  match,\n  users,\n  fetchUser,\n  activeUser,\n  requestFriendship,\n  acceptFriendRequest\n}) => {\n  const userId = parseInt(match.params.id, 10);\n\n  // Clone the trip\n  let user = users.all[userId];\n\n  useEffect(\n    () => {\n      // Get it from the API if:\n      //   - it is not currently fetching users\n      if (!users.isFetching && userId !== activeUser) {\n        fetchUser(userId);\n      }\n    },\n    [userId]\n  );\n\n  return (\n    <MainPanel\n      isFetching={users.isFetching}\n      user={user}\n      activeUser={activeUser}\n      onRequest={() => requestFriendship(user)}\n      onAccept={() => acceptFriendRequest(user)}\n    />\n  );\n};\n\nconst MainPanel = ({ isFetching, user, activeUser, onRequest, onAccept }) => {\n  if (isFetching || !user) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"centered-hero\">\n      <div className=\"uk-flex uk-flex-left profile-details\">\n        <div className=\"uk-flex uk-flex-left\">\n          <img\n            className=\"avatar-big uk-border-circle\"\n            alt=\"avatar\"\n            src={user.photo_url || '/blank-profile-picture.png'}\n          />\n\n          <div className=\"uk-flex uk-flex-column uk-padding\">\n            {user.username && <h4>@{user.username}</h4>}\n            <span>\n              {user.first_name.toUpperCase()} {user.last_name.toUpperCase()}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"user-icons\">\n          <FriendStatusButton\n            user={user}\n            onRequest={onRequest}\n            onAccept={onAccept}\n          />\n        </div>\n        <div className=\"user-icons\">\n          <TelegramLink username={user.username} />\n        </div>\n      </div>\n\n      <hr />\n\n      <LocationMap userId={user.id} />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ users, activeUser }) => ({\n  users,\n  activeUser\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchUser,\n    requestFriendship,\n    acceptFriendRequest\n  }\n)(UserProfile);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCities, fetchExploreSuggestions } from '../actions';\n\nimport addDays from 'date-fns/add_days';\nimport format from 'date-fns/format';\n\nimport Select from 'react-select';\nimport Flatpickr from 'react-flatpickr';\nimport ReactCountryFlag from 'react-country-flag';\n\nimport Spinner from '../components/Spinner.react';\nimport FriendChip from '../components/FriendChip.react';\n\nconst CONTINENT_OPTIONS = [\n  { label: 'Europe', value: 'EU' },\n  { label: 'North America', value: 'NA' },\n  { label: 'South America', value: 'SA' },\n  { label: 'Africa', value: 'AF' },\n  { label: 'Asia', value: 'AS' },\n  { label: 'Oceania', value: 'OC' }\n];\n\nconst Explore = ({\n  cities,\n  suggestions,\n  users,\n  fetchCities,\n  activeUser,\n  fetchExploreSuggestions\n}) => {\n  const [continent, setContinent] = useState(null);\n  const [dates, setDates] = useState([new Date(), addDays(new Date(), 7)]);\n\n  useEffect(() => {\n    if (!cities.isFetching && cities.ids.length === 0) {\n      fetchCities();\n    }\n  }, []);\n\n  useEffect(\n    () => {\n      if (continent && dates[0] && dates[1]) {\n        fetchExploreSuggestions({\n          continent: continent.value,\n          start_date: format(dates[0], 'YYYY-MM-DD'),\n          end_date: format(dates[1], 'YYYY-MM-DD')\n        });\n      }\n    },\n    [continent, dates[0], dates[1]]\n  );\n\n  if (suggestions.isFetching) {\n    return <Spinner />;\n  }\n\n  const populatedSuggestions = suggestions.ids.map(sId => {\n    const s = suggestions.all[sId];\n    const us = s.users.map(uId => users.all[uId]);\n    return {\n      city: cities.all[s.city],\n      users: us\n    };\n  });\n\n  return (\n    <Fragment>\n      <h4>FILTERS</h4>\n      <div className=\"uk-flex uk-flex-around\">\n        <Select\n          styles={{\n            container: () => ({\n              width: 250\n            }),\n            menu: provided => ({\n              ...provided,\n              top: null\n            })\n          }}\n          placeholder=\"Continent\"\n          className=\"contient-picker\"\n          isSearchAble\n          isLoading={suggestions.isFetching}\n          value={continent}\n          onChange={setContinent}\n          options={CONTINENT_OPTIONS}\n        />\n        <Flatpickr\n          className=\"uk-input uk-width-1-3@m\"\n          options={{\n            mode: 'range',\n            dateFormat: 'Y-m-d'\n          }}\n          value={dates}\n          onChange={setDates}\n        />\n      </div>\n      <h4>SUGGESTIONS</h4>\n      <SuggestionList suggestions={populatedSuggestions} />\n    </Fragment>\n  );\n};\n\nconst SuggestionList = ({ suggestions }) => {\n  if (suggestions.length === 0) {\n    return (\n      <div>\n        No suggested trips for these filters... Try another continent or date\n        range.\n      </div>\n    );\n  }\n  return (\n    <div>\n      {suggestions.map(({ city, users }) => (\n        <div\n          key={city.id}\n          className=\"uk-tile uk-padding-small uk-flex uk-flex-between uk-link-muted\"\n        >\n          <h6>\n            <ReactCountryFlag code={city.country_code} svg /> | {city.name}\n          </h6>\n          {users.map(u => <FriendChip key={u.id} {...u} />)}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ cities, suggestions, users, activeUser }) => ({\n  cities,\n  suggestions,\n  users,\n  activeUser\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchCities,\n    fetchExploreSuggestions\n  }\n)(Explore);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { withCookies } from 'react-cookie';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      rest.cookies.get('sessionid') ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login'\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default withCookies(PrivateRoute);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { stringify } from 'query-string';\nimport TelegramLoginButton from 'react-telegram-login';\n\nimport { apiUrl, botName } from '../config';\n\nclass Login extends Component {\n  state = {\n    errMsg: null\n  };\n\n  handleResponse = data => {\n    return axios({\n      url: `${apiUrl}/u/auth/?${stringify(data)}`,\n      method: 'get',\n      withCredentials: true\n    })\n      .then(res => {\n        // Pass the user data back to the main app\n        this.props.onLogin(data);\n      })\n      .catch(err => {\n        if (err.response) {\n          const errMsg =\n            (err.response.data &&\n              err.response.data.errors &&\n              err.response.data.errors[0]) ||\n            err.response;\n\n          this.setState({ errMsg });\n        } else {\n          this.setState({ errMsg: 'Unable to connect to the API' });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <section className=\"uk-flex uk-flex-center\">\n        <div className=\"uk-panel uk-panel-box uk-text-center telegram-login-container\">\n          <img\n            src=\"/logo.png\"\n            alt=\"logo\"\n            style={{ height: 55, paddingRight: 15, paddingLeft: 15 }}\n          />\n          <h1>LOCATIONLESS</h1>\n          <hr />\n          <TelegramLoginButton\n            dataOnauth={this.handleResponse}\n            botName={botName}\n          />\n          <hr />\n          <p>\n            You will need an account on\n            <a target=\"_blank\" href=\"https://telegram.org\" rel=\"no-opener\">\n              Telegram\n            </a>{' '}\n            to get started\n          </p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React, { useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withCookies } from 'react-cookie';\n\nconst Header = ({ cookies, onLogout, activeUser, history }) => {\n  if (!activeUser || !cookies.get('sessionid')) {\n    return null;\n  }\n  return (\n    <div className=\"uk-navbar-container\">\n      <nav className=\"uk-navbar uk-container\">\n        <div className=\"uk-navbar-left\">\n          <MobileNavbar\n            activeUser={activeUser}\n            onLogout={onLogout}\n            history={history}\n          />\n          <Link className=\"uk-navbar-item uk-logo\" to=\"/\">\n            <img\n              src=\"/logo.png\"\n              alt=\"logo\"\n              style={{ height: 35, paddingRight: 15, paddingLeft: 15 }}\n            />\n            Locationless\n          </Link>\n        </div>\n\n        <DesktopNavbar activeUser={activeUser} onLogout={onLogout} />\n      </nav>\n    </div>\n  );\n};\n\nconst MobileNavbar = ({ activeUser, onLogout, history }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const navigateTo = to => {\n    setIsOpen(false);\n    history.push(to);\n  };\n  const logout = () => {\n    setIsOpen(false);\n    onLogout();\n  };\n\n  return (\n    <Fragment>\n      <div\n        className=\"uk-navbar-item uk-hidden@s\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <div className=\"icono-hamburger\" onClick={() => setIsOpen(!isOpen)} />\n      </div>\n      {isOpen && (\n        <div className=\"fullscreen-mobile-menu\">\n          <ul className=\"uk-list\">\n            <li className=\"uk-navbar-item\" onClick={() => setIsOpen(!isOpen)}>\n              <div className=\"icono-cross\" />\n            </li>\n            <li\n              className=\"uk-navbar-item\"\n              onClick={() => navigateTo('/explore')}\n            >\n              <h4>EXPLORE</h4>\n            </li>\n            <li\n              className=\"uk-navbar-item\"\n              onClick={() => navigateTo('/friends')}\n            >\n              <h4>FRIENDS</h4>\n            </li>\n            <li\n              className=\"uk-navbar-item\"\n              onClick={() => navigateTo(`/users/${activeUser}`)}\n            >\n              <h4>PROFILE</h4>\n            </li>\n            <li className=\"uk-navbar-item\" onClick={() => logout()}>\n              <h4>LOGOUT</h4>\n            </li>\n          </ul>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst DesktopNavbar = ({ activeUser, onLogout }) => (\n  <div className=\"uk-navbar-right uk-visible@s\">\n    <ul className=\"uk-navbar-nav\">\n      <li className=\"uk-navbar-item\">\n        <Link to=\"/explore\">Explore</Link>\n      </li>\n      <li className=\"uk-navbar-item\">\n        <Link to=\"/friends\">Friends</Link>\n      </li>\n      <li className=\"uk-navbar-item\">\n        <Link to={`/users/${activeUser}`}>Profile</Link>\n      </li>\n      <li className=\"uk-navbar-item\">\n        <a onClick={onLogout}>Logout</a>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default withRouter(withCookies(Header));\n","export const SERVER_ERR =\n  \"Something has gone wrong. We're going to try turning it off and on again.\";\nexport const NOT_FOUND = 'Nothing to see here.';\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { withCookies } from 'react-cookie';\nimport { withRouter, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\nimport TripDashboard from './pages/TripDashboard.react';\nimport TripDetail from './pages/TripDetail.react';\nimport FriendsList from './pages/FriendsList.react';\nimport UserProfile from './pages/UserProfile.react';\nimport Explore from './pages/Explore.react';\n\nimport PrivateRoute from './components/PrivateRoute.react';\nimport Login from './components/Login.react';\nimport Header from './components/Header.react';\nimport Spinner from './components/Spinner.react';\n\nimport { setUsers, logout } from './actions';\nimport { NOT_FOUND } from './errorMessages';\n\nimport { apiUrl } from './config';\n\nimport './App.css';\nimport 'uikit/dist/css/uikit.css';\n\nclass App extends Component {\n  onLogout() {\n    this.props.cookies.remove('sessionid');\n    this.props.logout();\n    axios.post(`${apiUrl}/u/logout/`, { withCredentials: true });\n    this.props.history.push('/login');\n  }\n\n  onLogin(data) {\n    this.props.history.push('/');\n    this.props.setUsers({\n      data: {\n        ...data,\n        is_you: true\n      }\n    });\n  }\n\n  componentDidMount() {\n    const { activeUser, location } = this.props;\n\n    if (!activeUser && location.pathname !== '/login') {\n      axios\n        .get(`${apiUrl}/u/`, { withCredentials: true })\n        .then(({ data }) => this.props.setUsers({ data: data.data }))\n        .catch(err => {\n          this.props.history.push('/login');\n        });\n    }\n  }\n\n  renderAuthorTag() {\n    return (\n      <div className=\"author\">\n        <a href=\"https://jtfell.github.io\" target=\"_blank\" rel=\"noopener\">\n          by jtfell\n        </a>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.error.message) {\n      return <ErrorPage msg={this.props.error.message} />;\n    }\n\n    // Show spinner while loading the current user\n    if (!this.props.activeUser && this.props.location.pathname !== '/login') {\n      return (\n        <Fragment>\n          <Spinner />\n          {this.renderAuthorTag()}\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        <Header\n          onLogout={this.onLogout.bind(this)}\n          activeUser={this.props.activeUser}\n        />\n        <main className=\"uk-container uk-container-small uk-container-center uk-padding\">\n          <Switch>\n            <Route\n              path=\"/login\"\n              component={() => <Login onLogin={this.onLogin.bind(this)} />}\n            />\n\n            <PrivateRoute exact path=\"/\" component={TripDashboard} />\n            <PrivateRoute path=\"/trips/:id\" component={TripDetail} />\n            <PrivateRoute exact path=\"/friends\" component={FriendsList} />\n            <PrivateRoute exact path=\"/explore\" component={Explore} />\n            <PrivateRoute path=\"/users/:id\" component={UserProfile} />\n            <Route component={() => <ErrorPage msg={NOT_FOUND} hideLogo />} />\n          </Switch>\n        </main>\n\n        {this.renderAuthorTag()}\n      </Fragment>\n    );\n  }\n}\n\nconst ErrorPage = ({ msg, hideLogo }) => (\n  <main className=\"uk-container uk-container-small uk-container-center uk-padding\">\n    {!hideLogo && (\n      <a href=\"/\">\n        <img src=\"/logo.png\" alt=\"logo\" style={{ height: 85, padding: 15 }} />\n      </a>\n    )}\n    <hr />\n    <h4>{msg}</h4>\n  </main>\n);\n\nconst mapStateToProps = ({ users, activeUser, error }) => ({\n  users,\n  activeUser,\n  error\n});\n\nexport default withRouter(\n  withCookies(\n    connect(\n      mapStateToProps,\n      {\n        setUsers,\n        logout\n      }\n    )(App)\n  )\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  API_START,\n  API_END,\n  API_ERROR,\n  LOGOUT,\n  SET_USERS,\n  FETCH_USER,\n  SET_TRIPS,\n  FETCH_TRIPS,\n  REMOVE_TRIP,\n  FETCH_FRIENDS,\n  SET_CITIES,\n  FETCH_CITIES,\n  SET_EXPLORE_SUGGESTIONS\n} from '../actions/types';\n\nimport { reduceError } from './util';\n\nimport { normalize, schema } from 'normalizr';\n\nconst user = new schema.Entity('users');\nconst city = new schema.Entity('cities');\nconst match = new schema.Entity(\n  'matches',\n  {\n    user\n  },\n  {\n    idAttribute: v => `${v.user.id}::${v.start_date}::${v.end_date}`\n  }\n);\n\nconst trip = new schema.Entity(\n  'trips',\n  {\n    user,\n    city,\n    matches: [match]\n  },\n  {\n    processStrategy: (value, parent, key) => {\n      const matches = value.matches || [];\n      return { ...value, matches };\n    }\n  }\n);\n\nconst suggestion = new schema.Entity(\n  'suggestions',\n  {\n    city,\n    users: [user]\n  },\n  {\n    idAttribute: v => v.city.id\n  }\n);\n\nconst schemas = {\n  users: user,\n  cities: city,\n  trips: trip,\n  suggestions: suggestion\n};\n\nconst initialState = {\n  activeUser: null,\n\n  error: {\n    status: null,\n    message: null\n  },\n\n  trips: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false\n  },\n  cities: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false\n  },\n  users: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false\n  },\n  suggestions: {\n    ids: [],\n    all: {},\n    isFetching: false,\n    hasFetched: false\n  }\n};\n\nconst ENTITIES = ['trips', 'cities', 'users', 'suggestions'];\n\nconst insertEntities = (state, data, entity, overwrite = false) => {\n  // Make sure we have an array\n  if (!Array.isArray(data)) {\n    data = [data];\n  }\n\n  // Normalise the data\n  const normData = normalize(data, [schemas[entity]]);\n\n  const newState = { ...state };\n  Object.keys(state).forEach(e => {\n    if (!state[e] || ENTITIES.indexOf(e) === -1) {\n      return;\n    }\n\n    newState[e] = {\n      ...state[e]\n    };\n\n    // Merge in all the new objects for each entity\n    const allIds = [\n      ...new Set(\n        Object.keys(state[e].all).concat(\n          Object.keys(normData.entities[e] || {})\n        )\n      )\n    ];\n    allIds.forEach(id => {\n      newState[e].all[id] = Object.assign(\n        {},\n        state[e].all[id],\n        (normData.entities[e] || {})[id]\n      );\n    });\n  });\n\n  if (!overwrite) {\n    // Add all the new IDs to the primary entity\n    const existingIds = state[entity].ids;\n    newState[entity].ids = [...new Set(existingIds.concat(normData.result))];\n  } else {\n    newState[entity].ids = normData.result;\n  }\n\n  return newState;\n};\n\nconst TRIPS_LABELS = [FETCH_TRIPS];\nconst CITIES_LABELS = [FETCH_CITIES];\nconst USERS_LABELS = [FETCH_USER, FETCH_FRIENDS];\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOGOUT:\n      return initialState;\n    case API_ERROR:\n      return reduceError(state, action);\n\n    case REMOVE_TRIP: {\n      const trips = Object.assign({}, state.trips);\n      trips.ids = trips.ids.filter(tId => tId !== action.payload.id);\n      delete trips.all[action.payload.id];\n\n      return {\n        ...state,\n        trips\n      };\n    }\n\n    case SET_EXPLORE_SUGGESTIONS:\n      return insertEntities(\n        state,\n        action.payload.data,\n        'suggestions',\n        !!'overwrite'\n      );\n\n    case SET_TRIPS:\n      return insertEntities(state, action.payload.data, 'trips');\n\n    case SET_CITIES:\n      return insertEntities(state, action.payload.data, 'cities');\n\n    case SET_USERS: {\n      const newState = insertEntities(state, action.payload.data, 'users');\n\n      // Save the user ID of the logged in user\n      if (action.payload && action.payload.data && action.payload.data.is_you) {\n        newState.activeUser = action.payload.data.id;\n      }\n\n      return newState;\n    }\n\n    case API_START:\n      if (TRIPS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          trips: {\n            ...state.trips,\n            isFetching: true\n          }\n        };\n      }\n      if (USERS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          users: {\n            ...state.users,\n            isFetching: true\n          }\n        };\n      }\n      if (CITIES_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          cities: {\n            ...state.cities,\n            isFetching: true\n          }\n        };\n      }\n      return state;\n\n    case API_END:\n      if (TRIPS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          trips: {\n            ...state.trips,\n            isFetching: false,\n            hasFetched: true\n          }\n        };\n      }\n      if (USERS_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          users: {\n            ...state.users,\n            isFetching: false,\n            hasFetched: true\n          }\n        };\n      }\n      if (CITIES_LABELS.indexOf(action.payload) > -1) {\n        return {\n          ...state,\n          cities: {\n            ...state.cities,\n            isFetching: false,\n            hasFetched: true\n          }\n        };\n      }\n      return state;\n\n    default:\n      return state;\n  }\n}\n","import axios from 'axios';\nimport { API } from '../actions/types';\nimport { accessDenied, apiError, apiStart, apiEnd } from '../actions/api';\n\nconst apiMiddleware = ({ dispatch }) => next => action => {\n  if (!action) {\n    return;\n  }\n  next(action);\n\n  if (action.type !== API) return;\n\n  const {\n    url,\n    method,\n    data,\n    accessToken,\n    onSuccess,\n    onFailure,\n    label,\n    headers,\n    nextAction\n  } = action.payload;\n  const dataOrParams = ['GET', 'DELETE'].includes(method) ? 'params' : 'data';\n\n  // axios default configs\n  axios.defaults.baseURL = process.env.REACT_APP_BASE_URL || '';\n  axios.defaults.headers.common['Content-Type'] = 'application/json';\n  axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n\n  if (label) {\n    dispatch(apiStart(label));\n  }\n\n  axios\n    .request({\n      url,\n      method,\n      headers,\n      withCredentials: true,\n      [dataOrParams]: data\n    })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n      dispatch(nextAction(data));\n    })\n    .catch(error => {\n      dispatch(apiError(error));\n      dispatch(onFailure(error));\n\n      // TODO: Handle 404s\n\n      if (error.response && error.response.status === 401) {\n        dispatch(accessDenied(window.location.pathname));\n        // window.location = '/login';\n      }\n    })\n    .finally(() => {\n      if (label) {\n        dispatch(apiEnd(label));\n      }\n    });\n};\n\nexport default apiMiddleware;\n","import { API_START, API_END, ACCESS_DENIED, API_ERROR } from '../actions/types';\n\nexport const apiStart = label => ({\n  type: API_START,\n  payload: label\n});\n\nexport const apiEnd = label => ({\n  type: API_END,\n  payload: label\n});\n\nexport const accessDenied = url => ({\n  type: ACCESS_DENIED,\n  payload: {\n    url\n  }\n});\n\nexport const apiError = error => ({\n  type: API_ERROR,\n  error\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport thunkMiddleware from 'redux-thunk';\nimport apiMiddleware from '../middleware/api';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(apiMiddleware, thunkMiddleware))\n);\nwindow.store = store;\n\nexport default store;\n","import { SERVER_ERR, NOT_FOUND } from '../errorMessages';\n\nexport function reduceError(state, action) {\n  const err = action.error && action.error.response;\n  if (!err || err.status >= 500 || !err.status) {\n    return {\n      ...state,\n      error: {\n        status: 500,\n        message: SERVER_ERR\n      }\n    };\n  }\n\n  if (err.status === 404) {\n    return {\n      ...state,\n      error: {\n        status: 404,\n        message: NOT_FOUND\n      }\n    };\n  }\n\n  return {\n    ...state,\n    error: {\n      status: err.status,\n      message: (err.data && err.data.error) || SERVER_ERR\n    }\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport 'icono/dist/icono.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}